var documenterSearchIndex = {"docs":
[{"location":"kwargs/#Control-Variables-and-Keyword-Arguments","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"","category":"section"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"All functions that form part of the SSMProblems model interface should accept keyword arguments.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"These argument has multiple uses, but are generally used to pass in additional information to the model at inference time. Although this might seem unnecessary and clunky for simple models, this addition leads to a great amount of flexibility that allows complex and exotic models to be implemented with little effort or performance penalty.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"If your model does not require any keyword arguments, you do not need to use any in your function body (though ; kwargs... should still be included in the signature).","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"When forward-simulating, filtering or smoothing from a model, these keyword arguments are passed to the SSM definition. Some advanced algorithms such as the Rao-Blackwellised particle filter may also introduce additional keyword arguments at inference time.","category":"page"},{"location":"kwargs/#Use-as-Control-Variables","page":"Control Variables and Keyword Arguments","title":"Use as Control Variables","text":"","category":"section"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"In simple cases kwargs can be used to specify a control (or input) vector as is common in control engineering.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"In this case, the simulate function for the latent dynamics may look like this:","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"function simulate(\n    rng::AbstractRNG, \n    dyn::SimpleLatentDynamics, \n    step::Int, \n    state::Float64; \n    control::Float64,  # new keyword argument\n    kwargs...\n)\n    return state + control + rand(rng, Normal(0.0, 0.1))\nend","category":"page"},{"location":"kwargs/#Use-as-Time-Deltas","page":"Control Variables and Keyword Arguments","title":"Use as Time Deltas","text":"","category":"section"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"Keywords are not limited to be used as simple control vectors, and can in fact be used to pass in arbitrary additional information to the model at runtime. A common use case is when considering data arriving at irregular time intervals. In this case, they keyword arguments can be used to pass in the time delta between observations.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"In this case, the simulate function for the latent dynamics may look like this: ","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"function simulate(\n    rng::AbstractRNG, \n    dyn::SimpleLatentDynamics, \n    step::Int, \n    state::Float64; \n    dts::Vector{Float64},  # new keyword argument\n    kwargs...\n)\n    dt = dts[step]\n    return state + dt * rand(rng, Normal(0.1, 1.0))\nend","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"Note, that it is also possible to store this data in the latent dynamic's struct and extract it during a transition (e.g. dyn.dts[timestep]). However, this approach  has the disadvantage that the control variables must be defined when the model is instantiated. Further, this means that re-runs with new control variables require a re-instantiation of the model.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"Using keyword arguments for control variables allows for a separation between the abstract definition of the state space model and the concrete simulation or inference given specific data.","category":"page"},{"location":"kwargs/#Use-with-Streaming-Data","page":"Control Variables and Keyword Arguments","title":"Use with Streaming Data","text":"","category":"section"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"The de-coupling of model definition and data that comes from using keyword arguments makes it easy to use SSMProblems with streaming data. As control variables arrive, these can be passed to the model distributions via keyword arguments.","category":"page"},{"location":"kwargs/#Use-in-Rao-Blackwellisation","page":"Control Variables and Keyword Arguments","title":"Use in Rao-Blackwellisation","text":"","category":"section"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"Briefly, a Rao-Blackwellised particle filter is an efficient variant of the generic particle filter that can be applied to state space models that have an analytically tractable sub-model. The filter behaves as two nested filters, a regular particle filter for the outer model, and an analytic filter (e.g. Kalman filter) for the inner sub-model.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"Since the value of the keyword arguments can be defined at inference time, the outer filter can pass information to the inner filter via through these. This leads to a clean and generic interface for Rao-Blackwellised filtering, which is not possible with other state space model packages.","category":"page"},{"location":"#SSMProblems","page":"Home","title":"SSMProblems","text":"","category":"section"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In the julia REPL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add SSMProblems","category":"page"},{"location":"#Documentation","page":"Home","title":"Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SSMProblems defines a generic interface for state space models (SSMs). Its main objective is to provide a consistent interface for filtering and smoothing algorithms to interact with.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Consider a standard (Markovian) state-space model from[Murray]: (Image: state space model)","category":"page"},{"location":"","page":"Home","title":"Home","text":"[Murray]: Murray, Lawrence & Lee, Anthony & Jacob, Pierre. (2013). Rethinking resampling in the particle filter on graphics processing units.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The following three distributions fully specify the model:","category":"page"},{"location":"","page":"Home","title":"Home","text":"The initialisation distribution, f_0, for the initial latent state X_0\nThe transition distribution, f, for the latent state X_t given the previous X_t-1\nThe observation distribution, g, for an observation Y_t given the state X_t","category":"page"},{"location":"","page":"Home","title":"Home","text":"The dynamics of the model are given by,","category":"page"},{"location":"","page":"Home","title":"Home","text":"beginaligned\nx_0 sim f_0(x_0) \nx_t  x_t-1 sim f(x_t  x_t-1) \ny_t  x_t sim g(y_t  x_t)\nendaligned","category":"page"},{"location":"","page":"Home","title":"Home","text":"and the joint law is,","category":"page"},{"location":"","page":"Home","title":"Home","text":"p(x_0T y_0T) = f_0(x_0) prod_t g(y_t  x_t) f(x_t  x_t-1)","category":"page"},{"location":"","page":"Home","title":"Home","text":"We can consider a state space model as being made up of two components:","category":"page"},{"location":"","page":"Home","title":"Home","text":"A latent Markov chain describing the evolution of the latent state\nAn observation process describing the relationship between the latent states and the observations","category":"page"},{"location":"","page":"Home","title":"Home","text":"Through this lens, we see that the distributions f_0, f fully describe the latent Markov chain, whereas g describes the observation process.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A user of SSMProblems may define these three distributions directly. Alternatively, they can define a subset of methods for sampling and evaluating log-densities of the distributions, depending on the requirements of the filtering/smoothing algorithms they intend to use.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Using the first approach, we can define a simple linear state space model as follows:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Distributions\nusing SSMProblems\n\nstruct SimpleLatentDynamics <: LatentDynamics end\n\nfunction distribution(rng::AbstractRNG, dyn::SimpleLatentDynamics; kwargs...)\n    return Normal(0.0, 1.0)\nend\n\nfunction distribution(rng::AbstractRNG, dyn::SimpleLatentDynamics, step::Int, state::Float64; kwargs...)\n    return Normal(state, 0.1)\nend\n\nstruct SimpleObservationProcess <: ObservationProcess end\n\nfunction distribution(\n    obs::SimpleObservationPRocess, step::Int, state::Float64, observation::Float64; kwargs...\n)\n    return Normal(state, 0.5)\nend\n\n# Construct an SSM from the components\ndyn = SimpleLatentDynamics()\nobs = SimpleObservationProcess()\nmodel = StateSpaceModel(dyn, obs)","category":"page"},{"location":"","page":"Home","title":"Home","text":"There are a few things to note here:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Two methods must be defined for the LatentDynamics, one containing step/state arguments and used for transitioning, and one without these, used for initialisation.\nEvery function should accept keyword arguments. This is key feature of SSMProblems that allows it to flexibly represent more exotic models without any performance penalty. You can read more about it here.\nIf your latent dynamics and observation process cannot be represented as a Distribution object, you may implement specific methods for sampling and log-density evaluation as documented below.","category":"page"},{"location":"","page":"Home","title":"Home","text":"These distribution definitions are used to define simulate and logdensity methods for the latent dynamics and observation process. Package users can then interact with the state space model through these functions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For example, a bootstrap filter targeting the filtering distribution p(x_t  y_0t) using N particles would roughly follow:","category":"page"},{"location":"","page":"Home","title":"Home","text":"dyn, obs = model.dyn, model.obs\n\nfor (i, observation) in enumerate(observations)\n    idx = resample(rng, log_weights)\n    particles = particles[idx]\n    for i in 1:N\n        particles[i] = simulate(rng, dyn, i, particles[i])\n        log_weights[i] += logdensity(obs, i, particles[i], observation)\n    end\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"For more thorough examples, see the provided example scripts.","category":"page"},{"location":"#Interface","page":"Home","title":"Interface","text":"","category":"section"},{"location":"#SSMProblems.AbstractStateSpaceModel","page":"Home","title":"SSMProblems.AbstractStateSpaceModel","text":"An abstract type for state space models.\n\nAny concrete subtype of AbstractStateSpaceModel should implement a method for AbstractMCMC.sample which performs forward simulation. For an example implementation, see AbstractMCMC.sample(::StateSpaceModel).\n\nFor most regular use-cases, the predefined StateSpaceModel type, documented below, should be sufficient.\n\n\n\n\n\n","category":"type"},{"location":"#SSMProblems.LatentDynamics","page":"Home","title":"SSMProblems.LatentDynamics","text":"Latent dynamics of a state space model.\n\nAny concrete subtype of LatentDynamics should implement the functions logdensity and simulate for transition dynamics. Whether each of these functions need to be implemented depends on the exact inference algorithm that is intended to be used.\n\nAlternatively, you may specify a method for the function distribution which will be used to define the above methods.\n\nAll of these methods should accept keyword arguments through kwargs... to facilitate inference-time dependencies of the dynamics as explained in Control Variables and Keyword Arguments.\n\n\n\n\n\n","category":"type"},{"location":"#SSMProblems.ObservationProcess","page":"Home","title":"SSMProblems.ObservationProcess","text":"Observation process of a state space model.\n\nAny concrete subtype of ObservationProcess must implement the logdensity method, as defined below. Optionally, it may also implement simulate for use in forward simulation of the state space model.\n\nAlternatively, you may specify a method for distribution, which will be used to define both of the above methods.\n\nAll of these methods should accept keyword arguments through kwargs... to facilitate inference-time dependencies of the observations as explained in Control Variables and Keyword Arguments.\n\n\n\n\n\n","category":"type"},{"location":"#SSMProblems.StatePrior","page":"Home","title":"SSMProblems.StatePrior","text":"Initial state prior of a state space model.\n\nAny concrete subtype of StatePrior should implement the functions logdensity and simulate as defined below.\n\nAlternatively, you may specify a method for the function distribution which will be used to define the above methods.\n\n\n\n\n\n","category":"type"},{"location":"#SSMProblems.StateSpaceModel","page":"Home","title":"SSMProblems.StateSpaceModel","text":"A state space model.\n\nA vanilla implementation of a state space model, composed of an initail state prior, latent dynamics and an observation process.\n\nFields\n\nprior::PT: The initial state prior fo the state space model.\ndyn::LD: The latent dynamics of the state space model.\nobs::OP: The observation process of the state space model.\n\nParameters\n\nPT: The type of the initial state prior.\nLD: The type of the latent dynamics.\nOP: The type of the observation process.\n\n\n\n\n\n","category":"type"},{"location":"#SSMProblems.batch_logdensity-Tuple{Random.AbstractRNG, LatentDynamics, Any}","page":"Home","title":"SSMProblems.batch_logdensity","text":"batch_logdensity([rng::AbstractRNG], dyn::LatentDynamics, new_states; kwargs...)\n\nCompute the log-densities of a batch of initial states for the latent dynamics.\n\nThe method should return the log-densities of a batch of initial states `new_states`\nfor the initial time step of the latent dynamics.\n\nSee also [`LatentDynamics`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_logdensity-Tuple{Random.AbstractRNG, LatentDynamics, Integer, Any, Any}","page":"Home","title":"SSMProblems.batch_logdensity","text":"batch_logdensity([rng::AbstractRNG], dyn::LatentDynamics, step::Integer, prev_states, new_states; kwargs...)\n\nCompute the log-densities of a batch of transitions of the latent dynamics.\n\nThe method should return the log-densities of a batch of states `new_states` for the\ncurrent time step, `step`, given the previous states, `prev_states`.\n\nSee also [`LatentDynamics`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_logdensity-Tuple{Random.AbstractRNG, ObservationProcess, Integer, Any, Any}","page":"Home","title":"SSMProblems.batch_logdensity","text":"batch_logdensity([rng::AbstractRNG], obs::ObservationProcess, step::Integer, state, observations; kwargs...)\n\nCompute the log-densities of a batch of observations given the current states.\n\nThe method should return the log-densities of a batch of observations `observations`\ngiven the current states `states` at time step `step`.\n\nSee also [`ObservationProcess`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_simulate-Tuple{Random.AbstractRNG, LatentDynamics, Integer, Any}","page":"Home","title":"SSMProblems.batch_simulate","text":"batch_simulate([rng::AbstractRNG], dyn::LatentDynamics, step::Integer, prev_states; kwargs...)\n\nSimulate a batch of transitions of the latent dynamics.\n\nThe method should return a batch of random states for the current time step, `step`,\ngiven the previous states, `prev_states`.\n\nSee also [`LatentDynamics`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_simulate-Tuple{Random.AbstractRNG, LatentDynamics, Integer}","page":"Home","title":"SSMProblems.batch_simulate","text":"batch_simulate([rng::AbstractRNG], dyn::LatentDynamics, N::Integer; kwargs...)\n\nSimulate a batch of initial states for the latent dynamics.\n\nThe method should return a batch of random initial states for the first time step of the\nlatent dynamics. The batch size is determined by the `N` argument.\n\nSee also [`LatentDynamics`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_simulate-Tuple{Random.AbstractRNG, ObservationProcess, Integer, Any}","page":"Home","title":"SSMProblems.batch_simulate","text":"batch_simulate([rng::AbstractRNG], obs::ObservationProcess, step::Integer, states; kwargs...)\n\nSimulate a batch of observations given the current states.\n\nThe method should return a batch of random observations given the current states\n`states` at time step `step`.\n\nSee also [`ObservationProcess`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.distribution-Tuple{LatentDynamics, Integer, Any}","page":"Home","title":"SSMProblems.distribution","text":"distribution(dyn::LatentDynamics, step::Integer, prev_state; kwargs...)\n\nReturn the transition distribution for the latent dynamics.\n\nThe method should return the distribution of the current state (at time step step) given  the previous state prev_state. The returned value should be a Distributions.Distribution object that implements sampling and log-density calculations. \n\nSee also LatentDynamics.\n\nReturns\n\nDistributions.Distribution: The distribution of the new state.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.distribution-Tuple{ObservationProcess, Integer, Any}","page":"Home","title":"SSMProblems.distribution","text":"distribution(obs::ObservationProcess, step::Integer, state; kwargs...)\n\nReturn the observation distribution for the observation process.\n\nThe method should return the distribution of an observation given the current state state at time step step. The returned value should be a Distributions.Distribution object that implements sampling and log-density calculations.\n\nSee also ObservationProcess.\n\nReturns\n\nDistributions.Distribution: The distribution of the observation.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.distribution-Tuple{StatePrior}","page":"Home","title":"SSMProblems.distribution","text":"distribution(prior::StatePrior; kwargs...)\n\nReturn the transition distribution for the latent dynamics.\n\nThe method should return the distribution of the initial state of the latent dynamics.  The returned value should be a Distributions.Distribution object that implements sampling and log-density calculations. \n\nSee also StatePrior.\n\nReturns\n\nDistributions.Distribution: The distribution of the initial state.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.logdensity-Tuple{LatentDynamics, Integer, Any, Any}","page":"Home","title":"SSMProblems.logdensity","text":"logdensity(dyn::LatentDynamics, step::Integer, prev_state, new_state; kwargs...)\n\nCompute the log-density of a transition of the latent dynamics.\n\nThe method should return the log-density of the new state new_state (at time step step) given the previous state prev_state \n\nThe default behaviour is to compute the log-density of the distribution return by the corresponding distribution() method.\n\nSee also LatentDynamics.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.logdensity-Tuple{ObservationProcess, Integer, Any, Any}","page":"Home","title":"SSMProblems.logdensity","text":"logdensity(obs::ObservationProcess, step::Integer, state, observation; kwargs...)\n\nCompute the log-density of an observation given the current state.\n\nThe method should return the log-density of the observation observation given the current state state at time step step.\n\nThe default behaviour is to compute the log-density of the distribution return by the corresponding distribution() method.\n\nSee also ObservationProcess.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.simulate-Tuple{Random.AbstractRNG, LatentDynamics, Integer, Any}","page":"Home","title":"SSMProblems.simulate","text":"simulate([rng::AbstractRNG], dyn::LatentDynamics, step::Integer, prev_state; kwargs...)\n\nSimulate a transition of the latent dynamics.\n\nThe method should return a random state for the current time step, step,  given the previous state, prev_state.\n\nThe default behaviour is generate a random sample from distribution returned by the corresponding distribution() method.\n\nSee also LatentDynamics.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.simulate-Tuple{Random.AbstractRNG, ObservationProcess, Integer, Any}","page":"Home","title":"SSMProblems.simulate","text":"simulate([rng::AbstractRNG], process::ObservationProcess, step::Integer, state; kwargs...)\n\nSimulate an observation given the current state.\n\nThe method should return a random observation given the current state state at time step step.\n\nThe default behaviour is generate a random sample from distribution returned by the corresponding distribution() method.\n\nSee also ObservationProcess.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.simulate-Tuple{Random.AbstractRNG, StatePrior}","page":"Home","title":"SSMProblems.simulate","text":"simulate([rng::AbstractRNG], prior::StatePrior; kwargs...)\n\nSimulate an initial state for the latent dynamics.\n\nThe method should return a random initial state for the first time step of the latent dynamics.\n\nThe default behaviour is generate a random sample from distribution returned by the corresponding distribution() method.\n\nSee also StatePrior.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.sample-Tuple{AbstractStateSpaceModel, Integer}","page":"Home","title":"StatsBase.sample","text":"sample(model::AbstractStateSpaceModel, T::Integer; kwargs...)\n\nSimulate a trajectory using the default random number generator.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.sample-Tuple{Random.AbstractRNG, StateSpaceModel, Integer}","page":"Home","title":"StatsBase.sample","text":"sample([rng::AbstractRNG], model::StateSpaceModel, T::Integer; kwargs...)\n\nSimulate a trajectory of length T from the state space model.\n\nReturns a tuple (xs, ys) where xs is a vector of latent states (including the initial state) and ys is a vector of observations.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.SSMProblems","page":"Home","title":"SSMProblems.SSMProblems","text":"A unified interface to define state space models in the context of particle MCMC algorithms.\n\n\n\n\n\n","category":"module"},{"location":"examples/kalman-filter/#Kalman-Filter","page":"Kalman Filter","title":"Kalman Filter","text":"","category":"section"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"This example implements a Kalman filter for a linear Gaussian state space model using the SSMProblems interface.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"using AbstractMCMC\nusing Distributions\nusing LinearAlgebra\nusing Plots\nusing Random\nusing UnPack\n\nusing SSMProblems","category":"page"},{"location":"examples/kalman-filter/#Model-Definition","page":"Kalman Filter","title":"Model Definition","text":"","category":"section"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We start by defining structs to store the paramaters for our specific latent dynamics and observation process.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"The latent dynamics have the following form:","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"x[0] = z + ϵ,                 ϵ    ∼ N(0, P)\nx[k] = Φx[k-1] + b + w[k],    w[k] ∼ N(0, Q)","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We store all of these paramaters in a struct.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"struct GaussianPrior{XT<:AbstractVector,ΣT<:AbstractMatrix} <: StatePrior\n    x::XT\n    Σ::ΣT\nend\n\nstruct LinearGaussianLatentDynamics{\n    ΦT<:AbstractMatrix,bT<:AbstractArray,QT<:AbstractMatrix\n} <: LatentDynamics\n    Φ::ΦT\n    b::bT\n    Q::QT\nend","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Note, that our specific dynamics should be subtypes of the abstract LatentDynamics type. Importantly, consider the type parameters used. Whereas the type parameter(s) of our struct can be whatever is/are most suitable, the type parameters of LatentDynamics should reflect arithmetic type and the type of our latent state, respectively. In this case, since we are considering a multi-dimensional problem, we use Vector{T} for the latter.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Similarly, the observation process is defined by the following equation:","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"y[k] = Hx[k] + v[k],          v[k] ∼ N(0, R)","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"struct LinearGaussianObservationProcess{HT<:AbstractMatrix,RT<:AbstractMatrix} <:\n       ObservationProcess\n    H::HT\n    R::RT\nend","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We then define general transition and observation distributions to be used in forward simulation. If our model were time-inhomogenous, we could make our distribution functions depend on the step argument or pass in control variables via keyword arguments.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Even if we did not require forward simulation (e.g. we were given observations), it is still useful to define these methods as they allow us to run a particle filter on our model with no additional implementation required. Although a Kalman filter would generally be preferred in this linear Gaussian case, it may be of interest to compare the sampling performance with a general particle filter.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"function SSMProblems.distribution(prior::GaussianPrior; kwargs...)\n    return MvNormal(prior.x, prior.Σ)\nend\n\nfunction SSMProblems.distribution(\n    model::LinearGaussianLatentDynamics, step::Int, prev_state::AbstractVector; kwargs...\n)\n    return MvNormal(model.Φ * prev_state + model.b, model.Q)\nend\n\nfunction SSMProblems.distribution(\n    model::LinearGaussianObservationProcess, step::Int, state::AbstractVector; kwargs...\n)\n    return MvNormal(model.H * state, model.R)\nend","category":"page"},{"location":"examples/kalman-filter/#Filtering-Algorithm","page":"Kalman Filter","title":"Filtering Algorithm","text":"","category":"section"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We define a concrete type to represent our sampling algorithm. This is used for dispatch to, say, distinguish from using a generic particle filter.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"struct KalmanFilter end","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"A Kalman filter is only valid for linear Gaussian state space models, so we define an alias for an SSM with linear Gaussian latent dynamics and observation process, which will be used to dispatch to the correct method.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"const LinearGaussianSSM = StateSpaceModel{\n    <:GaussianPrior,<:LinearGaussianLatentDynamics,<:LinearGaussianObservationProcess\n};","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We then define a method for the sample function. This is a standardised interface which requires the model we are sampling from, the sampling algorithm as well as the observations and any keyword arguments which will be passed to the distribution functions.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Note, that if our model were time-inhomogenous, we we need our model vectors/matrices (e.g. A, b) to depend on the step variable t or the control variables. To make our filtering algorithm generic, we should not handle this within the sample function. Instead, we would pass this responsibility to the model by defining functions of the form calc_A(model, t; kwargs...) etc.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"function AbstractMCMC.sample(\n    model::LinearGaussianSSM, ::KalmanFilter, observations::AbstractVector; kwargs...\n)\n    # Extract parameters\n    @unpack Φ, b, Q = model.dyn\n    @unpack H, R = model.obs\n    @unpack x, Σ = model.prior\n\n    T = length(observations)\n    x_filts = Vector{typeof(x)}(undef, T)\n    Σ_filts = Vector{typeof(Σ)}(undef, T)\n\n    for t in 1:T\n        # Prediction step\n        x = Φ * x + b\n        Σ = Φ * Σ * Φ' + Q\n\n        # Update step\n        y = observations[t]\n        K = Σ * H' / (H * Σ * H' + R)\n        x = x + K * (y - H * x)\n        Σ = Σ - K * H * Σ\n\n        x_filts[t] = x\n        Σ_filts[t] = Σ\n    end\n\n    return x_filts, Σ_filts\nend","category":"page"},{"location":"examples/kalman-filter/#Simulation-and-Filtering","page":"Kalman Filter","title":"Simulation and Filtering","text":"","category":"section"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We define the parameters for our model as so.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"SEED = 1;\nT = 100;\nx = [-1.0, 1.0];\nΣ = Matrix(1.0I, 2, 2);\nΦ = [0.8 0.2; -0.1 0.8];\nb = zeros(2);\nQ = [0.2 0.0; 0.0 0.5];\nH = [1.0 0.0;];\nR = Matrix(0.3I, 1, 1);","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We can then construct the latent dynamics and observation process, before combining these to form a state space model.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"prior = GaussianPrior(x, Σ);\ndyn = LinearGaussianLatentDynamics(Φ, b, Q);\nobs = LinearGaussianObservationProcess(H, R);\nmodel = StateSpaceModel(prior, dyn, obs);","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Synthetic data can be generated by directly sampling from the model. This calls a utility function from the SSMProblems package, which in turn, calls the three distribution functions we defined above.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"rng = MersenneTwister(SEED);\nx0, xs, ys = sample(rng, model, T);","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"@code_warntype sample(rng, model, T)","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We can then run the Kalman filter and plot the filtering results against the ground truth.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"x_filts, P_filts = AbstractMCMC.sample(model, KalmanFilter(), ys);","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"@code_warntype AbstractMCMC.sample(model, KalmanFilter(), ys);","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Plot trajectory for first dimension","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"p = plot(; title=\"First Dimension Kalman Filter Estimates\", xlabel=\"Step\", ylabel=\"Value\")\nplot!(p, first.(xs); label=\"Truth\")\nscatter!(p, first.(ys); label=\"Observations\")\nplot!(\n    p,\n    1:T,\n    first.(x_filts);\n    ribbon=sqrt.(first.(P_filts)),\n    label=\"Filtered (±1σ)\",\n    fillalpha=0.2,\n)","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip450\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip450)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip451\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip450)\" d=\"M210.746 1423.18 L2352.76 1423.18 L2352.76 123.472 L210.746 123.472  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip452\">\n    <rect x=\"210\" y=\"123\" width=\"2143\" height=\"1301\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"250.957,1423.18 250.957,123.472 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"761.251,1423.18 761.251,123.472 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1271.55,1423.18 1271.55,123.472 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1781.84,1423.18 1781.84,123.472 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2292.13,1423.18 2292.13,123.472 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,1324.01 2352.76,1324.01 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,1112.95 2352.76,1112.95 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,901.895 2352.76,901.895 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,690.837 2352.76,690.837 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,479.779 2352.76,479.779 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,268.721 2352.76,268.721 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,1423.18 2352.76,1423.18 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"250.957,1423.18 250.957,1404.28 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"761.251,1423.18 761.251,1404.28 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1271.55,1423.18 1271.55,1404.28 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1781.84,1423.18 1781.84,1404.28 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2292.13,1423.18 2292.13,1404.28 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M250.957 1454.1 Q247.346 1454.1 245.517 1457.66 Q243.712 1461.2 243.712 1468.33 Q243.712 1475.44 245.517 1479.01 Q247.346 1482.55 250.957 1482.55 Q254.591 1482.55 256.397 1479.01 Q258.226 1475.44 258.226 1468.33 Q258.226 1461.2 256.397 1457.66 Q254.591 1454.1 250.957 1454.1 M250.957 1450.39 Q256.767 1450.39 259.823 1455 Q262.901 1459.58 262.901 1468.33 Q262.901 1477.06 259.823 1481.67 Q256.767 1486.25 250.957 1486.25 Q245.147 1486.25 242.068 1481.67 Q239.013 1477.06 239.013 1468.33 Q239.013 1459.58 242.068 1455 Q245.147 1450.39 250.957 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M740.522 1481.64 L756.841 1481.64 L756.841 1485.58 L734.897 1485.58 L734.897 1481.64 Q737.559 1478.89 742.142 1474.26 Q746.749 1469.61 747.929 1468.27 Q750.175 1465.74 751.054 1464.01 Q751.957 1462.25 751.957 1460.56 Q751.957 1457.8 750.013 1456.07 Q748.091 1454.33 744.99 1454.33 Q742.791 1454.33 740.337 1455.09 Q737.906 1455.86 735.129 1457.41 L735.129 1452.69 Q737.953 1451.55 740.406 1450.97 Q742.86 1450.39 744.897 1450.39 Q750.267 1450.39 753.462 1453.08 Q756.656 1455.77 756.656 1460.26 Q756.656 1462.39 755.846 1464.31 Q755.059 1466.2 752.953 1468.8 Q752.374 1469.47 749.272 1472.69 Q746.17 1475.88 740.522 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M766.702 1451.02 L785.059 1451.02 L785.059 1454.96 L770.985 1454.96 L770.985 1463.43 Q772.003 1463.08 773.022 1462.92 Q774.04 1462.73 775.059 1462.73 Q780.846 1462.73 784.225 1465.9 Q787.605 1469.08 787.605 1474.49 Q787.605 1480.07 784.133 1483.17 Q780.661 1486.25 774.341 1486.25 Q772.165 1486.25 769.897 1485.88 Q767.652 1485.51 765.244 1484.77 L765.244 1480.07 Q767.327 1481.2 769.55 1481.76 Q771.772 1482.32 774.249 1482.32 Q778.253 1482.32 780.591 1480.21 Q782.929 1478.1 782.929 1474.49 Q782.929 1470.88 780.591 1468.77 Q778.253 1466.67 774.249 1466.67 Q772.374 1466.67 770.499 1467.08 Q768.647 1467.5 766.702 1468.38 L766.702 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1246.24 1451.02 L1264.6 1451.02 L1264.6 1454.96 L1250.53 1454.96 L1250.53 1463.43 Q1251.55 1463.08 1252.56 1462.92 Q1253.58 1462.73 1254.6 1462.73 Q1260.39 1462.73 1263.77 1465.9 Q1267.15 1469.08 1267.15 1474.49 Q1267.15 1480.07 1263.67 1483.17 Q1260.2 1486.25 1253.88 1486.25 Q1251.71 1486.25 1249.44 1485.88 Q1247.19 1485.51 1244.79 1484.77 L1244.79 1480.07 Q1246.87 1481.2 1249.09 1481.76 Q1251.31 1482.32 1253.79 1482.32 Q1257.8 1482.32 1260.13 1480.21 Q1262.47 1478.1 1262.47 1474.49 Q1262.47 1470.88 1260.13 1468.77 Q1257.8 1466.67 1253.79 1466.67 Q1251.92 1466.67 1250.04 1467.08 Q1248.19 1467.5 1246.24 1468.38 L1246.24 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1286.36 1454.1 Q1282.75 1454.1 1280.92 1457.66 Q1279.11 1461.2 1279.11 1468.33 Q1279.11 1475.44 1280.92 1479.01 Q1282.75 1482.55 1286.36 1482.55 Q1289.99 1482.55 1291.8 1479.01 Q1293.63 1475.44 1293.63 1468.33 Q1293.63 1461.2 1291.8 1457.66 Q1289.99 1454.1 1286.36 1454.1 M1286.36 1450.39 Q1292.17 1450.39 1295.23 1455 Q1298.3 1459.58 1298.3 1468.33 Q1298.3 1477.06 1295.23 1481.67 Q1292.17 1486.25 1286.36 1486.25 Q1280.55 1486.25 1277.47 1481.67 Q1274.42 1477.06 1274.42 1468.33 Q1274.42 1459.58 1277.47 1455 Q1280.55 1450.39 1286.36 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1755.69 1451.02 L1777.92 1451.02 L1777.92 1453.01 L1765.37 1485.58 L1760.48 1485.58 L1772.29 1454.96 L1755.69 1454.96 L1755.69 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1787.08 1451.02 L1805.44 1451.02 L1805.44 1454.96 L1791.36 1454.96 L1791.36 1463.43 Q1792.38 1463.08 1793.4 1462.92 Q1794.42 1462.73 1795.44 1462.73 Q1801.23 1462.73 1804.61 1465.9 Q1807.98 1469.08 1807.98 1474.49 Q1807.98 1480.07 1804.51 1483.17 Q1801.04 1486.25 1794.72 1486.25 Q1792.54 1486.25 1790.28 1485.88 Q1788.03 1485.51 1785.62 1484.77 L1785.62 1480.07 Q1787.71 1481.2 1789.93 1481.76 Q1792.15 1482.32 1794.63 1482.32 Q1798.63 1482.32 1800.97 1480.21 Q1803.31 1478.1 1803.31 1474.49 Q1803.31 1470.88 1800.97 1468.77 Q1798.63 1466.67 1794.63 1466.67 Q1792.75 1466.67 1790.88 1467.08 Q1789.03 1467.5 1787.08 1468.38 L1787.08 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2251.74 1481.64 L2259.38 1481.64 L2259.38 1455.28 L2251.07 1456.95 L2251.07 1452.69 L2259.33 1451.02 L2264.01 1451.02 L2264.01 1481.64 L2271.65 1481.64 L2271.65 1485.58 L2251.74 1485.58 L2251.74 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2291.09 1454.1 Q2287.48 1454.1 2285.65 1457.66 Q2283.85 1461.2 2283.85 1468.33 Q2283.85 1475.44 2285.65 1479.01 Q2287.48 1482.55 2291.09 1482.55 Q2294.73 1482.55 2296.53 1479.01 Q2298.36 1475.44 2298.36 1468.33 Q2298.36 1461.2 2296.53 1457.66 Q2294.73 1454.1 2291.09 1454.1 M2291.09 1450.39 Q2296.9 1450.39 2299.96 1455 Q2303.04 1459.58 2303.04 1468.33 Q2303.04 1477.06 2299.96 1481.67 Q2296.9 1486.25 2291.09 1486.25 Q2285.28 1486.25 2282.2 1481.67 Q2279.15 1477.06 2279.15 1468.33 Q2279.15 1459.58 2282.2 1455 Q2285.28 1450.39 2291.09 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2321.25 1454.1 Q2317.64 1454.1 2315.81 1457.66 Q2314.01 1461.2 2314.01 1468.33 Q2314.01 1475.44 2315.81 1479.01 Q2317.64 1482.55 2321.25 1482.55 Q2324.89 1482.55 2326.69 1479.01 Q2328.52 1475.44 2328.52 1468.33 Q2328.52 1461.2 2326.69 1457.66 Q2324.89 1454.1 2321.25 1454.1 M2321.25 1450.39 Q2327.06 1450.39 2330.12 1455 Q2333.2 1459.58 2333.2 1468.33 Q2333.2 1477.06 2330.12 1481.67 Q2327.06 1486.25 2321.25 1486.25 Q2315.44 1486.25 2312.36 1481.67 Q2309.31 1477.06 2309.31 1468.33 Q2309.31 1459.58 2312.36 1455 Q2315.44 1450.39 2321.25 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1242.06 1522.08 L1242.06 1528.35 Q1238.4 1526.6 1235.15 1525.74 Q1231.91 1524.88 1228.88 1524.88 Q1223.63 1524.88 1220.77 1526.92 Q1217.93 1528.96 1217.93 1532.71 Q1217.93 1535.87 1219.81 1537.49 Q1221.72 1539.08 1227.01 1540.07 L1230.89 1540.86 Q1238.08 1542.23 1241.49 1545.7 Q1244.93 1549.14 1244.93 1554.93 Q1244.93 1561.84 1240.28 1565.4 Q1235.66 1568.97 1226.72 1568.97 Q1223.35 1568.97 1219.53 1568.2 Q1215.74 1567.44 1211.66 1565.94 L1211.66 1559.32 Q1215.58 1561.52 1219.34 1562.63 Q1223.09 1563.75 1226.72 1563.75 Q1232.23 1563.75 1235.22 1561.58 Q1238.21 1559.42 1238.21 1555.41 Q1238.21 1551.91 1236.05 1549.93 Q1233.91 1547.96 1229.01 1546.97 L1225.1 1546.21 Q1217.9 1544.78 1214.69 1541.72 Q1211.47 1538.67 1211.47 1533.22 Q1211.47 1526.92 1215.9 1523.29 Q1220.35 1519.66 1228.15 1519.66 Q1231.49 1519.66 1234.96 1520.27 Q1238.43 1520.87 1242.06 1522.08 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1260.49 1522.27 L1260.49 1532.4 L1272.55 1532.4 L1272.55 1536.95 L1260.49 1536.95 L1260.49 1556.3 Q1260.49 1560.66 1261.67 1561.9 Q1262.88 1563.14 1266.54 1563.14 L1272.55 1563.14 L1272.55 1568.04 L1266.54 1568.04 Q1259.76 1568.04 1257.18 1565.53 Q1254.6 1562.98 1254.6 1556.3 L1254.6 1536.95 L1250.3 1536.95 L1250.3 1532.4 L1254.6 1532.4 L1254.6 1522.27 L1260.49 1522.27 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1310.75 1548.76 L1310.75 1551.62 L1283.82 1551.62 Q1284.2 1557.67 1287.45 1560.85 Q1290.73 1564 1296.55 1564 Q1299.93 1564 1303.08 1563.17 Q1306.26 1562.35 1309.38 1560.69 L1309.38 1566.23 Q1306.23 1567.57 1302.92 1568.27 Q1299.61 1568.97 1296.2 1568.97 Q1287.67 1568.97 1282.67 1564 Q1277.71 1559.04 1277.71 1550.57 Q1277.71 1541.82 1282.42 1536.69 Q1287.16 1531.54 1295.18 1531.54 Q1302.38 1531.54 1306.55 1536.18 Q1310.75 1540.8 1310.75 1548.76 M1304.89 1547.04 Q1304.83 1542.23 1302.18 1539.37 Q1299.57 1536.5 1295.25 1536.5 Q1290.34 1536.5 1287.38 1539.27 Q1284.46 1542.04 1284.01 1547.07 L1304.89 1547.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1326.02 1562.7 L1326.02 1581.6 L1320.14 1581.6 L1320.14 1532.4 L1326.02 1532.4 L1326.02 1537.81 Q1327.87 1534.62 1330.67 1533.1 Q1333.5 1531.54 1337.42 1531.54 Q1343.91 1531.54 1347.95 1536.69 Q1352.03 1541.85 1352.03 1550.25 Q1352.03 1558.65 1347.95 1563.81 Q1343.91 1568.97 1337.42 1568.97 Q1333.5 1568.97 1330.67 1567.44 Q1327.87 1565.88 1326.02 1562.7 M1345.95 1550.25 Q1345.95 1543.79 1343.28 1540.13 Q1340.63 1536.44 1335.99 1536.44 Q1331.34 1536.44 1328.67 1540.13 Q1326.02 1543.79 1326.02 1550.25 Q1326.02 1556.71 1328.67 1560.4 Q1331.34 1564.07 1335.99 1564.07 Q1340.63 1564.07 1343.28 1560.4 Q1345.95 1556.71 1345.95 1550.25 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,1423.18 210.746,123.472 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,1324.01 229.644,1324.01 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,1112.95 229.644,1112.95 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,901.895 229.644,901.895 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,690.837 229.644,690.837 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,479.779 229.644,479.779 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,268.721 229.644,268.721 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M114.631 1324.46 L144.306 1324.46 L144.306 1328.4 L114.631 1328.4 L114.631 1324.46 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M158.427 1337.36 L174.746 1337.36 L174.746 1341.29 L152.802 1341.29 L152.802 1337.36 Q155.464 1334.6 160.047 1329.97 Q164.653 1325.32 165.834 1323.98 Q168.079 1321.45 168.959 1319.72 Q169.862 1317.96 169.862 1316.27 Q169.862 1313.51 167.917 1311.78 Q165.996 1310.04 162.894 1310.04 Q160.695 1310.04 158.241 1310.81 Q155.811 1311.57 153.033 1313.12 L153.033 1308.4 Q155.857 1307.26 158.311 1306.69 Q160.765 1306.11 162.802 1306.11 Q168.172 1306.11 171.366 1308.79 Q174.561 1311.48 174.561 1315.97 Q174.561 1318.1 173.751 1320.02 Q172.964 1321.92 170.857 1324.51 Q170.278 1325.18 167.177 1328.4 Q164.075 1331.59 158.427 1337.36 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M114.26 1113.4 L143.936 1113.4 L143.936 1117.34 L114.26 1117.34 L114.26 1113.4 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M154.839 1126.3 L162.477 1126.3 L162.477 1099.93 L154.167 1101.6 L154.167 1097.34 L162.431 1095.67 L167.107 1095.67 L167.107 1126.3 L174.746 1126.3 L174.746 1130.23 L154.839 1130.23 L154.839 1126.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M162.802 887.694 Q159.19 887.694 157.362 891.259 Q155.556 894.8 155.556 901.93 Q155.556 909.037 157.362 912.601 Q159.19 916.143 162.802 916.143 Q166.436 916.143 168.241 912.601 Q170.07 909.037 170.07 901.93 Q170.07 894.8 168.241 891.259 Q166.436 887.694 162.802 887.694 M162.802 883.99 Q168.612 883.99 171.667 888.597 Q174.746 893.18 174.746 901.93 Q174.746 910.657 171.667 915.263 Q168.612 919.847 162.802 919.847 Q156.991 919.847 153.913 915.263 Q150.857 910.657 150.857 901.93 Q150.857 893.18 153.913 888.597 Q156.991 883.99 162.802 883.99 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M154.839 704.182 L162.477 704.182 L162.477 677.817 L154.167 679.483 L154.167 675.224 L162.431 673.557 L167.107 673.557 L167.107 704.182 L174.746 704.182 L174.746 708.117 L154.839 708.117 L154.839 704.182 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M158.427 493.124 L174.746 493.124 L174.746 497.059 L152.802 497.059 L152.802 493.124 Q155.464 490.37 160.047 485.74 Q164.653 481.087 165.834 479.745 Q168.079 477.222 168.959 475.485 Q169.862 473.726 169.862 472.036 Q169.862 469.282 167.917 467.546 Q165.996 465.81 162.894 465.81 Q160.695 465.81 158.241 466.573 Q155.811 467.337 153.033 468.888 L153.033 464.166 Q155.857 463.032 158.311 462.453 Q160.765 461.874 162.802 461.874 Q168.172 461.874 171.366 464.56 Q174.561 467.245 174.561 471.735 Q174.561 473.865 173.751 475.786 Q172.964 477.684 170.857 480.277 Q170.278 480.948 167.177 484.166 Q164.075 487.36 158.427 493.124 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M167.616 267.367 Q170.973 268.085 172.848 270.353 Q174.746 272.622 174.746 275.955 Q174.746 281.071 171.227 283.872 Q167.709 286.673 161.227 286.673 Q159.052 286.673 156.737 286.233 Q154.445 285.816 151.991 284.96 L151.991 280.446 Q153.936 281.58 156.251 282.159 Q158.565 282.737 161.089 282.737 Q165.487 282.737 167.778 281.001 Q170.093 279.265 170.093 275.955 Q170.093 272.9 167.94 271.187 Q165.811 269.451 161.991 269.451 L157.964 269.451 L157.964 265.608 L162.177 265.608 Q165.626 265.608 167.454 264.242 Q169.283 262.853 169.283 260.261 Q169.283 257.599 167.385 256.187 Q165.51 254.752 161.991 254.752 Q160.07 254.752 157.871 255.168 Q155.672 255.585 153.033 256.464 L153.033 252.298 Q155.695 251.557 158.01 251.187 Q160.348 250.816 162.408 250.816 Q167.732 250.816 170.834 253.247 Q173.936 255.654 173.936 259.775 Q173.936 262.645 172.292 264.636 Q170.649 266.603 167.616 267.367 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M64.0042 842.696 L16.4842 860.839 L16.4842 854.123 L56.4926 839.068 L16.4842 823.981 L16.4842 817.297 L64.0042 835.408 L64.0042 842.696 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M46.0847 799.473 Q46.0847 806.571 47.7079 809.308 Q49.3312 812.045 53.2461 812.045 Q56.3653 812.045 58.2114 810.008 Q60.0256 807.94 60.0256 804.407 Q60.0256 799.537 56.5881 796.609 Q53.1188 793.649 47.3897 793.649 L46.0847 793.649 L46.0847 799.473 M43.6657 787.792 L64.0042 787.792 L64.0042 793.649 L58.5933 793.649 Q61.8398 795.654 63.3994 798.646 Q64.9272 801.637 64.9272 805.966 Q64.9272 811.441 61.8716 814.687 Q58.7843 817.902 53.6281 817.902 Q47.6125 817.902 44.5569 813.891 Q41.5014 809.849 41.5014 801.86 L41.5014 793.649 L40.9285 793.649 Q36.8862 793.649 34.6901 796.322 Q32.4621 798.964 32.4621 803.77 Q32.4621 806.826 33.1941 809.722 Q33.9262 812.618 35.3903 815.292 L29.9795 815.292 Q28.7381 812.077 28.1334 809.054 Q27.4968 806.03 27.4968 803.165 Q27.4968 795.431 31.5072 791.611 Q35.5176 787.792 43.6657 787.792 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M14.479 775.729 L14.479 769.873 L64.0042 769.873 L64.0042 775.729 L14.479 775.729 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M49.9359 758.223 L28.3562 758.223 L28.3562 752.367 L49.7131 752.367 Q54.7739 752.367 57.3202 750.394 Q59.8346 748.42 59.8346 744.473 Q59.8346 739.731 56.8109 736.994 Q53.7872 734.225 48.5673 734.225 L28.3562 734.225 L28.3562 728.368 L64.0042 728.368 L64.0042 734.225 L58.5296 734.225 Q61.7762 736.357 63.3676 739.19 Q64.9272 741.991 64.9272 745.715 Q64.9272 751.858 61.1078 755.04 Q57.2883 758.223 49.9359 758.223 M27.4968 743.487 L27.4968 743.487 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M44.7161 685.813 L47.5806 685.813 L47.5806 712.74 Q53.6281 712.358 56.8109 709.112 Q59.9619 705.834 59.9619 700.009 Q59.9619 696.635 59.1344 693.484 Q58.3069 690.301 56.6518 687.182 L62.1899 687.182 Q63.5267 690.333 64.227 693.643 Q64.9272 696.953 64.9272 700.359 Q64.9272 708.889 59.9619 713.886 Q54.9967 718.851 46.5303 718.851 Q37.7774 718.851 32.6531 714.141 Q27.4968 709.398 27.4968 701.378 Q27.4968 694.184 32.1438 690.015 Q36.7589 685.813 44.7161 685.813 M42.9973 691.67 Q38.1912 691.734 35.3266 694.375 Q32.4621 696.985 32.4621 701.314 Q32.4621 706.216 35.2312 709.176 Q38.0002 712.104 43.0292 712.549 L42.9973 691.67 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M464.218 12.096 L498.974 12.096 L498.974 18.9825 L472.401 18.9825 L472.401 36.8065 L496.382 36.8065 L496.382 43.6931 L472.401 43.6931 L472.401 72.576 L464.218 72.576 L464.218 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M505.577 27.2059 L513.031 27.2059 L513.031 72.576 L505.577 72.576 L505.577 27.2059 M505.577 9.54393 L513.031 9.54393 L513.031 18.9825 L505.577 18.9825 L505.577 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M554.917 34.1734 Q553.662 33.4443 552.163 33.1202 Q550.704 32.7556 548.922 32.7556 Q542.603 32.7556 539.2 36.8875 Q535.838 40.9789 535.838 48.6757 L535.838 72.576 L528.344 72.576 L528.344 27.2059 L535.838 27.2059 L535.838 34.2544 Q538.187 30.1225 541.955 28.1376 Q545.722 26.1121 551.11 26.1121 Q551.879 26.1121 552.811 26.2337 Q553.743 26.3147 554.877 26.5172 L554.917 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M591.659 28.5427 L591.659 35.5912 Q588.499 33.9709 585.097 33.1607 Q581.694 32.3505 578.048 32.3505 Q572.498 32.3505 569.703 34.0519 Q566.949 35.7533 566.949 39.156 Q566.949 41.7486 568.934 43.2475 Q570.919 44.7058 576.914 46.0426 L579.466 46.6097 Q587.406 48.3111 590.727 51.4303 Q594.09 54.509 594.09 60.0587 Q594.09 66.3781 589.067 70.0644 Q584.084 73.7508 575.334 73.7508 Q571.688 73.7508 567.718 73.0216 Q563.789 72.3329 559.414 70.9151 L559.414 63.2184 Q563.546 65.3654 567.556 66.4591 Q571.567 67.5124 575.496 67.5124 Q580.762 67.5124 583.598 65.73 Q586.433 63.9071 586.433 60.6258 Q586.433 57.5877 584.368 55.9673 Q582.342 54.3469 575.415 52.8481 L572.822 52.2405 Q565.895 50.7821 562.817 47.7845 Q559.738 44.7463 559.738 39.4801 Q559.738 33.0797 564.275 29.5959 Q568.812 26.1121 577.157 26.1121 Q581.289 26.1121 584.935 26.7198 Q588.58 27.3274 591.659 28.5427 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M613.331 14.324 L613.331 27.2059 L628.684 27.2059 L628.684 32.9987 L613.331 32.9987 L613.331 57.6282 Q613.331 63.1779 614.83 64.7578 Q616.37 66.3376 621.028 66.3376 L628.684 66.3376 L628.684 72.576 L621.028 72.576 Q612.4 72.576 609.119 69.3758 Q605.837 66.1351 605.837 57.6282 L605.837 32.9987 L600.369 32.9987 L600.369 27.2059 L605.837 27.2059 L605.837 14.324 L613.331 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M673.366 18.8205 L673.366 65.8515 L683.25 65.8515 Q695.767 65.8515 701.56 60.1802 Q707.393 54.509 707.393 42.2752 Q707.393 30.1225 701.56 24.4918 Q695.767 18.8205 683.25 18.8205 L673.366 18.8205 M665.183 12.096 L681.994 12.096 Q699.575 12.096 707.799 19.4281 Q716.022 26.7198 716.022 42.2752 Q716.022 57.9117 707.758 65.2439 Q699.494 72.576 681.994 72.576 L665.183 72.576 L665.183 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M728.742 27.2059 L736.195 27.2059 L736.195 72.576 L728.742 72.576 L728.742 27.2059 M728.742 9.54393 L736.195 9.54393 L736.195 18.9825 L728.742 18.9825 L728.742 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M787.115 35.9153 Q789.91 30.8922 793.799 28.5022 Q797.688 26.1121 802.954 26.1121 Q810.043 26.1121 813.892 31.0947 Q817.74 36.0368 817.74 45.1919 L817.74 72.576 L810.246 72.576 L810.246 45.4349 Q810.246 38.913 807.937 35.7533 Q805.628 32.5936 800.888 32.5936 Q795.096 32.5936 791.733 36.4419 Q788.371 40.2903 788.371 46.9338 L788.371 72.576 L780.877 72.576 L780.877 45.4349 Q780.877 38.8725 778.568 35.7533 Q776.259 32.5936 771.438 32.5936 Q765.726 32.5936 762.364 36.4824 Q759.002 40.3308 759.002 46.9338 L759.002 72.576 L751.508 72.576 L751.508 27.2059 L759.002 27.2059 L759.002 34.2544 Q761.554 30.082 765.119 28.0971 Q768.684 26.1121 773.585 26.1121 Q778.527 26.1121 781.971 28.6237 Q785.454 31.1352 787.115 35.9153 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M871.415 48.0275 L871.415 51.6733 L837.144 51.6733 Q837.63 59.3701 841.762 63.421 Q845.934 67.4314 853.348 67.4314 Q857.642 67.4314 861.652 66.3781 Q865.703 65.3249 869.673 63.2184 L869.673 70.267 Q865.662 71.9684 861.449 72.8596 Q857.236 73.7508 852.902 73.7508 Q842.046 73.7508 835.686 67.4314 Q829.366 61.1119 829.366 50.3365 Q829.366 39.1965 835.362 32.6746 Q841.397 26.1121 851.606 26.1121 Q860.761 26.1121 866.067 32.0264 Q871.415 37.9003 871.415 48.0275 M863.961 45.84 Q863.88 39.7232 860.518 36.0774 Q857.196 32.4315 851.687 32.4315 Q845.448 32.4315 841.681 35.9558 Q837.954 39.4801 837.387 45.8805 L863.961 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M921.362 45.1919 L921.362 72.576 L913.909 72.576 L913.909 45.4349 Q913.909 38.994 911.397 35.7938 Q908.885 32.5936 903.862 32.5936 Q897.826 32.5936 894.343 36.4419 Q890.859 40.2903 890.859 46.9338 L890.859 72.576 L883.365 72.576 L883.365 27.2059 L890.859 27.2059 L890.859 34.2544 Q893.533 30.163 897.138 28.1376 Q900.784 26.1121 905.523 26.1121 Q913.341 26.1121 917.352 30.9732 Q921.362 35.7938 921.362 45.1919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M965.153 28.5427 L965.153 35.5912 Q961.993 33.9709 958.59 33.1607 Q955.187 32.3505 951.541 32.3505 Q945.992 32.3505 943.197 34.0519 Q940.442 35.7533 940.442 39.156 Q940.442 41.7486 942.427 43.2475 Q944.412 44.7058 950.407 46.0426 L952.959 46.6097 Q960.899 48.3111 964.221 51.4303 Q967.583 54.509 967.583 60.0587 Q967.583 66.3781 962.56 70.0644 Q957.577 73.7508 948.827 73.7508 Q945.182 73.7508 941.212 73.0216 Q937.282 72.3329 932.907 70.9151 L932.907 63.2184 Q937.039 65.3654 941.05 66.4591 Q945.06 67.5124 948.989 67.5124 Q954.256 67.5124 957.091 65.73 Q959.927 63.9071 959.927 60.6258 Q959.927 57.5877 957.861 55.9673 Q955.835 54.3469 948.908 52.8481 L946.316 52.2405 Q939.389 50.7821 936.31 47.7845 Q933.231 44.7463 933.231 39.4801 Q933.231 33.0797 937.768 29.5959 Q942.305 26.1121 950.65 26.1121 Q954.782 26.1121 958.428 26.7198 Q962.074 27.3274 965.153 28.5427 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M979.452 27.2059 L986.906 27.2059 L986.906 72.576 L979.452 72.576 L979.452 27.2059 M979.452 9.54393 L986.906 9.54393 L986.906 18.9825 L979.452 18.9825 L979.452 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1020.08 32.4315 Q1014.09 32.4315 1010.6 37.1306 Q1007.12 41.7891 1007.12 49.9314 Q1007.12 58.0738 1010.56 62.7728 Q1014.05 67.4314 1020.08 67.4314 Q1026.04 67.4314 1029.52 62.7323 Q1033.01 58.0333 1033.01 49.9314 Q1033.01 41.8701 1029.52 37.1711 Q1026.04 32.4315 1020.08 32.4315 M1020.08 26.1121 Q1029.8 26.1121 1035.35 32.4315 Q1040.9 38.7509 1040.9 49.9314 Q1040.9 61.0714 1035.35 67.4314 Q1029.8 73.7508 1020.08 73.7508 Q1010.32 73.7508 1004.77 67.4314 Q999.261 61.0714 999.261 49.9314 Q999.261 38.7509 1004.77 32.4315 Q1010.32 26.1121 1020.08 26.1121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1090.97 45.1919 L1090.97 72.576 L1083.52 72.576 L1083.52 45.4349 Q1083.52 38.994 1081.01 35.7938 Q1078.5 32.5936 1073.47 32.5936 Q1067.44 32.5936 1063.95 36.4419 Q1060.47 40.2903 1060.47 46.9338 L1060.47 72.576 L1052.98 72.576 L1052.98 27.2059 L1060.47 27.2059 L1060.47 34.2544 Q1063.14 30.163 1066.75 28.1376 Q1070.39 26.1121 1075.13 26.1121 Q1082.95 26.1121 1086.96 30.9732 Q1090.97 35.7938 1090.97 45.1919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1132.54 12.096 L1140.72 12.096 L1140.72 37.6572 L1167.86 12.096 L1178.39 12.096 L1148.37 40.2903 L1180.54 72.576 L1169.76 72.576 L1140.72 43.45 L1140.72 72.576 L1132.54 72.576 L1132.54 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1205.78 49.7694 Q1196.74 49.7694 1193.26 51.8354 Q1189.78 53.9013 1189.78 58.8839 Q1189.78 62.8538 1192.37 65.2034 Q1195 67.5124 1199.5 67.5124 Q1205.7 67.5124 1209.42 63.1374 Q1213.19 58.7219 1213.19 51.4303 L1213.19 49.7694 L1205.78 49.7694 M1220.64 46.6907 L1220.64 72.576 L1213.19 72.576 L1213.19 65.6895 Q1210.64 69.8214 1206.83 71.8063 Q1203.02 73.7508 1197.51 73.7508 Q1190.54 73.7508 1186.41 69.8619 Q1182.32 65.9325 1182.32 59.3701 Q1182.32 51.7138 1187.43 47.825 Q1192.57 43.9361 1202.74 43.9361 L1213.19 43.9361 L1213.19 43.2069 Q1213.19 38.0623 1209.79 35.2672 Q1206.42 32.4315 1200.31 32.4315 Q1196.42 32.4315 1192.73 33.3632 Q1189.05 34.295 1185.64 36.1584 L1185.64 29.2718 Q1189.73 27.692 1193.58 26.9223 Q1197.43 26.1121 1201.08 26.1121 Q1210.92 26.1121 1215.78 31.2163 Q1220.64 36.3204 1220.64 46.6907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1236 9.54393 L1243.45 9.54393 L1243.45 72.576 L1236 72.576 L1236 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1294.37 35.9153 Q1297.16 30.8922 1301.05 28.5022 Q1304.94 26.1121 1310.21 26.1121 Q1317.3 26.1121 1321.15 31.0947 Q1324.99 36.0368 1324.99 45.1919 L1324.99 72.576 L1317.5 72.576 L1317.5 45.4349 Q1317.5 38.913 1315.19 35.7533 Q1312.88 32.5936 1308.14 32.5936 Q1302.35 32.5936 1298.99 36.4419 Q1295.63 40.2903 1295.63 46.9338 L1295.63 72.576 L1288.13 72.576 L1288.13 45.4349 Q1288.13 38.8725 1285.82 35.7533 Q1283.51 32.5936 1278.69 32.5936 Q1272.98 32.5936 1269.62 36.4824 Q1266.26 40.3308 1266.26 46.9338 L1266.26 72.576 L1258.76 72.576 L1258.76 27.2059 L1266.26 27.2059 L1266.26 34.2544 Q1268.81 30.082 1272.37 28.0971 Q1275.94 26.1121 1280.84 26.1121 Q1285.78 26.1121 1289.22 28.6237 Q1292.71 31.1352 1294.37 35.9153 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1360.48 49.7694 Q1351.45 49.7694 1347.96 51.8354 Q1344.48 53.9013 1344.48 58.8839 Q1344.48 62.8538 1347.07 65.2034 Q1349.7 67.5124 1354.2 67.5124 Q1360.4 67.5124 1364.13 63.1374 Q1367.89 58.7219 1367.89 51.4303 L1367.89 49.7694 L1360.48 49.7694 M1375.35 46.6907 L1375.35 72.576 L1367.89 72.576 L1367.89 65.6895 Q1365.34 69.8214 1361.53 71.8063 Q1357.73 73.7508 1352.22 73.7508 Q1345.25 73.7508 1341.12 69.8619 Q1337.03 65.9325 1337.03 59.3701 Q1337.03 51.7138 1342.13 47.825 Q1347.27 43.9361 1357.44 43.9361 L1367.89 43.9361 L1367.89 43.2069 Q1367.89 38.0623 1364.49 35.2672 Q1361.13 32.4315 1355.01 32.4315 Q1351.12 32.4315 1347.44 33.3632 Q1343.75 34.295 1340.35 36.1584 L1340.35 29.2718 Q1344.44 27.692 1348.29 26.9223 Q1352.14 26.1121 1355.78 26.1121 Q1365.62 26.1121 1370.49 31.2163 Q1375.35 36.3204 1375.35 46.6907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1428.41 45.1919 L1428.41 72.576 L1420.96 72.576 L1420.96 45.4349 Q1420.96 38.994 1418.45 35.7938 Q1415.94 32.5936 1410.91 32.5936 Q1404.88 32.5936 1401.39 36.4419 Q1397.91 40.2903 1397.91 46.9338 L1397.91 72.576 L1390.42 72.576 L1390.42 27.2059 L1397.91 27.2059 L1397.91 34.2544 Q1400.58 30.163 1404.19 28.1376 Q1407.84 26.1121 1412.57 26.1121 Q1420.39 26.1121 1424.4 30.9732 Q1428.41 35.7938 1428.41 45.1919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1469.98 12.096 L1504.73 12.096 L1504.73 18.9825 L1478.16 18.9825 L1478.16 36.8065 L1502.14 36.8065 L1502.14 43.6931 L1478.16 43.6931 L1478.16 72.576 L1469.98 72.576 L1469.98 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1511.34 27.2059 L1518.79 27.2059 L1518.79 72.576 L1511.34 72.576 L1511.34 27.2059 M1511.34 9.54393 L1518.79 9.54393 L1518.79 18.9825 L1511.34 18.9825 L1511.34 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1534.39 9.54393 L1541.84 9.54393 L1541.84 72.576 L1534.39 72.576 L1534.39 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1564.81 14.324 L1564.81 27.2059 L1580.16 27.2059 L1580.16 32.9987 L1564.81 32.9987 L1564.81 57.6282 Q1564.81 63.1779 1566.31 64.7578 Q1567.85 66.3376 1572.5 66.3376 L1580.16 66.3376 L1580.16 72.576 L1572.5 72.576 Q1563.88 72.576 1560.59 69.3758 Q1557.31 66.1351 1557.31 57.6282 L1557.31 32.9987 L1551.84 32.9987 L1551.84 27.2059 L1557.31 27.2059 L1557.31 14.324 L1564.81 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1628.77 48.0275 L1628.77 51.6733 L1594.5 51.6733 Q1594.99 59.3701 1599.12 63.421 Q1603.29 67.4314 1610.7 67.4314 Q1615 67.4314 1619.01 66.3781 Q1623.06 65.3249 1627.03 63.2184 L1627.03 70.267 Q1623.02 71.9684 1618.81 72.8596 Q1614.59 73.7508 1610.26 73.7508 Q1599.4 73.7508 1593.04 67.4314 Q1586.72 61.1119 1586.72 50.3365 Q1586.72 39.1965 1592.72 32.6746 Q1598.75 26.1121 1608.96 26.1121 Q1618.12 26.1121 1623.42 32.0264 Q1628.77 37.9003 1628.77 48.0275 M1621.32 45.84 Q1621.24 39.7232 1617.87 36.0774 Q1614.55 32.4315 1609.04 32.4315 Q1602.81 32.4315 1599.04 35.9558 Q1595.31 39.4801 1594.74 45.8805 L1621.32 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1667.3 34.1734 Q1666.04 33.4443 1664.54 33.1202 Q1663.08 32.7556 1661.3 32.7556 Q1654.98 32.7556 1651.58 36.8875 Q1648.22 40.9789 1648.22 48.6757 L1648.22 72.576 L1640.72 72.576 L1640.72 27.2059 L1648.22 27.2059 L1648.22 34.2544 Q1650.57 30.1225 1654.33 28.1376 Q1658.1 26.1121 1663.49 26.1121 Q1664.26 26.1121 1665.19 26.2337 Q1666.12 26.3147 1667.26 26.5172 L1667.3 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1701.81 12.096 L1740.05 12.096 L1740.05 18.9825 L1709.99 18.9825 L1709.99 36.8875 L1738.79 36.8875 L1738.79 43.7741 L1709.99 43.7741 L1709.99 65.6895 L1740.78 65.6895 L1740.78 72.576 L1701.81 72.576 L1701.81 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1782.83 28.5427 L1782.83 35.5912 Q1779.67 33.9709 1776.27 33.1607 Q1772.86 32.3505 1769.22 32.3505 Q1763.67 32.3505 1760.87 34.0519 Q1758.12 35.7533 1758.12 39.156 Q1758.12 41.7486 1760.1 43.2475 Q1762.09 44.7058 1768.08 46.0426 L1770.63 46.6097 Q1778.57 48.3111 1781.9 51.4303 Q1785.26 54.509 1785.26 60.0587 Q1785.26 66.3781 1780.23 70.0644 Q1775.25 73.7508 1766.5 73.7508 Q1762.86 73.7508 1758.89 73.0216 Q1754.96 72.3329 1750.58 70.9151 L1750.58 63.2184 Q1754.71 65.3654 1758.72 66.4591 Q1762.74 67.5124 1766.66 67.5124 Q1771.93 67.5124 1774.77 65.73 Q1777.6 63.9071 1777.6 60.6258 Q1777.6 57.5877 1775.54 55.9673 Q1773.51 54.3469 1766.58 52.8481 L1763.99 52.2405 Q1757.06 50.7821 1753.99 47.7845 Q1750.91 44.7463 1750.91 39.4801 Q1750.91 33.0797 1755.44 29.5959 Q1759.98 26.1121 1768.33 26.1121 Q1772.46 26.1121 1776.1 26.7198 Q1779.75 27.3274 1782.83 28.5427 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1804.5 14.324 L1804.5 27.2059 L1819.85 27.2059 L1819.85 32.9987 L1804.5 32.9987 L1804.5 57.6282 Q1804.5 63.1779 1806 64.7578 Q1807.54 66.3376 1812.2 66.3376 L1819.85 66.3376 L1819.85 72.576 L1812.2 72.576 Q1803.57 72.576 1800.29 69.3758 Q1797.01 66.1351 1797.01 57.6282 L1797.01 32.9987 L1791.54 32.9987 L1791.54 27.2059 L1797.01 27.2059 L1797.01 14.324 L1804.5 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1829.66 27.2059 L1837.11 27.2059 L1837.11 72.576 L1829.66 72.576 L1829.66 27.2059 M1829.66 9.54393 L1837.11 9.54393 L1837.11 18.9825 L1829.66 18.9825 L1829.66 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1888.03 35.9153 Q1890.82 30.8922 1894.71 28.5022 Q1898.6 26.1121 1903.87 26.1121 Q1910.96 26.1121 1914.81 31.0947 Q1918.65 36.0368 1918.65 45.1919 L1918.65 72.576 L1911.16 72.576 L1911.16 45.4349 Q1911.16 38.913 1908.85 35.7533 Q1906.54 32.5936 1901.8 32.5936 Q1896.01 32.5936 1892.65 36.4419 Q1889.29 40.2903 1889.29 46.9338 L1889.29 72.576 L1881.79 72.576 L1881.79 45.4349 Q1881.79 38.8725 1879.48 35.7533 Q1877.17 32.5936 1872.35 32.5936 Q1866.64 32.5936 1863.28 36.4824 Q1859.92 40.3308 1859.92 46.9338 L1859.92 72.576 L1852.42 72.576 L1852.42 27.2059 L1859.92 27.2059 L1859.92 34.2544 Q1862.47 30.082 1866.03 28.0971 Q1869.6 26.1121 1874.5 26.1121 Q1879.44 26.1121 1882.88 28.6237 Q1886.37 31.1352 1888.03 35.9153 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1954.14 49.7694 Q1945.11 49.7694 1941.62 51.8354 Q1938.14 53.9013 1938.14 58.8839 Q1938.14 62.8538 1940.73 65.2034 Q1943.36 67.5124 1947.86 67.5124 Q1954.06 67.5124 1957.79 63.1374 Q1961.55 58.7219 1961.55 51.4303 L1961.55 49.7694 L1954.14 49.7694 M1969.01 46.6907 L1969.01 72.576 L1961.55 72.576 L1961.55 65.6895 Q1959 69.8214 1955.19 71.8063 Q1951.39 73.7508 1945.88 73.7508 Q1938.91 73.7508 1934.78 69.8619 Q1930.69 65.9325 1930.69 59.3701 Q1930.69 51.7138 1935.79 47.825 Q1940.93 43.9361 1951.1 43.9361 L1961.55 43.9361 L1961.55 43.2069 Q1961.55 38.0623 1958.15 35.2672 Q1954.79 32.4315 1948.67 32.4315 Q1944.78 32.4315 1941.1 33.3632 Q1937.41 34.295 1934.01 36.1584 L1934.01 29.2718 Q1938.1 27.692 1941.95 26.9223 Q1945.8 26.1121 1949.44 26.1121 Q1959.28 26.1121 1964.15 31.2163 Q1969.01 36.3204 1969.01 46.6907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1991.73 14.324 L1991.73 27.2059 L2007.09 27.2059 L2007.09 32.9987 L1991.73 32.9987 L1991.73 57.6282 Q1991.73 63.1779 1993.23 64.7578 Q1994.77 66.3376 1999.43 66.3376 L2007.09 66.3376 L2007.09 72.576 L1999.43 72.576 Q1990.8 72.576 1987.52 69.3758 Q1984.24 66.1351 1984.24 57.6282 L1984.24 32.9987 L1978.77 32.9987 L1978.77 27.2059 L1984.24 27.2059 L1984.24 14.324 L1991.73 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2055.7 48.0275 L2055.7 51.6733 L2021.43 51.6733 Q2021.91 59.3701 2026.04 63.421 Q2030.22 67.4314 2037.63 67.4314 Q2041.92 67.4314 2045.93 66.3781 Q2049.98 65.3249 2053.95 63.2184 L2053.95 70.267 Q2049.94 71.9684 2045.73 72.8596 Q2041.52 73.7508 2037.18 73.7508 Q2026.33 73.7508 2019.97 67.4314 Q2013.65 61.1119 2013.65 50.3365 Q2013.65 39.1965 2019.64 32.6746 Q2025.68 26.1121 2035.89 26.1121 Q2045.04 26.1121 2050.35 32.0264 Q2055.7 37.9003 2055.7 48.0275 M2048.24 45.84 Q2048.16 39.7232 2044.8 36.0774 Q2041.48 32.4315 2035.97 32.4315 Q2029.73 32.4315 2025.96 35.9558 Q2022.24 39.4801 2021.67 45.8805 L2048.24 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2096.85 28.5427 L2096.85 35.5912 Q2093.69 33.9709 2090.29 33.1607 Q2086.89 32.3505 2083.24 32.3505 Q2077.69 32.3505 2074.9 34.0519 Q2072.14 35.7533 2072.14 39.156 Q2072.14 41.7486 2074.13 43.2475 Q2076.11 44.7058 2082.11 46.0426 L2084.66 46.6097 Q2092.6 48.3111 2095.92 51.4303 Q2099.28 54.509 2099.28 60.0587 Q2099.28 66.3781 2094.26 70.0644 Q2089.28 73.7508 2080.53 73.7508 Q2076.88 73.7508 2072.91 73.0216 Q2068.98 72.3329 2064.61 70.9151 L2064.61 63.2184 Q2068.74 65.3654 2072.75 66.4591 Q2076.76 67.5124 2080.69 67.5124 Q2085.96 67.5124 2088.79 65.73 Q2091.63 63.9071 2091.63 60.6258 Q2091.63 57.5877 2089.56 55.9673 Q2087.54 54.3469 2080.61 52.8481 L2078.02 52.2405 Q2071.09 50.7821 2068.01 47.7845 Q2064.93 44.7463 2064.93 39.4801 Q2064.93 33.0797 2069.47 29.5959 Q2074.01 26.1121 2082.35 26.1121 Q2086.48 26.1121 2090.13 26.7198 Q2093.77 27.3274 2096.85 28.5427 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip452)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"271.369,1082.77 291.781,1224.74 312.192,1021.56 332.604,921.153 353.016,855.282 373.428,732.093 393.839,776.65 414.251,634.022 434.663,689.03 455.075,952.601 475.486,1108.78 495.898,899.247 516.31,916.726 536.722,942.23 557.133,981.82 577.545,972.723 597.957,1059.83 618.369,1018.14 638.781,960.723 659.192,986.183 679.604,1183.15 700.016,1284.09 720.428,1188.71 740.839,1164.39 761.251,1137.54 781.663,1009.86 802.075,1094.43 822.486,924.258 842.898,914.548 863.31,976.372 883.722,903.29 904.133,879.295 924.545,916.561 944.957,1005.58 965.369,1104.51 985.78,987.735 1006.19,777.844 1026.6,791.192 1047.02,796.242 1067.43,812.727 1087.84,678.737 1108.25,775.331 1128.66,836.556 1149.07,699.642 1169.49,664.349 1189.9,749.622 1210.31,776.524 1230.72,911.96 1251.13,869.959 1271.55,677.48 1291.96,722.049 1312.37,625.875 1332.78,805.173 1353.19,941.994 1373.6,981.767 1394.02,969.171 1414.43,1111.05 1434.84,1137.3 1455.25,925.371 1475.66,1047.91 1496.07,1127.17 1516.49,1152.72 1536.9,1136 1557.31,1051.99 1577.72,1145.45 1598.13,1017.44 1618.54,1204.67 1638.96,1190.66 1659.37,1018.05 1679.78,1070.93 1700.19,1063.57 1720.6,1121.19 1741.02,1093.29 1761.43,1219.27 1781.84,1142.21 1802.25,1029.93 1822.66,878.259 1843.07,881.389 1863.49,690.467 1883.9,422.017 1904.31,261.364 1924.72,293.429 1945.13,462.506 1965.54,509.47 1985.96,581.711 2006.37,668.497 2026.78,787.726 2047.19,752.219 2067.6,726.811 2088.02,856.073 2108.43,1047.57 2128.84,995.011 2149.25,946.302 2169.66,886.858 2190.07,916.112 2210.49,953.039 2230.9,999.868 2251.31,1114.81 2271.72,1088.83 2292.13,1040.82 \"/>\n<circle clip-path=\"url(#clip452)\" cx=\"271.369\" cy=\"997.851\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"291.781\" cy=\"1339\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"312.192\" cy=\"1104.51\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"332.604\" cy=\"957.26\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"353.016\" cy=\"742.229\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"373.428\" cy=\"580.18\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"393.839\" cy=\"864.282\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"414.251\" cy=\"537.016\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"434.663\" cy=\"652.798\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"455.075\" cy=\"867.552\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"475.486\" cy=\"1185.98\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"495.898\" cy=\"860.426\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"516.31\" cy=\"927.1\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"536.722\" cy=\"941.274\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"557.133\" cy=\"679.554\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"577.545\" cy=\"908.373\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"597.957\" cy=\"1129.52\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"618.369\" cy=\"963.015\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"638.781\" cy=\"1048.29\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"659.192\" cy=\"1154.67\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"679.604\" cy=\"1215.27\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"700.016\" cy=\"1244.93\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"720.428\" cy=\"1116.4\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"740.839\" cy=\"1155.29\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"761.251\" cy=\"1173.86\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"781.663\" cy=\"1072.19\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"802.075\" cy=\"1213.53\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"822.486\" cy=\"656.862\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"842.898\" cy=\"901.819\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"863.31\" cy=\"935.35\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"883.722\" cy=\"895.768\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"904.133\" cy=\"928.007\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"924.545\" cy=\"855.754\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"944.957\" cy=\"939.706\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"965.369\" cy=\"1108.67\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"985.78\" cy=\"865.674\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1006.19\" cy=\"695.137\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1026.6\" cy=\"667.495\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1047.02\" cy=\"881.442\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1067.43\" cy=\"845.903\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1087.84\" cy=\"701.448\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1108.25\" cy=\"751.828\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1128.66\" cy=\"765.931\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1149.07\" cy=\"818.449\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1169.49\" cy=\"970.044\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1189.9\" cy=\"714.163\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1210.31\" cy=\"566.618\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1230.72\" cy=\"753.37\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1251.13\" cy=\"975.531\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1271.55\" cy=\"683.056\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1291.96\" cy=\"543.854\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1312.37\" cy=\"571.659\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1332.78\" cy=\"983.9\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1353.19\" cy=\"847.656\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1373.6\" cy=\"717.623\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1394.02\" cy=\"735.632\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1414.43\" cy=\"1294.74\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1434.84\" cy=\"1319.86\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1455.25\" cy=\"1041.9\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1475.66\" cy=\"902.904\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1496.07\" cy=\"1118.26\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1516.49\" cy=\"1207.71\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1536.9\" cy=\"1386.4\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1557.31\" cy=\"1253.81\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1577.72\" cy=\"1140.59\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1598.13\" cy=\"1027.68\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1618.54\" cy=\"1385.07\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1638.96\" cy=\"1194.98\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1659.37\" cy=\"936.379\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1679.78\" cy=\"919.123\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1700.19\" cy=\"939.652\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1720.6\" cy=\"1336.16\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1741.02\" cy=\"1186.18\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1761.43\" cy=\"1256.34\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1781.84\" cy=\"967.227\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1802.25\" cy=\"1016.67\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1822.66\" cy=\"1079.41\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1843.07\" cy=\"930.594\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1863.49\" cy=\"832.049\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1883.9\" cy=\"575.724\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1904.31\" cy=\"160.256\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1924.72\" cy=\"186.017\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1945.13\" cy=\"463.493\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1965.54\" cy=\"464.743\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"1985.96\" cy=\"639.812\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2006.37\" cy=\"668.466\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2026.78\" cy=\"725.439\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2047.19\" cy=\"669.768\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2067.6\" cy=\"562.995\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2088.02\" cy=\"773.378\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2108.43\" cy=\"902.275\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2128.84\" cy=\"988.404\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2149.25\" cy=\"1078.76\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2169.66\" cy=\"833.871\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2190.07\" cy=\"744.074\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2210.49\" cy=\"1205.35\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2230.9\" cy=\"1095.11\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2251.31\" cy=\"964.955\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2271.72\" cy=\"1111.93\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip452)\" cx=\"2292.13\" cy=\"874.827\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<path clip-path=\"url(#clip452)\" d=\"M271.369 1105.48 L291.781 1256.86 L312.192 1190.5 L332.604 1083.72 L353.016 922.022 L373.428 769.035 L393.839 872.181 L414.251 735.033 L434.663 747.217 L455.075 876.475 L475.486 1109.82 L495.898 1020.19 L516.31 1017.84 L536.722 1023.64 L557.133 877.976 L577.545 947.428 L597.957 1101.51 L618.369 1070.01 L638.781 1103.09 L659.192 1175.2 L679.604 1237.1 L700.016 1276.78 L720.428 1218.25 L740.839 1214.46 L761.251 1222.83 L781.663 1168.69 L802.075 1226.06 L822.486 936.638 L842.898 957.49 L863.31 988.762 L883.722 981.508 L904.133 997.902 L924.545 964.775 L944.957 999.037 L965.369 1108.6 L985.78 1016.02 L1006.19 881.21 L1026.6 811.692 L1047.02 906.255 L1067.43 926.859 L1087.84 854.216 L1108.25 853.227 L1128.66 861.784 L1149.07 895.477 L1169.49 994.65 L1189.9 890.376 L1210.31 763.771 L1230.72 818.295 L1251.13 967.373 L1271.55 863.534 L1291.96 741.685 L1312.37 708.645 L1332.78 929.27 L1353.19 943.313 L1373.6 873.813 L1394.02 854.396 L1414.43 1161 L1434.84 1298.76 L1455.25 1193.45 L1475.66 1067.82 L1496.07 1136.53 L1516.49 1215.09 L1536.9 1346.58 L1557.31 1323.32 L1577.72 1247.23 L1598.13 1151.38 L1618.54 1313.77 L1638.96 1273.62 L1659.37 1110.54 L1679.78 1034.82 L1700.19 1018.07 L1720.6 1236.96 L1741.02 1242.7 L1761.43 1282.57 L1781.84 1134.63 L1802.25 1101.38 L1822.66 1124.45 L1843.07 1051.34 L1863.49 967.033 L1883.9 790.41 L1904.31 487.937 L1924.72 384.911 L1945.13 506.904 L1965.54 563.263 L1985.96 687.044 L2006.37 753.916 L2026.78 811.657 L2047.19 801.753 L2067.6 735.608 L2088.02 826.033 L2108.43 935.027 L2128.84 1026.05 L2149.25 1110.98 L2169.66 1004.36 L2190.07 907.587 L2210.49 1127.4 L2230.9 1154.82 L2251.31 1090.02 L2271.72 1144.41 L2292.13 1032.42 L2292.13 859.028 L2271.72 971.021 L2251.31 916.631 L2230.9 981.43 L2210.49 954.006 L2190.07 734.197 L2169.66 830.965 L2149.25 937.593 L2128.84 852.655 L2108.43 761.637 L2088.02 652.643 L2067.6 562.218 L2047.19 628.363 L2026.78 638.267 L2006.37 580.526 L1985.96 513.654 L1965.54 389.873 L1945.13 333.513 L1924.72 211.521 L1904.31 314.547 L1883.9 617.02 L1863.49 793.642 L1843.07 877.948 L1822.66 951.064 L1802.25 927.985 L1781.84 961.238 L1761.43 1109.18 L1741.02 1069.31 L1720.6 1063.56 L1700.19 844.682 L1679.78 861.429 L1659.37 937.15 L1638.96 1100.23 L1618.54 1140.38 L1598.13 977.985 L1577.72 1073.84 L1557.31 1149.93 L1536.9 1173.19 L1516.49 1041.7 L1496.07 963.139 L1475.66 894.433 L1455.25 1020.06 L1434.84 1125.37 L1414.43 987.613 L1394.02 681.005 L1373.6 700.423 L1353.19 769.923 L1332.78 755.88 L1312.37 535.255 L1291.96 568.295 L1271.55 690.144 L1251.13 793.983 L1230.72 644.905 L1210.31 590.381 L1189.9 716.985 L1169.49 821.26 L1149.07 722.087 L1128.66 688.394 L1108.25 679.837 L1087.84 680.826 L1067.43 753.469 L1047.02 732.865 L1026.6 638.302 L1006.19 707.82 L985.78 842.631 L965.369 935.215 L944.957 825.647 L924.545 791.384 L904.133 824.512 L883.722 808.118 L863.31 815.372 L842.898 784.1 L822.486 763.248 L802.075 1052.67 L781.663 995.302 L761.251 1049.44 L740.839 1041.07 L720.428 1044.86 L700.016 1103.39 L679.604 1063.71 L659.192 1001.81 L638.781 929.696 L618.369 896.616 L597.957 928.117 L577.545 774.038 L557.133 704.586 L536.722 850.251 L516.31 844.451 L495.898 846.795 L475.486 936.425 L455.075 703.079 L434.663 573.812 L414.251 561.609 L393.839 698.721 L373.428 595.518 L353.016 748.466 L332.604 910.289 L312.192 1017.55 L291.781 1082.52 L271.369 905.82  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.2\"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"271.369,1005.65 291.781,1169.69 312.192,1104.02 332.604,997.003 353.016,835.244 373.428,682.276 393.839,785.451 414.251,648.321 434.663,660.514 455.075,789.777 475.486,1023.12 495.898,933.491 516.31,931.146 536.722,936.946 557.133,791.281 577.545,860.733 597.957,1014.81 618.369,983.311 638.781,1016.39 659.192,1088.5 679.604,1150.4 700.016,1190.09 720.428,1131.55 740.839,1127.77 761.251,1136.13 781.663,1082 802.075,1139.37 822.486,849.943 842.898,870.795 863.31,902.067 883.722,894.813 904.133,911.207 924.545,878.08 944.957,912.342 965.369,1021.91 985.78,929.326 1006.19,794.515 1026.6,724.997 1047.02,819.56 1067.43,840.164 1087.84,767.521 1108.25,766.532 1128.66,775.089 1149.07,808.782 1169.49,907.955 1189.9,803.68 1210.31,677.076 1230.72,731.6 1251.13,880.678 1271.55,776.839 1291.96,654.99 1312.37,621.95 1332.78,842.575 1353.19,856.618 1373.6,787.118 1394.02,767.7 1414.43,1074.31 1434.84,1212.07 1455.25,1106.75 1475.66,981.128 1496.07,1049.83 1516.49,1128.4 1536.9,1259.89 1557.31,1236.62 1577.72,1160.53 1598.13,1064.68 1618.54,1227.08 1638.96,1186.92 1659.37,1023.85 1679.78,948.124 1700.19,931.377 1720.6,1150.26 1741.02,1156 1761.43,1195.88 1781.84,1047.93 1802.25,1014.68 1822.66,1037.76 1843.07,964.643 1863.49,880.337 1883.9,703.715 1904.31,401.242 1924.72,298.216 1945.13,420.208 1965.54,476.568 1985.96,600.349 2006.37,667.221 2026.78,724.962 2047.19,715.058 2067.6,648.913 2088.02,739.338 2108.43,848.332 2128.84,939.35 2149.25,1024.29 2169.66,917.66 2190.07,820.892 2210.49,1040.7 2230.9,1068.13 2251.31,1003.33 2271.72,1057.72 2292.13,945.723 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M282.146 374.156 L815.234 374.156 L815.234 166.796 L282.146 166.796  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"282.146,374.156 815.234,374.156 815.234,166.796 282.146,166.796 282.146,374.156 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"305.946,218.636 448.747,218.636 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M472.547 201.356 L501.783 201.356 L501.783 205.291 L489.515 205.291 L489.515 235.916 L484.816 235.916 L484.816 205.291 L472.547 205.291 L472.547 201.356 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M514.167 213.971 Q513.45 213.555 512.593 213.37 Q511.76 213.161 510.741 213.161 Q507.13 213.161 505.186 215.522 Q503.265 217.86 503.265 222.258 L503.265 235.916 L498.982 235.916 L498.982 209.99 L503.265 209.99 L503.265 214.018 Q504.607 211.657 506.76 210.522 Q508.913 209.365 511.991 209.365 Q512.431 209.365 512.964 209.434 Q513.496 209.481 514.144 209.596 L514.167 213.971 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M518.195 225.684 L518.195 209.99 L522.454 209.99 L522.454 225.522 Q522.454 229.203 523.889 231.055 Q525.325 232.883 528.195 232.883 Q531.644 232.883 533.635 230.684 Q535.649 228.485 535.649 224.689 L535.649 209.99 L539.908 209.99 L539.908 235.916 L535.649 235.916 L535.649 231.934 Q534.098 234.295 532.038 235.453 Q530.001 236.587 527.292 236.587 Q522.825 236.587 520.51 233.809 Q518.195 231.031 518.195 225.684 M528.913 209.365 L528.913 209.365 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M552.894 202.629 L552.894 209.99 L561.667 209.99 L561.667 213.3 L552.894 213.3 L552.894 227.374 Q552.894 230.545 553.75 231.448 Q554.63 232.351 557.292 232.351 L561.667 232.351 L561.667 235.916 L557.292 235.916 Q552.362 235.916 550.487 234.087 Q548.612 232.235 548.612 227.374 L548.612 213.3 L545.487 213.3 L545.487 209.99 L548.612 209.99 L548.612 202.629 L552.894 202.629 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M588.82 220.268 L588.82 235.916 L584.56 235.916 L584.56 220.407 Q584.56 216.726 583.125 214.897 Q581.69 213.069 578.82 213.069 Q575.371 213.069 573.38 215.268 Q571.389 217.467 571.389 221.263 L571.389 235.916 L567.107 235.916 L567.107 199.897 L571.389 199.897 L571.389 214.018 Q572.917 211.68 574.977 210.522 Q577.06 209.365 579.769 209.365 Q584.236 209.365 586.528 212.143 Q588.82 214.897 588.82 220.268 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><circle clip-path=\"url(#clip450)\" cx=\"377.347\" cy=\"270.476\" r=\"20.48\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"4.55111\"/>\n<path clip-path=\"url(#clip450)\" d=\"M488.566 256.367 Q483.473 256.367 480.464 260.163 Q477.478 263.96 477.478 270.51 Q477.478 277.038 480.464 280.834 Q483.473 284.631 488.566 284.631 Q493.658 284.631 496.621 280.834 Q499.607 277.038 499.607 270.51 Q499.607 263.96 496.621 260.163 Q493.658 256.367 488.566 256.367 M488.566 252.571 Q495.834 252.571 500.186 257.455 Q504.538 262.316 504.538 270.51 Q504.538 278.682 500.186 283.566 Q495.834 288.427 488.566 288.427 Q481.274 288.427 476.899 283.566 Q472.547 278.705 472.547 270.51 Q472.547 262.316 476.899 257.455 Q481.274 252.571 488.566 252.571 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M530.278 274.816 Q530.278 270.117 528.334 267.455 Q526.413 264.77 523.033 264.77 Q519.653 264.77 517.709 267.455 Q515.788 270.117 515.788 274.816 Q515.788 279.515 517.709 282.2 Q519.653 284.862 523.033 284.862 Q526.413 284.862 528.334 282.2 Q530.278 279.515 530.278 274.816 M515.788 265.765 Q517.13 263.45 519.167 262.339 Q521.227 261.205 524.075 261.205 Q528.797 261.205 531.737 264.955 Q534.7 268.705 534.7 274.816 Q534.7 280.927 531.737 284.677 Q528.797 288.427 524.075 288.427 Q521.227 288.427 519.167 287.316 Q517.13 286.182 515.788 283.867 L515.788 287.756 L511.505 287.756 L511.505 251.737 L515.788 251.737 L515.788 265.765 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M558.287 262.594 L558.287 266.622 Q556.482 265.696 554.537 265.233 Q552.593 264.77 550.51 264.77 Q547.338 264.77 545.741 265.742 Q544.167 266.714 544.167 268.659 Q544.167 270.14 545.301 270.997 Q546.436 271.83 549.862 272.594 L551.32 272.918 Q555.857 273.89 557.755 275.672 Q559.676 277.432 559.676 280.603 Q559.676 284.214 556.806 286.321 Q553.959 288.427 548.959 288.427 Q546.875 288.427 544.607 288.01 Q542.362 287.617 539.862 286.807 L539.862 282.409 Q542.223 283.635 544.514 284.26 Q546.806 284.862 549.051 284.862 Q552.061 284.862 553.681 283.844 Q555.301 282.802 555.301 280.927 Q555.301 279.191 554.121 278.265 Q552.963 277.339 549.005 276.483 L547.524 276.135 Q543.565 275.302 541.806 273.589 Q540.047 271.853 540.047 268.844 Q540.047 265.186 542.639 263.196 Q545.232 261.205 550 261.205 Q552.362 261.205 554.445 261.552 Q556.528 261.899 558.287 262.594 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M588.635 273.728 L588.635 275.811 L569.051 275.811 Q569.329 280.209 571.69 282.524 Q574.074 284.816 578.31 284.816 Q580.764 284.816 583.056 284.214 Q585.371 283.612 587.639 282.409 L587.639 286.436 Q585.347 287.408 582.94 287.918 Q580.533 288.427 578.056 288.427 Q571.852 288.427 568.218 284.816 Q564.607 281.205 564.607 275.047 Q564.607 268.682 568.033 264.955 Q571.482 261.205 577.315 261.205 Q582.547 261.205 585.579 264.585 Q588.635 267.941 588.635 273.728 M584.375 272.478 Q584.329 268.983 582.408 266.899 Q580.51 264.816 577.361 264.816 Q573.797 264.816 571.644 266.83 Q569.514 268.844 569.19 272.501 L584.375 272.478 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M610.648 265.811 Q609.931 265.395 609.074 265.21 Q608.241 265.001 607.222 265.001 Q603.611 265.001 601.667 267.362 Q599.746 269.7 599.746 274.098 L599.746 287.756 L595.463 287.756 L595.463 261.83 L599.746 261.83 L599.746 265.858 Q601.088 263.497 603.241 262.362 Q605.394 261.205 608.472 261.205 Q608.912 261.205 609.445 261.274 Q609.977 261.321 610.625 261.436 L610.648 265.811 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M612.06 261.83 L616.574 261.83 L624.676 283.589 L632.778 261.83 L637.292 261.83 L627.569 287.756 L621.782 287.756 L612.06 261.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M654.954 274.723 Q649.792 274.723 647.801 275.904 Q645.81 277.084 645.81 279.932 Q645.81 282.2 647.292 283.543 Q648.796 284.862 651.366 284.862 Q654.907 284.862 657.037 282.362 Q659.19 279.839 659.19 275.672 L659.19 274.723 L654.954 274.723 M663.449 272.964 L663.449 287.756 L659.19 287.756 L659.19 283.821 Q657.731 286.182 655.555 287.316 Q653.38 288.427 650.231 288.427 Q646.25 288.427 643.889 286.205 Q641.551 283.959 641.551 280.209 Q641.551 275.834 644.468 273.612 Q647.407 271.39 653.217 271.39 L659.19 271.39 L659.19 270.973 Q659.19 268.034 657.245 266.436 Q655.324 264.816 651.829 264.816 Q649.606 264.816 647.5 265.348 Q645.393 265.881 643.449 266.946 L643.449 263.01 Q645.787 262.108 647.986 261.668 Q650.185 261.205 652.268 261.205 Q657.893 261.205 660.671 264.122 Q663.449 267.038 663.449 272.964 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M676.435 254.469 L676.435 261.83 L685.208 261.83 L685.208 265.14 L676.435 265.14 L676.435 279.214 Q676.435 282.385 677.291 283.288 Q678.171 284.191 680.833 284.191 L685.208 284.191 L685.208 287.756 L680.833 287.756 Q675.903 287.756 674.028 285.927 Q672.153 284.075 672.153 279.214 L672.153 265.14 L669.028 265.14 L669.028 261.83 L672.153 261.83 L672.153 254.469 L676.435 254.469 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M690.81 261.83 L695.069 261.83 L695.069 287.756 L690.81 287.756 L690.81 261.83 M690.81 251.737 L695.069 251.737 L695.069 257.131 L690.81 257.131 L690.81 251.737 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M714.027 264.816 Q710.601 264.816 708.611 267.501 Q706.62 270.163 706.62 274.816 Q706.62 279.469 708.588 282.154 Q710.578 284.816 714.027 284.816 Q717.43 284.816 719.421 282.131 Q721.412 279.446 721.412 274.816 Q721.412 270.21 719.421 267.524 Q717.43 264.816 714.027 264.816 M714.027 261.205 Q719.583 261.205 722.754 264.816 Q725.925 268.427 725.925 274.816 Q725.925 281.182 722.754 284.816 Q719.583 288.427 714.027 288.427 Q708.449 288.427 705.277 284.816 Q702.129 281.182 702.129 274.816 Q702.129 268.427 705.277 264.816 Q708.449 261.205 714.027 261.205 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M754.536 272.108 L754.536 287.756 L750.277 287.756 L750.277 272.247 Q750.277 268.566 748.842 266.737 Q747.407 264.909 744.536 264.909 Q741.087 264.909 739.097 267.108 Q737.106 269.307 737.106 273.103 L737.106 287.756 L732.824 287.756 L732.824 261.83 L737.106 261.83 L737.106 265.858 Q738.634 263.52 740.694 262.362 Q742.777 261.205 745.486 261.205 Q749.953 261.205 752.245 263.983 Q754.536 266.737 754.536 272.108 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M779.559 262.594 L779.559 266.622 Q777.754 265.696 775.809 265.233 Q773.865 264.77 771.782 264.77 Q768.61 264.77 767.013 265.742 Q765.439 266.714 765.439 268.659 Q765.439 270.14 766.573 270.997 Q767.708 271.83 771.134 272.594 L772.592 272.918 Q777.129 273.89 779.027 275.672 Q780.948 277.432 780.948 280.603 Q780.948 284.214 778.078 286.321 Q775.231 288.427 770.231 288.427 Q768.147 288.427 765.879 288.01 Q763.634 287.617 761.134 286.807 L761.134 282.409 Q763.495 283.635 765.786 284.26 Q768.078 284.862 770.323 284.862 Q773.333 284.862 774.953 283.844 Q776.573 282.802 776.573 280.927 Q776.573 279.191 775.393 278.265 Q774.235 277.339 770.277 276.483 L768.796 276.135 Q764.837 275.302 763.078 273.589 Q761.319 271.853 761.319 268.844 Q761.319 265.186 763.911 263.196 Q766.504 261.205 771.272 261.205 Q773.634 261.205 775.717 261.552 Q777.8 261.899 779.559 262.594 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip450)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"305.946,322.316 448.747,322.316 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M472.547 305.036 L492.408 305.036 L492.408 308.971 L477.223 308.971 L477.223 319.156 L490.927 319.156 L490.927 323.091 L477.223 323.091 L477.223 339.596 L472.547 339.596 L472.547 305.036 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M496.181 313.67 L500.441 313.67 L500.441 339.596 L496.181 339.596 L496.181 313.67 M496.181 303.577 L500.441 303.577 L500.441 308.971 L496.181 308.971 L496.181 303.577 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M509.353 303.577 L513.612 303.577 L513.612 339.596 L509.353 339.596 L509.353 303.577 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M526.737 306.309 L526.737 313.67 L535.51 313.67 L535.51 316.98 L526.737 316.98 L526.737 331.054 Q526.737 334.225 527.593 335.128 Q528.473 336.031 531.135 336.031 L535.51 336.031 L535.51 339.596 L531.135 339.596 Q526.204 339.596 524.329 337.767 Q522.454 335.915 522.454 331.054 L522.454 316.98 L519.329 316.98 L519.329 313.67 L522.454 313.67 L522.454 306.309 L526.737 306.309 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M563.287 325.568 L563.287 327.651 L543.704 327.651 Q543.982 332.049 546.343 334.364 Q548.727 336.656 552.963 336.656 Q555.417 336.656 557.709 336.054 Q560.024 335.452 562.292 334.249 L562.292 338.276 Q560 339.248 557.593 339.758 Q555.186 340.267 552.709 340.267 Q546.505 340.267 542.871 336.656 Q539.26 333.045 539.26 326.887 Q539.26 320.522 542.686 316.795 Q546.135 313.045 551.968 313.045 Q557.199 313.045 560.232 316.425 Q563.287 319.781 563.287 325.568 M559.028 324.318 Q558.982 320.823 557.061 318.739 Q555.162 316.656 552.014 316.656 Q548.45 316.656 546.297 318.67 Q544.167 320.684 543.843 324.341 L559.028 324.318 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M585.301 317.651 Q584.584 317.235 583.727 317.05 Q582.894 316.841 581.875 316.841 Q578.264 316.841 576.32 319.202 Q574.398 321.54 574.398 325.938 L574.398 339.596 L570.116 339.596 L570.116 313.67 L574.398 313.67 L574.398 317.698 Q575.741 315.337 577.894 314.202 Q580.047 313.045 583.125 313.045 Q583.565 313.045 584.097 313.114 Q584.63 313.161 585.278 313.276 L585.301 317.651 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M610.903 325.568 L610.903 327.651 L591.32 327.651 Q591.597 332.049 593.959 334.364 Q596.343 336.656 600.579 336.656 Q603.033 336.656 605.324 336.054 Q607.639 335.452 609.908 334.249 L609.908 338.276 Q607.616 339.248 605.208 339.758 Q602.801 340.267 600.324 340.267 Q594.121 340.267 590.486 336.656 Q586.875 333.045 586.875 326.887 Q586.875 320.522 590.301 316.795 Q593.75 313.045 599.584 313.045 Q604.815 313.045 607.847 316.425 Q610.903 319.781 610.903 325.568 M606.644 324.318 Q606.597 320.823 604.676 318.739 Q602.778 316.656 599.63 316.656 Q596.065 316.656 593.912 318.67 Q591.783 320.684 591.459 324.341 L606.644 324.318 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M634.954 317.605 L634.954 303.577 L639.213 303.577 L639.213 339.596 L634.954 339.596 L634.954 335.707 Q633.611 338.022 631.551 339.156 Q629.514 340.267 626.644 340.267 Q621.945 340.267 618.982 336.517 Q616.042 332.767 616.042 326.656 Q616.042 320.545 618.982 316.795 Q621.945 313.045 626.644 313.045 Q629.514 313.045 631.551 314.179 Q633.611 315.29 634.954 317.605 M620.44 326.656 Q620.44 331.355 622.361 334.04 Q624.306 336.702 627.685 336.702 Q631.065 336.702 633.009 334.04 Q634.954 331.355 634.954 326.656 Q634.954 321.957 633.009 319.295 Q631.065 316.61 627.685 316.61 Q624.306 316.61 622.361 319.295 Q620.44 321.957 620.44 326.656 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M673.287 303.624 Q670.185 308.948 668.68 314.156 Q667.176 319.364 667.176 324.712 Q667.176 330.059 668.68 335.313 Q670.208 340.545 673.287 345.846 L669.583 345.846 Q666.111 340.406 664.375 335.151 Q662.662 329.897 662.662 324.712 Q662.662 319.55 664.375 314.318 Q666.088 309.087 669.583 303.624 L673.287 303.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M698.889 309.874 L698.889 318.832 L711.782 318.832 L711.782 322.767 L698.889 322.767 L698.889 331.725 L695 331.725 L695 322.767 L682.106 322.767 L682.106 318.832 L695 318.832 L695 309.874 L698.889 309.874 M682.106 335.661 L711.782 335.661 L711.782 339.596 L682.106 339.596 L682.106 335.661 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M722.685 335.661 L730.324 335.661 L730.324 309.295 L722.013 310.962 L722.013 306.702 L730.277 305.036 L734.953 305.036 L734.953 335.661 L742.592 335.661 L742.592 339.596 L722.685 339.596 L722.685 335.661 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M761.481 317.05 Q757.962 317.05 756.064 319.596 Q754.073 322.258 754.073 326.656 Q754.073 331.309 756.041 333.994 Q758.032 336.656 761.481 336.656 Q764.884 336.656 766.874 333.971 Q768.865 331.286 768.865 326.656 Q768.865 322.42 766.874 319.596 Q765.046 317.05 761.481 317.05 M761.481 313.67 L775.624 313.67 L775.624 317.929 L770.856 317.929 Q773.379 321.54 773.379 326.656 Q773.379 333.022 770.208 336.633 Q767.036 340.267 761.481 340.267 Q755.902 340.267 752.754 336.633 Q749.583 333.022 749.583 326.656 Q749.583 320.244 752.754 316.656 Q755.37 313.67 761.481 313.67 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M780.809 303.624 L784.513 303.624 Q787.985 309.087 789.698 314.318 Q791.434 319.55 791.434 324.712 Q791.434 329.897 789.698 335.151 Q787.985 340.406 784.513 345.846 L780.809 345.846 Q783.888 340.545 785.393 335.313 Q786.92 330.059 786.92 324.712 Q786.92 319.364 785.393 314.156 Q783.888 308.948 780.809 303.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"This page was generated using Literate.jl.","category":"page"}]
}
