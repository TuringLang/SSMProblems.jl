var documenterSearchIndex = {"docs":
[{"location":"kwargs/#Control-Variables-and-Keyword-Arguments","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"","category":"section"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"All functions that form part of the SSMProblems model interface should accept keyword arguments.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"These argument has multiple uses, but are generally used to pass in additional information to the model at inference time. Although this might seem unnecessary and clunky for simple models, this addition leads to a great amount of flexibility that allows complex and exotic models to be implemented with little effort or performance penalty.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"If your model does not require any keyword arguments, you do not need to use any in your function body (though ; kwargs... should still be included in the signature).","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"When forward-simulating, filtering or smoothing from a model, these keyword arguments are passed to the SSM definition. Some advanced algorithms such as the Rao-Blackwellised particle filter may also introduce additional keyword arguments at inference time.","category":"page"},{"location":"kwargs/#Use-as-Control-Variables","page":"Control Variables and Keyword Arguments","title":"Use as Control Variables","text":"","category":"section"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"In simple cases kwargs can be used to specify a control (or input) vector as is common in control engineering.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"In this case, the simulate function for the latent dynamics may look like this:","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"function simulate(\n    rng::AbstractRNG, \n    dyn::SimpleLatentDynamics, \n    step::Int, \n    state::Float64; \n    control::Float64,  # new keyword argument\n    kwargs...\n)\n    return state + control + rand(rng, Normal(0.0, 0.1))\nend","category":"page"},{"location":"kwargs/#Use-as-Time-Deltas","page":"Control Variables and Keyword Arguments","title":"Use as Time Deltas","text":"","category":"section"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"Keywords are not limited to be used as simple control vectors, and can in fact be used to pass in arbitrary additional information to the model at runtime. A common use case is when considering data arriving at irregular time intervals. In this case, they keyword arguments can be used to pass in the time delta between observations.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"In this case, the simulate function for the latent dynamics may look like this: ","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"function simulate(\n    rng::AbstractRNG, \n    dyn::SimpleLatentDynamics, \n    step::Int, \n    state::Float64; \n    dts::Vector{Float64},  # new keyword argument\n    kwargs...\n)\n    dt = dts[step]\n    return state + dt * rand(rng, Normal(0.1, 1.0))\nend","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"Note, that it is also possible to store this data in the latent dynamic's struct and extract it during a transition (e.g. dyn.dts[timestep]). However, this approach  has the disadvantage that the control variables must be defined when the model is instantiated. Further, this means that re-runs with new control variables require a re-instantiation of the model.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"Using keyword arguments for control variables allows for a separation between the abstract definition of the state space model and the concrete simulation or inference given specific data.","category":"page"},{"location":"kwargs/#Use-with-Streaming-Data","page":"Control Variables and Keyword Arguments","title":"Use with Streaming Data","text":"","category":"section"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"The de-coupling of model definition and data that comes from using keyword arguments makes it easy to use SSMProblems with streaming data. As control variables arrive, these can be passed to the model distributions via keyword arguments.","category":"page"},{"location":"kwargs/#Use-in-Rao-Blackwellisation","page":"Control Variables and Keyword Arguments","title":"Use in Rao-Blackwellisation","text":"","category":"section"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"Briefly, a Rao-Blackwellised particle filter is an efficient variant of the generic particle filter that can be applied to state space models that have an analytically tractable sub-model. The filter behaves as two nested filters, a regular particle filter for the outer model, and an analytic filter (e.g. Kalman filter) for the inner sub-model.","category":"page"},{"location":"kwargs/","page":"Control Variables and Keyword Arguments","title":"Control Variables and Keyword Arguments","text":"Since the value of the keyword arguments can be defined at inference time, the outer filter can pass information to the inner filter via through these. This leads to a clean and generic interface for Rao-Blackwellised filtering, which is not possible with other state space model packages.","category":"page"},{"location":"#SSMProblems","page":"Home","title":"SSMProblems","text":"","category":"section"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In the julia REPL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add SSMProblems","category":"page"},{"location":"#Documentation","page":"Home","title":"Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SSMProblems defines a generic interface for state space models (SSMs). Its main objective is to provide a consistent interface for filtering and smoothing algorithms to interact with.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Consider a standard (Markovian) state-space model from[Murray]: (Image: state space model)","category":"page"},{"location":"","page":"Home","title":"Home","text":"[Murray]: Murray, Lawrence & Lee, Anthony & Jacob, Pierre. (2013). Rethinking resampling in the particle filter on graphics processing units.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The following three distributions fully specify the model:","category":"page"},{"location":"","page":"Home","title":"Home","text":"The initialisation distribution, f_0, for the initial latent state X_0\nThe transition distribution, f, for the latent state X_t given the previous X_t-1\nThe observation distribution, g, for an observation Y_t given the state X_t","category":"page"},{"location":"","page":"Home","title":"Home","text":"The dynamics of the model are given by,","category":"page"},{"location":"","page":"Home","title":"Home","text":"beginaligned\nx_0 sim f_0(x_0) \nx_t  x_t-1 sim f(x_t  x_t-1) \ny_t  x_t sim g(y_t  x_t)\nendaligned","category":"page"},{"location":"","page":"Home","title":"Home","text":"and the joint law is,","category":"page"},{"location":"","page":"Home","title":"Home","text":"p(x_0T y_0T) = f_0(x_0) prod_t g(y_t  x_t) f(x_t  x_t-1)","category":"page"},{"location":"","page":"Home","title":"Home","text":"We can consider a state space model as being made up of two components:","category":"page"},{"location":"","page":"Home","title":"Home","text":"A latent Markov chain describing the evolution of the latent state\nAn observation process describing the relationship between the latent states and the observations","category":"page"},{"location":"","page":"Home","title":"Home","text":"Through this lens, we see that the distributions f_0, f fully describe the latent Markov chain, whereas g describes the observation process.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A user of SSMProblems may define these three distributions directly. Alternatively, they can define a subset of methods for sampling and evaluating log-densities of the distributions, depending on the requirements of the filtering/smoothing algorithms they intend to use.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Using the first approach, we can define a simple linear state space model as follows:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Distributions\nusing SSMProblems\n\nstruct SimpleLatentDynamics <: LatentDynamics end\n\nfunction distribution(rng::AbstractRNG, dyn::SimpleLatentDynamics; kwargs...)\n    return Normal(0.0, 1.0)\nend\n\nfunction distribution(rng::AbstractRNG, dyn::SimpleLatentDynamics, step::Int, state::Float64; kwargs...)\n    return Normal(state, 0.1)\nend\n\nstruct SimpleObservationProcess <: ObservationProcess end\n\nfunction distribution(\n    obs::SimpleObservationPRocess, step::Int, state::Float64, observation::Float64; kwargs...\n)\n    return Normal(state, 0.5)\nend\n\n# Construct an SSM from the components\ndyn = SimpleLatentDynamics()\nobs = SimpleObservationProcess()\nmodel = StateSpaceModel(dyn, obs)","category":"page"},{"location":"","page":"Home","title":"Home","text":"There are a few things to note here:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Two methods must be defined for the LatentDynamics, one containing step/state arguments and used for transitioning, and one without these, used for initialisation.\nEvery function should accept keyword arguments. This is key feature of SSMProblems that allows it to flexibly represent more exotic models without any performance penalty. You can read more about it here.\nIf your latent dynamics and observation process cannot be represented as a Distribution object, you may implement specific methods for sampling and log-density evaluation as documented below.","category":"page"},{"location":"","page":"Home","title":"Home","text":"These distribution definitions are used to define simulate and logdensity methods for the latent dynamics and observation process. Package users can then interact with the state space model through these functions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For example, a bootstrap filter targeting the filtering distribution p(x_t  y_0t) using N particles would roughly follow:","category":"page"},{"location":"","page":"Home","title":"Home","text":"dyn, obs = model.dyn, model.obs\n\nfor (i, observation) in enumerate(observations)\n    idx = resample(rng, log_weights)\n    particles = particles[idx]\n    for i in 1:N\n        particles[i] = simulate(rng, dyn, i, particles[i])\n        log_weights[i] += logdensity(obs, i, particles[i], observation)\n    end\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"For more thorough examples, see the provided example scripts.","category":"page"},{"location":"#Interface","page":"Home","title":"Interface","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [SSMProblems]\nOrder   = [:type, :function, :module]","category":"page"},{"location":"#SSMProblems.AbstractStateSpaceModel","page":"Home","title":"SSMProblems.AbstractStateSpaceModel","text":"An abstract type for state space models.\n\nAny concrete subtype of AbstractStateSpaceModel should implement a method for AbstractMCMC.sample which performs forward simulation. For an example implementation, see AbstractMCMC.sample(::StateSpaceModel).\n\nFor most regular use-cases, the predefined StateSpaceModel type, documented below, should be sufficient.\n\n\n\n\n\n","category":"type"},{"location":"#SSMProblems.LatentDynamics","page":"Home","title":"SSMProblems.LatentDynamics","text":"Latent dynamics of a state space model.\n\nAny concrete subtype of LatentDynamics should implement the functions logdensity and simulate, by defining two methods as documented below, one for initialisation and one for transitioning. Whether each of these functions need to be implemented depends on the exact inference algorithm that is intended to be used.\n\nAlternatively, you may specify methods for the function distribution which will be used to define the above methods.\n\nAll of these methods should accept keyword arguments through kwargs... to facilitate inference-time dependencies of the dynamics as explained in Control Variables and Keyword Arguments.\n\nThe latent states should be of type ET which should be a composed from T, the arithmetic type used for the dynamics (e.g. Float32, ForwardDiff.Dual).\n\nParameters\n\nT: The arithmetic type of the latent dynamics.\nET: The element type of the latent dynamics.\n\n\n\n\n\n","category":"type"},{"location":"#SSMProblems.ObservationProcess","page":"Home","title":"SSMProblems.ObservationProcess","text":"Observation process of a state space model.\n\nAny concrete subtype of ObservationProcess must implement the logdensity method, as defined below. Optionally, it may also implement simulate for use in forward simulation of the state space model.\n\nAlternatively, you may specify a method for distribution, which will be used to define both of the above methods.\n\nAll of these methods should accept keyword arguments through kwargs... to facilitate inference-time dependencies of the observations as explained in Control Variables and Keyword Arguments.\n\nThe observations should be of type ET which should be a composed from T, the arithmetic type used for the observations (e.g. Float32, ForwardDiff.Dual).\n\nParameters\n\nT: The arithmetic type of the observation process.\nET: The element type of the observation process.\n\n\n\n\n\n","category":"type"},{"location":"#SSMProblems.StateSpaceModel","page":"Home","title":"SSMProblems.StateSpaceModel","text":"A state space model.\n\nA vanilla implementation of a state space model, composed of a latent dynamics and an observation process.\n\nFields\n\ndyn::LD: The latent dynamics of the state space model.\nobs::OP: The observation process of the state space model.\n\nParameters\n\nT: The arithmetic type of the state space model, which the latent dynamics and       observation process should be consistent with.\nLD: The type of the latent dynamics.\nOP: The type of the observation process.\n\n\n\n\n\n","category":"type"},{"location":"#Base.eltype-Union{Tuple{Type{<:LatentDynamics{T, ET}}}, Tuple{ET}, Tuple{T}} where {T, ET}","page":"Home","title":"Base.eltype","text":"eltype(::Type{<:LatentDynamics})\neltype(dyn::LatentDynamics)\n\nReturn the type of the state of the latent dynamics.\n\n\n\n\n\n","category":"method"},{"location":"#Base.eltype-Union{Tuple{Type{<:ObservationProcess{T, ET}}}, Tuple{ET}, Tuple{T}} where {T, ET}","page":"Home","title":"Base.eltype","text":"eltype(::Type{<:ObservationProcess})\neltype(obs::ObservationProcess)\n\nReturn the type of the observations of the observation process.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.arithmetic_type-Tuple{StateSpaceModel}","page":"Home","title":"SSMProblems.arithmetic_type","text":"arithmetic_type(::Type{<:StateSpaceModel})\narithmetic_type(model::StateSpaceModel)\n\nReturn the arithmetic type of the state space model.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.arithmetic_type-Union{Tuple{Type{<:LatentDynamics{T}}}, Tuple{T}} where T","page":"Home","title":"SSMProblems.arithmetic_type","text":"arithmetic_type(::Type{<:LatentDynamics})\narithmetic_type(dyn::LatentDynamics)\n\nReturn the arithmetic type of the latent dynamics.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.arithmetic_type-Union{Tuple{Type{<:ObservationProcess{T}}}, Tuple{T}} where T","page":"Home","title":"SSMProblems.arithmetic_type","text":"arithmetic_type(::Type{<:ObservationProcess})\narithmetic_type(obs::ObservationProcess)\n\nReturn the arithmetic type of the observation process.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_logdensity-Tuple{Random.AbstractRNG, LatentDynamics, Any}","page":"Home","title":"SSMProblems.batch_logdensity","text":"batch_logdensity([rng::AbstractRNG], dyn::LatentDynamics, new_states; kwargs...)\n\nCompute the log-densities of a batch of initial states for the latent dynamics.\n\nThe method should return the log-densities of a batch of initial states `new_states`\nfor the initial time step of the latent dynamics.\n\nSee also [`LatentDynamics`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_logdensity-Tuple{Random.AbstractRNG, LatentDynamics, Integer, Any, Any}","page":"Home","title":"SSMProblems.batch_logdensity","text":"batch_logdensity([rng::AbstractRNG], dyn::LatentDynamics, step::Integer, prev_states, new_states; kwargs...)\n\nCompute the log-densities of a batch of transitions of the latent dynamics.\n\nThe method should return the log-densities of a batch of states `new_states` for the\ncurrent time step, `step`, given the previous states, `prev_states`.\n\nSee also [`LatentDynamics`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_logdensity-Tuple{Random.AbstractRNG, ObservationProcess, Integer, Any, Any}","page":"Home","title":"SSMProblems.batch_logdensity","text":"batch_logdensity([rng::AbstractRNG], obs::ObservationProcess, step::Integer, state, observations; kwargs...)\n\nCompute the log-densities of a batch of observations given the current states.\n\nThe method should return the log-densities of a batch of observations `observations`\ngiven the current states `states` at time step `step`.\n\nSee also [`ObservationProcess`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_simulate-Tuple{Random.AbstractRNG, LatentDynamics, Integer, Any}","page":"Home","title":"SSMProblems.batch_simulate","text":"batch_simulate([rng::AbstractRNG], dyn::LatentDynamics, step::Integer, prev_states; kwargs...)\n\nSimulate a batch of transitions of the latent dynamics.\n\nThe method should return a batch of random states for the current time step, `step`,\ngiven the previous states, `prev_states`.\n\nSee also [`LatentDynamics`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_simulate-Tuple{Random.AbstractRNG, LatentDynamics, Integer}","page":"Home","title":"SSMProblems.batch_simulate","text":"batch_simulate([rng::AbstractRNG], dyn::LatentDynamics, N::Integer; kwargs...)\n\nSimulate a batch of initial states for the latent dynamics.\n\nThe method should return a batch of random initial states for the first time step of the\nlatent dynamics. The batch size is determined by the `N` argument.\n\nSee also [`LatentDynamics`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.batch_simulate-Tuple{Random.AbstractRNG, ObservationProcess, Integer, Any}","page":"Home","title":"SSMProblems.batch_simulate","text":"batch_simulate([rng::AbstractRNG], obs::ObservationProcess, step::Integer, states; kwargs...)\n\nSimulate a batch of observations given the current states.\n\nThe method should return a batch of random observations given the current states\n`states` at time step `step`.\n\nSee also [`ObservationProcess`](@ref).\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.distribution-Tuple{LatentDynamics, Integer, Any}","page":"Home","title":"SSMProblems.distribution","text":"distribution(dyn::LatentDynamics, step::Integer, prev_state; kwargs...)\n\nReturn the transition distribution for the latent dynamics.\n\nThe method should return the distribution of the current state (at time step step) given  the previous state prev_state. The returned value should be a Distributions.Distribution object that implements sampling and log-density calculations. \n\nSee also LatentDynamics.\n\nReturns\n\nDistributions.Distribution: The distribution of the new state.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.distribution-Tuple{LatentDynamics}","page":"Home","title":"SSMProblems.distribution","text":"distribution(dyn::LatentDynamics; kwargs...)\n\nReturn the initialisation distribution for the latent dynamics.\n\nThe method should return the distribution of the initial state of the latent dynamics. The  returned value should be a Distributions.Distribution object that implements sampling and log-density calculations.\n\nSee also LatentDynamics.\n\nReturns\n\nDistributions.Distribution: The distribution of the initial state.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.distribution-Tuple{ObservationProcess, Integer, Any}","page":"Home","title":"SSMProblems.distribution","text":"distribution(obs::ObservationProcess, step::Integer, state; kwargs...)\n\nReturn the observation distribution for the observation process.\n\nThe method should return the distribution of an observation given the current state state at time step step. The returned value should be a Distributions.Distribution object that implements sampling and log-density calculations.\n\nSee also ObservationProcess.\n\nReturns\n\nDistributions.Distribution: The distribution of the observation.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.logdensity-Tuple{LatentDynamics, Any}","page":"Home","title":"SSMProblems.logdensity","text":"logdensity(dyn::LatentDynamics, new_state; kwargs...)\n\nCompute the log-density of an initial state for the latent dynamics.\n\nThe method should return the log-density of the initial state new_state for the initial time step of the latent dynamics.\n\nThe default behaviour is to compute the log-density of the distribution return by the corresponding distribution() method.\n\nSee also LatentDynamics.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.logdensity-Tuple{LatentDynamics, Integer, Any, Any}","page":"Home","title":"SSMProblems.logdensity","text":"logdensity(dyn::LatentDynamics, step::Integer, prev_state, new_state; kwargs...)\n\nCompute the log-density of a transition of the latent dynamics.\n\nThe method should return the log-density of the new state new_state (at time step step) given the previous state prev_state \n\nThe default behaviour is to compute the log-density of the distribution return by the corresponding distribution() method.\n\nSee also LatentDynamics.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.logdensity-Tuple{ObservationProcess, Integer, Any, Any}","page":"Home","title":"SSMProblems.logdensity","text":"logdensity(obs::ObservationProcess, step::Integer, state, observation; kwargs...)\n\nCompute the log-density of an observation given the current state.\n\nThe method should return the log-density of the observation observation given the current state state at time step step.\n\nThe default behaviour is to compute the log-density of the distribution return by the corresponding distribution() method.\n\nSee also ObservationProcess.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.simulate-Tuple{Random.AbstractRNG, LatentDynamics, Integer, Any}","page":"Home","title":"SSMProblems.simulate","text":"simulate([rng::AbstractRNG], dyn::LatentDynamics, step::Integer, prev_state; kwargs...)\n\nSimulate a transition of the latent dynamics.\n\nThe method should return a random state for the current time step, step,  given the previous state, prev_state.\n\nThe default behaviour is generate a random sample from distribution returned by the corresponding distribution() method.\n\nSee also LatentDynamics.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.simulate-Tuple{Random.AbstractRNG, LatentDynamics}","page":"Home","title":"SSMProblems.simulate","text":"simulate([rng::AbstractRNG], dyn::LatentDynamics; kwargs...)\n\nSimulate an initial state for the latent dynamics.\n\nThe method should return a random initial state for the first time step of the latent dynamics.\n\nThe default behaviour is generate a random sample from distribution returned by the corresponding distribution() method.\n\nSee also LatentDynamics.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.simulate-Tuple{Random.AbstractRNG, ObservationProcess, Integer, Any}","page":"Home","title":"SSMProblems.simulate","text":"simulate([rng::AbstractRNG], process::ObservationProcess, step::Integer, state; kwargs...)\n\nSimulate an observation given the current state.\n\nThe method should return a random observation given the current state state at time step step.\n\nThe default behaviour is generate a random sample from distribution returned by the corresponding distribution() method.\n\nSee also ObservationProcess.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.sample-Tuple{AbstractStateSpaceModel, Integer}","page":"Home","title":"StatsBase.sample","text":"sample(model::AbstractStateSpaceModel, T::Integer; kwargs...)\n\nSimulate a trajectory using the default random number generator.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.sample-Union{Tuple{OP}, Tuple{LD}, Tuple{Random.AbstractRNG, StateSpaceModel{<:Real, LD, OP}, Integer}} where {LD, OP}","page":"Home","title":"StatsBase.sample","text":"sample([rng::AbstractRNG], model::StateSpaceModel, T::Integer; kwargs...)\n\nSimulate a trajectory of length T from the state space model.\n\nReturns a tuple (x0, xs, ys) where x0 is the initial state, xs is a vector of latent states, and ys is a vector of observations.\n\n\n\n\n\n","category":"method"},{"location":"#SSMProblems.SSMProblems","page":"Home","title":"SSMProblems.SSMProblems","text":"A unified interface to define state space models in the context of particle MCMC algorithms.\n\n\n\n\n\n","category":"module"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"EditURL = \"../../../examples/kalman-filter/script.jl\"","category":"page"},{"location":"examples/kalman-filter/#Kalman-Filter","page":"Kalman Filter","title":"Kalman Filter","text":"","category":"section"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"This example implements a Kalman filter for a linear Gaussian state space model using the SSMProblems interface.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"using AbstractMCMC\nusing Distributions\nusing LinearAlgebra\nusing Plots\nusing Random\nusing UnPack\n\nusing SSMProblems","category":"page"},{"location":"examples/kalman-filter/#Model-Definition","page":"Kalman Filter","title":"Model Definition","text":"","category":"section"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We start by defining structs to store the paramaters for our specific latent dynamics and observation process.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"The latent dynamics have the following form:","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"x[0] = z + ϵ,                 ϵ    ∼ N(0, P)\nx[k] = Φx[k-1] + b + w[k],    w[k] ∼ N(0, Q)","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We store all of these paramaters in a struct.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"struct LinearGaussianLatentDynamics{T<:Real} <: LatentDynamics{T,Vector{T}}\n    z::Vector{T}\n    P::Matrix{T}\n    Φ::Matrix{T}\n    b::Vector{T}\n    Q::Matrix{T}\nend","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Note, that our specific dynamics should be subtypes of the abstract LatentDynamics type. Importantly, consider the type parameters used. Whereas the type parameter(s) of our struct can be whatever is/are most suitable, the type parameters of LatentDynamics should reflect arithmetic type and the type of our latent state, respectively. In this case, since we are considering a multi-dimensional problem, we use Vector{T} for the latter.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Similarly, the observation process is defined by the following equation:","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"y[k] = Hx[k] + v[k],          v[k] ∼ N(0, R)","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"struct LinearGaussianObservationProcess{T<:Real} <: ObservationProcess{T,Vector{T}}\n    H::Matrix{T}\n    R::Matrix{T}\nend","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We then define general transition and observation distributions to be used in forward simulation. If our model were time-inhomogenous, we could make our distribution functions depend on the step argument or pass in control variables via keyword arguments.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Even if we did not require forward simulation (e.g. we were given observations), it is still useful to define these methods as they allow us to run a particle filter on our model with no additional implementation required. Although a Kalman filter would generally be preferred in this linear Gaussian case, it may be of interest to compare the sampling performance with a general particle filter.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"function SSMProblems.distribution(model::LinearGaussianLatentDynamics; kwargs...)\n    return MvNormal(model.z, model.P)\nend\nfunction SSMProblems.distribution(\n    model::LinearGaussianLatentDynamics{T}, step::Int, prev_state::Vector{T}; kwargs...\n) where {T}\n    return MvNormal(model.Φ * prev_state + model.b, model.Q)\nend\nfunction SSMProblems.distribution(\n    model::LinearGaussianObservationProcess{T}, step::Int, state::Vector{T}; kwargs...\n) where {T}\n    return MvNormal(model.H * state, model.R)\nend","category":"page"},{"location":"examples/kalman-filter/#Filtering-Algorithm","page":"Kalman Filter","title":"Filtering Algorithm","text":"","category":"section"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We define a concrete type to represent our sampling algorithm. This is used for dispatch to, say, distinguish from using a generic particle filter.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"struct KalmanFilter end","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"A Kalman filter is only valid for linear Gaussian state space models, so we define an alias for an SSM with linear Gaussian latent dynamics and observation process, which will be used to dispatch to the correct method.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"const LinearGaussianSSM{T} = StateSpaceModel{\n    T,<:LinearGaussianLatentDynamics{T},<:LinearGaussianObservationProcess{T}\n};","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We then define a method for the sample function. This is a standardised interface which requires the model we are sampling from, the sampling algorithm as well as the observations and any keyword arguments which will be passed to the distribution functions.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Note, that if our model were time-inhomogenous, we we need our model vectors/matrices (e.g. A, b) to depend on the step variable t or the control variables. To make our filtering algorithm generic, we should not handle this within the sample function. Instead, we would pass this responsibility to the model by defining functions of the form calc_A(model, t; kwargs...) etc.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"function AbstractMCMC.sample(\n    model::LinearGaussianSSM{MT}, ::KalmanFilter, observations::AbstractVector; kwargs...\n) where {MT}\n    T = length(observations)\n    x_filts = Vector{Vector{MT}}(undef, T)\n    P_filts = Vector{Matrix{MT}}(undef, T)\n\n    @unpack z, P, Φ, b, Q = model.dyn  ## Extract parameters\n    @unpack H, R = model.obs\n\n    # Initialise the filter\n    x = z\n    P = P\n\n    for t in 1:T\n        # Prediction step\n        x = Φ * x + b\n        P = Φ * P * Φ' + Q\n\n        # Update step\n        y = observations[t]\n        K = P * H' / (H * P * H' + R)\n        x = x + K * (y - H * x)\n        P = P - K * H * P\n\n        x_filts[t] = x\n        P_filts[t] = P\n    end\n\n    return x_filts, P_filts\nend","category":"page"},{"location":"examples/kalman-filter/#Simulation-and-Filtering","page":"Kalman Filter","title":"Simulation and Filtering","text":"","category":"section"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We define the parameters for our model as so.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"SEED = 1;\nT = 100;\nz = [-1.0, 1.0];\nP = Matrix(1.0I, 2, 2);\nΦ = [0.8 0.2; -0.1 0.8];\nb = zeros(2);\nQ = [0.2 0.0; 0.0 0.5];\nH = [1.0 0.0;];\nR = Matrix(0.3I, 1, 1);","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We can then construct the latent dynamics and observation process, before combining these to form a state space model.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"dyn = LinearGaussianLatentDynamics(z, P, Φ, b, Q);\nobs = LinearGaussianObservationProcess(H, R);\nmodel = StateSpaceModel(dyn, obs);","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Synthetic data can be generated by directly sampling from the model. This calls a utility function from the SSMProblems package, which in turn, calls the three distribution functions we defined above.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"rng = MersenneTwister(SEED);\nx0, xs, ys = sample(rng, model, T);","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"We can then run the Kalman filter and plot the filtering results against the ground truth.","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"x_filts, P_filts = AbstractMCMC.sample(model, KalmanFilter(), ys);","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"Plot trajectory for first dimension","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"p = plot(; title=\"First Dimension Kalman Filter Estimates\", xlabel=\"Step\", ylabel=\"Value\")\nplot!(p, 1:T, first.(xs); label=\"Truth\")\nscatter!(p, 1:T, first.(ys); label=\"Observations\")\nplot!(\n    p,\n    1:T,\n    first.(x_filts);\n    ribbon=sqrt.(first.(P_filts)),\n    label=\"Filtered (±1σ)\",\n    fillalpha=0.2,\n)","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip130\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip130)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip131\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip130)\" d=\"M210.746 1423.18 L2352.76 1423.18 L2352.76 123.472 L210.746 123.472  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip132\">\n    <rect x=\"210\" y=\"123\" width=\"2143\" height=\"1301\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"250.957,1423.18 250.957,123.472 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"761.251,1423.18 761.251,123.472 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1271.55,1423.18 1271.55,123.472 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1781.84,1423.18 1781.84,123.472 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2292.13,1423.18 2292.13,123.472 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,1254.86 2352.76,1254.86 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,1026.16 2352.76,1026.16 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,797.451 2352.76,797.451 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,568.746 2352.76,568.746 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"210.746,340.041 2352.76,340.041 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,1423.18 2352.76,1423.18 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"250.957,1423.18 250.957,1404.28 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"761.251,1423.18 761.251,1404.28 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1271.55,1423.18 1271.55,1404.28 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1781.84,1423.18 1781.84,1404.28 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2292.13,1423.18 2292.13,1404.28 \"/>\n<path clip-path=\"url(#clip130)\" d=\"M250.957 1454.1 Q247.346 1454.1 245.517 1457.66 Q243.712 1461.2 243.712 1468.33 Q243.712 1475.44 245.517 1479.01 Q247.346 1482.55 250.957 1482.55 Q254.591 1482.55 256.397 1479.01 Q258.226 1475.44 258.226 1468.33 Q258.226 1461.2 256.397 1457.66 Q254.591 1454.1 250.957 1454.1 M250.957 1450.39 Q256.767 1450.39 259.823 1455 Q262.901 1459.58 262.901 1468.33 Q262.901 1477.06 259.823 1481.67 Q256.767 1486.25 250.957 1486.25 Q245.147 1486.25 242.068 1481.67 Q239.013 1477.06 239.013 1468.33 Q239.013 1459.58 242.068 1455 Q245.147 1450.39 250.957 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M740.522 1481.64 L756.841 1481.64 L756.841 1485.58 L734.897 1485.58 L734.897 1481.64 Q737.559 1478.89 742.142 1474.26 Q746.749 1469.61 747.929 1468.27 Q750.175 1465.74 751.054 1464.01 Q751.957 1462.25 751.957 1460.56 Q751.957 1457.8 750.013 1456.07 Q748.091 1454.33 744.99 1454.33 Q742.791 1454.33 740.337 1455.09 Q737.906 1455.86 735.129 1457.41 L735.129 1452.69 Q737.953 1451.55 740.406 1450.97 Q742.86 1450.39 744.897 1450.39 Q750.267 1450.39 753.462 1453.08 Q756.656 1455.77 756.656 1460.26 Q756.656 1462.39 755.846 1464.31 Q755.059 1466.2 752.953 1468.8 Q752.374 1469.47 749.272 1472.69 Q746.17 1475.88 740.522 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M766.702 1451.02 L785.059 1451.02 L785.059 1454.96 L770.985 1454.96 L770.985 1463.43 Q772.003 1463.08 773.022 1462.92 Q774.04 1462.73 775.059 1462.73 Q780.846 1462.73 784.225 1465.9 Q787.605 1469.08 787.605 1474.49 Q787.605 1480.07 784.133 1483.17 Q780.661 1486.25 774.341 1486.25 Q772.165 1486.25 769.897 1485.88 Q767.652 1485.51 765.244 1484.77 L765.244 1480.07 Q767.327 1481.2 769.55 1481.76 Q771.772 1482.32 774.249 1482.32 Q778.253 1482.32 780.591 1480.21 Q782.929 1478.1 782.929 1474.49 Q782.929 1470.88 780.591 1468.77 Q778.253 1466.67 774.249 1466.67 Q772.374 1466.67 770.499 1467.08 Q768.647 1467.5 766.702 1468.38 L766.702 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1246.24 1451.02 L1264.6 1451.02 L1264.6 1454.96 L1250.53 1454.96 L1250.53 1463.43 Q1251.55 1463.08 1252.56 1462.92 Q1253.58 1462.73 1254.6 1462.73 Q1260.39 1462.73 1263.77 1465.9 Q1267.15 1469.08 1267.15 1474.49 Q1267.15 1480.07 1263.67 1483.17 Q1260.2 1486.25 1253.88 1486.25 Q1251.71 1486.25 1249.44 1485.88 Q1247.19 1485.51 1244.79 1484.77 L1244.79 1480.07 Q1246.87 1481.2 1249.09 1481.76 Q1251.31 1482.32 1253.79 1482.32 Q1257.8 1482.32 1260.13 1480.21 Q1262.47 1478.1 1262.47 1474.49 Q1262.47 1470.88 1260.13 1468.77 Q1257.8 1466.67 1253.79 1466.67 Q1251.92 1466.67 1250.04 1467.08 Q1248.19 1467.5 1246.24 1468.38 L1246.24 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1286.36 1454.1 Q1282.75 1454.1 1280.92 1457.66 Q1279.11 1461.2 1279.11 1468.33 Q1279.11 1475.44 1280.92 1479.01 Q1282.75 1482.55 1286.36 1482.55 Q1289.99 1482.55 1291.8 1479.01 Q1293.63 1475.44 1293.63 1468.33 Q1293.63 1461.2 1291.8 1457.66 Q1289.99 1454.1 1286.36 1454.1 M1286.36 1450.39 Q1292.17 1450.39 1295.23 1455 Q1298.3 1459.58 1298.3 1468.33 Q1298.3 1477.06 1295.23 1481.67 Q1292.17 1486.25 1286.36 1486.25 Q1280.55 1486.25 1277.47 1481.67 Q1274.42 1477.06 1274.42 1468.33 Q1274.42 1459.58 1277.47 1455 Q1280.55 1450.39 1286.36 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1755.69 1451.02 L1777.92 1451.02 L1777.92 1453.01 L1765.37 1485.58 L1760.48 1485.58 L1772.29 1454.96 L1755.69 1454.96 L1755.69 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1787.08 1451.02 L1805.44 1451.02 L1805.44 1454.96 L1791.36 1454.96 L1791.36 1463.43 Q1792.38 1463.08 1793.4 1462.92 Q1794.42 1462.73 1795.44 1462.73 Q1801.23 1462.73 1804.61 1465.9 Q1807.98 1469.08 1807.98 1474.49 Q1807.98 1480.07 1804.51 1483.17 Q1801.04 1486.25 1794.72 1486.25 Q1792.54 1486.25 1790.28 1485.88 Q1788.03 1485.51 1785.62 1484.77 L1785.62 1480.07 Q1787.71 1481.2 1789.93 1481.76 Q1792.15 1482.32 1794.63 1482.32 Q1798.63 1482.32 1800.97 1480.21 Q1803.31 1478.1 1803.31 1474.49 Q1803.31 1470.88 1800.97 1468.77 Q1798.63 1466.67 1794.63 1466.67 Q1792.75 1466.67 1790.88 1467.08 Q1789.03 1467.5 1787.08 1468.38 L1787.08 1451.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2251.74 1481.64 L2259.38 1481.64 L2259.38 1455.28 L2251.07 1456.95 L2251.07 1452.69 L2259.33 1451.02 L2264.01 1451.02 L2264.01 1481.64 L2271.65 1481.64 L2271.65 1485.58 L2251.74 1485.58 L2251.74 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2291.09 1454.1 Q2287.48 1454.1 2285.65 1457.66 Q2283.85 1461.2 2283.85 1468.33 Q2283.85 1475.44 2285.65 1479.01 Q2287.48 1482.55 2291.09 1482.55 Q2294.73 1482.55 2296.53 1479.01 Q2298.36 1475.44 2298.36 1468.33 Q2298.36 1461.2 2296.53 1457.66 Q2294.73 1454.1 2291.09 1454.1 M2291.09 1450.39 Q2296.9 1450.39 2299.96 1455 Q2303.04 1459.58 2303.04 1468.33 Q2303.04 1477.06 2299.96 1481.67 Q2296.9 1486.25 2291.09 1486.25 Q2285.28 1486.25 2282.2 1481.67 Q2279.15 1477.06 2279.15 1468.33 Q2279.15 1459.58 2282.2 1455 Q2285.28 1450.39 2291.09 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2321.25 1454.1 Q2317.64 1454.1 2315.81 1457.66 Q2314.01 1461.2 2314.01 1468.33 Q2314.01 1475.44 2315.81 1479.01 Q2317.64 1482.55 2321.25 1482.55 Q2324.89 1482.55 2326.69 1479.01 Q2328.52 1475.44 2328.52 1468.33 Q2328.52 1461.2 2326.69 1457.66 Q2324.89 1454.1 2321.25 1454.1 M2321.25 1450.39 Q2327.06 1450.39 2330.12 1455 Q2333.2 1459.58 2333.2 1468.33 Q2333.2 1477.06 2330.12 1481.67 Q2327.06 1486.25 2321.25 1486.25 Q2315.44 1486.25 2312.36 1481.67 Q2309.31 1477.06 2309.31 1468.33 Q2309.31 1459.58 2312.36 1455 Q2315.44 1450.39 2321.25 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1242.06 1522.08 L1242.06 1528.35 Q1238.4 1526.6 1235.15 1525.74 Q1231.91 1524.88 1228.88 1524.88 Q1223.63 1524.88 1220.77 1526.92 Q1217.93 1528.96 1217.93 1532.71 Q1217.93 1535.87 1219.81 1537.49 Q1221.72 1539.08 1227.01 1540.07 L1230.89 1540.86 Q1238.08 1542.23 1241.49 1545.7 Q1244.93 1549.14 1244.93 1554.93 Q1244.93 1561.84 1240.28 1565.4 Q1235.66 1568.97 1226.72 1568.97 Q1223.35 1568.97 1219.53 1568.2 Q1215.74 1567.44 1211.66 1565.94 L1211.66 1559.32 Q1215.58 1561.52 1219.34 1562.63 Q1223.09 1563.75 1226.72 1563.75 Q1232.23 1563.75 1235.22 1561.58 Q1238.21 1559.42 1238.21 1555.41 Q1238.21 1551.91 1236.05 1549.93 Q1233.91 1547.96 1229.01 1546.97 L1225.1 1546.21 Q1217.9 1544.78 1214.69 1541.72 Q1211.47 1538.67 1211.47 1533.22 Q1211.47 1526.92 1215.9 1523.29 Q1220.35 1519.66 1228.15 1519.66 Q1231.49 1519.66 1234.96 1520.27 Q1238.43 1520.87 1242.06 1522.08 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1260.49 1522.27 L1260.49 1532.4 L1272.55 1532.4 L1272.55 1536.95 L1260.49 1536.95 L1260.49 1556.3 Q1260.49 1560.66 1261.67 1561.9 Q1262.88 1563.14 1266.54 1563.14 L1272.55 1563.14 L1272.55 1568.04 L1266.54 1568.04 Q1259.76 1568.04 1257.18 1565.53 Q1254.6 1562.98 1254.6 1556.3 L1254.6 1536.95 L1250.3 1536.95 L1250.3 1532.4 L1254.6 1532.4 L1254.6 1522.27 L1260.49 1522.27 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1310.75 1548.76 L1310.75 1551.62 L1283.82 1551.62 Q1284.2 1557.67 1287.45 1560.85 Q1290.73 1564 1296.55 1564 Q1299.93 1564 1303.08 1563.17 Q1306.26 1562.35 1309.38 1560.69 L1309.38 1566.23 Q1306.23 1567.57 1302.92 1568.27 Q1299.61 1568.97 1296.2 1568.97 Q1287.67 1568.97 1282.67 1564 Q1277.71 1559.04 1277.71 1550.57 Q1277.71 1541.82 1282.42 1536.69 Q1287.16 1531.54 1295.18 1531.54 Q1302.38 1531.54 1306.55 1536.18 Q1310.75 1540.8 1310.75 1548.76 M1304.89 1547.04 Q1304.83 1542.23 1302.18 1539.37 Q1299.57 1536.5 1295.25 1536.5 Q1290.34 1536.5 1287.38 1539.27 Q1284.46 1542.04 1284.01 1547.07 L1304.89 1547.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1326.02 1562.7 L1326.02 1581.6 L1320.14 1581.6 L1320.14 1532.4 L1326.02 1532.4 L1326.02 1537.81 Q1327.87 1534.62 1330.67 1533.1 Q1333.5 1531.54 1337.42 1531.54 Q1343.91 1531.54 1347.95 1536.69 Q1352.03 1541.85 1352.03 1550.25 Q1352.03 1558.65 1347.95 1563.81 Q1343.91 1568.97 1337.42 1568.97 Q1333.5 1568.97 1330.67 1567.44 Q1327.87 1565.88 1326.02 1562.7 M1345.95 1550.25 Q1345.95 1543.79 1343.28 1540.13 Q1340.63 1536.44 1335.99 1536.44 Q1331.34 1536.44 1328.67 1540.13 Q1326.02 1543.79 1326.02 1550.25 Q1326.02 1556.71 1328.67 1560.4 Q1331.34 1564.07 1335.99 1564.07 Q1340.63 1564.07 1343.28 1560.4 Q1345.95 1556.71 1345.95 1550.25 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,1423.18 210.746,123.472 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,1254.86 229.644,1254.86 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,1026.16 229.644,1026.16 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,797.451 229.644,797.451 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,568.746 229.644,568.746 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"210.746,340.041 229.644,340.041 \"/>\n<path clip-path=\"url(#clip130)\" d=\"M114.631 1255.31 L144.306 1255.31 L144.306 1259.25 L114.631 1259.25 L114.631 1255.31 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M158.427 1268.21 L174.746 1268.21 L174.746 1272.14 L152.802 1272.14 L152.802 1268.21 Q155.464 1265.45 160.047 1260.82 Q164.653 1256.17 165.834 1254.83 Q168.079 1252.3 168.959 1250.57 Q169.862 1248.81 169.862 1247.12 Q169.862 1244.36 167.917 1242.63 Q165.996 1240.89 162.894 1240.89 Q160.695 1240.89 158.241 1241.66 Q155.811 1242.42 153.033 1243.97 L153.033 1239.25 Q155.857 1238.11 158.311 1237.53 Q160.765 1236.96 162.802 1236.96 Q168.172 1236.96 171.366 1239.64 Q174.561 1242.33 174.561 1246.82 Q174.561 1248.95 173.751 1250.87 Q172.964 1252.77 170.857 1255.36 Q170.278 1256.03 167.177 1259.25 Q164.075 1262.44 158.427 1268.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M114.26 1026.61 L143.936 1026.61 L143.936 1030.54 L114.26 1030.54 L114.26 1026.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M154.839 1039.5 L162.477 1039.5 L162.477 1013.14 L154.167 1014.8 L154.167 1010.54 L162.431 1008.88 L167.107 1008.88 L167.107 1039.5 L174.746 1039.5 L174.746 1043.44 L154.839 1043.44 L154.839 1039.5 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M162.802 783.25 Q159.19 783.25 157.362 786.814 Q155.556 790.356 155.556 797.486 Q155.556 804.592 157.362 808.157 Q159.19 811.698 162.802 811.698 Q166.436 811.698 168.241 808.157 Q170.07 804.592 170.07 797.486 Q170.07 790.356 168.241 786.814 Q166.436 783.25 162.802 783.25 M162.802 779.546 Q168.612 779.546 171.667 784.152 Q174.746 788.736 174.746 797.486 Q174.746 806.212 171.667 810.819 Q168.612 815.402 162.802 815.402 Q156.991 815.402 153.913 810.819 Q150.857 806.212 150.857 797.486 Q150.857 788.736 153.913 784.152 Q156.991 779.546 162.802 779.546 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M154.839 582.091 L162.477 582.091 L162.477 555.725 L154.167 557.392 L154.167 553.132 L162.431 551.466 L167.107 551.466 L167.107 582.091 L174.746 582.091 L174.746 586.026 L154.839 586.026 L154.839 582.091 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M158.427 353.386 L174.746 353.386 L174.746 357.321 L152.802 357.321 L152.802 353.386 Q155.464 350.631 160.047 346.001 Q164.653 341.349 165.834 340.006 Q168.079 337.483 168.959 335.747 Q169.862 333.988 169.862 332.298 Q169.862 329.543 167.917 327.807 Q165.996 326.071 162.894 326.071 Q160.695 326.071 158.241 326.835 Q155.811 327.599 153.033 329.15 L153.033 324.427 Q155.857 323.293 158.311 322.714 Q160.765 322.136 162.802 322.136 Q168.172 322.136 171.366 324.821 Q174.561 327.506 174.561 331.997 Q174.561 334.126 173.751 336.048 Q172.964 337.946 170.857 340.538 Q170.278 341.21 167.177 344.427 Q164.075 347.622 158.427 353.386 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M64.0042 842.696 L16.4842 860.839 L16.4842 854.123 L56.4926 839.068 L16.4842 823.981 L16.4842 817.297 L64.0042 835.408 L64.0042 842.696 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M46.0847 799.473 Q46.0847 806.571 47.7079 809.308 Q49.3312 812.045 53.2461 812.045 Q56.3653 812.045 58.2114 810.008 Q60.0256 807.94 60.0256 804.407 Q60.0256 799.537 56.5881 796.609 Q53.1188 793.649 47.3897 793.649 L46.0847 793.649 L46.0847 799.473 M43.6657 787.792 L64.0042 787.792 L64.0042 793.649 L58.5933 793.649 Q61.8398 795.654 63.3994 798.646 Q64.9272 801.637 64.9272 805.966 Q64.9272 811.441 61.8716 814.687 Q58.7843 817.902 53.6281 817.902 Q47.6125 817.902 44.5569 813.891 Q41.5014 809.849 41.5014 801.86 L41.5014 793.649 L40.9285 793.649 Q36.8862 793.649 34.6901 796.322 Q32.4621 798.964 32.4621 803.77 Q32.4621 806.826 33.1941 809.722 Q33.9262 812.618 35.3903 815.292 L29.9795 815.292 Q28.7381 812.077 28.1334 809.054 Q27.4968 806.03 27.4968 803.165 Q27.4968 795.431 31.5072 791.611 Q35.5176 787.792 43.6657 787.792 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M14.479 775.729 L14.479 769.873 L64.0042 769.873 L64.0042 775.729 L14.479 775.729 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M49.9359 758.223 L28.3562 758.223 L28.3562 752.367 L49.7131 752.367 Q54.7739 752.367 57.3202 750.394 Q59.8346 748.42 59.8346 744.473 Q59.8346 739.731 56.8109 736.994 Q53.7872 734.225 48.5673 734.225 L28.3562 734.225 L28.3562 728.368 L64.0042 728.368 L64.0042 734.225 L58.5296 734.225 Q61.7762 736.357 63.3676 739.19 Q64.9272 741.991 64.9272 745.715 Q64.9272 751.858 61.1078 755.04 Q57.2883 758.223 49.9359 758.223 M27.4968 743.487 L27.4968 743.487 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M44.7161 685.813 L47.5806 685.813 L47.5806 712.74 Q53.6281 712.358 56.8109 709.112 Q59.9619 705.834 59.9619 700.009 Q59.9619 696.635 59.1344 693.484 Q58.3069 690.301 56.6518 687.182 L62.1899 687.182 Q63.5267 690.333 64.227 693.643 Q64.9272 696.953 64.9272 700.359 Q64.9272 708.889 59.9619 713.886 Q54.9967 718.851 46.5303 718.851 Q37.7774 718.851 32.6531 714.141 Q27.4968 709.398 27.4968 701.378 Q27.4968 694.184 32.1438 690.015 Q36.7589 685.813 44.7161 685.813 M42.9973 691.67 Q38.1912 691.734 35.3266 694.375 Q32.4621 696.985 32.4621 701.314 Q32.4621 706.216 35.2312 709.176 Q38.0002 712.104 43.0292 712.549 L42.9973 691.67 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M464.218 12.096 L498.974 12.096 L498.974 18.9825 L472.401 18.9825 L472.401 36.8065 L496.382 36.8065 L496.382 43.6931 L472.401 43.6931 L472.401 72.576 L464.218 72.576 L464.218 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M505.577 27.2059 L513.031 27.2059 L513.031 72.576 L505.577 72.576 L505.577 27.2059 M505.577 9.54393 L513.031 9.54393 L513.031 18.9825 L505.577 18.9825 L505.577 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M554.917 34.1734 Q553.662 33.4443 552.163 33.1202 Q550.704 32.7556 548.922 32.7556 Q542.603 32.7556 539.2 36.8875 Q535.838 40.9789 535.838 48.6757 L535.838 72.576 L528.344 72.576 L528.344 27.2059 L535.838 27.2059 L535.838 34.2544 Q538.187 30.1225 541.955 28.1376 Q545.722 26.1121 551.11 26.1121 Q551.879 26.1121 552.811 26.2337 Q553.743 26.3147 554.877 26.5172 L554.917 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M591.659 28.5427 L591.659 35.5912 Q588.499 33.9709 585.097 33.1607 Q581.694 32.3505 578.048 32.3505 Q572.498 32.3505 569.703 34.0519 Q566.949 35.7533 566.949 39.156 Q566.949 41.7486 568.934 43.2475 Q570.919 44.7058 576.914 46.0426 L579.466 46.6097 Q587.406 48.3111 590.727 51.4303 Q594.09 54.509 594.09 60.0587 Q594.09 66.3781 589.067 70.0644 Q584.084 73.7508 575.334 73.7508 Q571.688 73.7508 567.718 73.0216 Q563.789 72.3329 559.414 70.9151 L559.414 63.2184 Q563.546 65.3654 567.556 66.4591 Q571.567 67.5124 575.496 67.5124 Q580.762 67.5124 583.598 65.73 Q586.433 63.9071 586.433 60.6258 Q586.433 57.5877 584.368 55.9673 Q582.342 54.3469 575.415 52.8481 L572.822 52.2405 Q565.895 50.7821 562.817 47.7845 Q559.738 44.7463 559.738 39.4801 Q559.738 33.0797 564.275 29.5959 Q568.812 26.1121 577.157 26.1121 Q581.289 26.1121 584.935 26.7198 Q588.58 27.3274 591.659 28.5427 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M613.331 14.324 L613.331 27.2059 L628.684 27.2059 L628.684 32.9987 L613.331 32.9987 L613.331 57.6282 Q613.331 63.1779 614.83 64.7578 Q616.37 66.3376 621.028 66.3376 L628.684 66.3376 L628.684 72.576 L621.028 72.576 Q612.4 72.576 609.119 69.3758 Q605.837 66.1351 605.837 57.6282 L605.837 32.9987 L600.369 32.9987 L600.369 27.2059 L605.837 27.2059 L605.837 14.324 L613.331 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M673.366 18.8205 L673.366 65.8515 L683.25 65.8515 Q695.767 65.8515 701.56 60.1802 Q707.393 54.509 707.393 42.2752 Q707.393 30.1225 701.56 24.4918 Q695.767 18.8205 683.25 18.8205 L673.366 18.8205 M665.183 12.096 L681.994 12.096 Q699.575 12.096 707.799 19.4281 Q716.022 26.7198 716.022 42.2752 Q716.022 57.9117 707.758 65.2439 Q699.494 72.576 681.994 72.576 L665.183 72.576 L665.183 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M728.742 27.2059 L736.195 27.2059 L736.195 72.576 L728.742 72.576 L728.742 27.2059 M728.742 9.54393 L736.195 9.54393 L736.195 18.9825 L728.742 18.9825 L728.742 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M787.115 35.9153 Q789.91 30.8922 793.799 28.5022 Q797.688 26.1121 802.954 26.1121 Q810.043 26.1121 813.892 31.0947 Q817.74 36.0368 817.74 45.1919 L817.74 72.576 L810.246 72.576 L810.246 45.4349 Q810.246 38.913 807.937 35.7533 Q805.628 32.5936 800.888 32.5936 Q795.096 32.5936 791.733 36.4419 Q788.371 40.2903 788.371 46.9338 L788.371 72.576 L780.877 72.576 L780.877 45.4349 Q780.877 38.8725 778.568 35.7533 Q776.259 32.5936 771.438 32.5936 Q765.726 32.5936 762.364 36.4824 Q759.002 40.3308 759.002 46.9338 L759.002 72.576 L751.508 72.576 L751.508 27.2059 L759.002 27.2059 L759.002 34.2544 Q761.554 30.082 765.119 28.0971 Q768.684 26.1121 773.585 26.1121 Q778.527 26.1121 781.971 28.6237 Q785.454 31.1352 787.115 35.9153 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M871.415 48.0275 L871.415 51.6733 L837.144 51.6733 Q837.63 59.3701 841.762 63.421 Q845.934 67.4314 853.348 67.4314 Q857.642 67.4314 861.652 66.3781 Q865.703 65.3249 869.673 63.2184 L869.673 70.267 Q865.662 71.9684 861.449 72.8596 Q857.236 73.7508 852.902 73.7508 Q842.046 73.7508 835.686 67.4314 Q829.366 61.1119 829.366 50.3365 Q829.366 39.1965 835.362 32.6746 Q841.397 26.1121 851.606 26.1121 Q860.761 26.1121 866.067 32.0264 Q871.415 37.9003 871.415 48.0275 M863.961 45.84 Q863.88 39.7232 860.518 36.0774 Q857.196 32.4315 851.687 32.4315 Q845.448 32.4315 841.681 35.9558 Q837.954 39.4801 837.387 45.8805 L863.961 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M921.362 45.1919 L921.362 72.576 L913.909 72.576 L913.909 45.4349 Q913.909 38.994 911.397 35.7938 Q908.885 32.5936 903.862 32.5936 Q897.826 32.5936 894.343 36.4419 Q890.859 40.2903 890.859 46.9338 L890.859 72.576 L883.365 72.576 L883.365 27.2059 L890.859 27.2059 L890.859 34.2544 Q893.533 30.163 897.138 28.1376 Q900.784 26.1121 905.523 26.1121 Q913.341 26.1121 917.352 30.9732 Q921.362 35.7938 921.362 45.1919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M965.153 28.5427 L965.153 35.5912 Q961.993 33.9709 958.59 33.1607 Q955.187 32.3505 951.541 32.3505 Q945.992 32.3505 943.197 34.0519 Q940.442 35.7533 940.442 39.156 Q940.442 41.7486 942.427 43.2475 Q944.412 44.7058 950.407 46.0426 L952.959 46.6097 Q960.899 48.3111 964.221 51.4303 Q967.583 54.509 967.583 60.0587 Q967.583 66.3781 962.56 70.0644 Q957.577 73.7508 948.827 73.7508 Q945.182 73.7508 941.212 73.0216 Q937.282 72.3329 932.907 70.9151 L932.907 63.2184 Q937.039 65.3654 941.05 66.4591 Q945.06 67.5124 948.989 67.5124 Q954.256 67.5124 957.091 65.73 Q959.927 63.9071 959.927 60.6258 Q959.927 57.5877 957.861 55.9673 Q955.835 54.3469 948.908 52.8481 L946.316 52.2405 Q939.389 50.7821 936.31 47.7845 Q933.231 44.7463 933.231 39.4801 Q933.231 33.0797 937.768 29.5959 Q942.305 26.1121 950.65 26.1121 Q954.782 26.1121 958.428 26.7198 Q962.074 27.3274 965.153 28.5427 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M979.452 27.2059 L986.906 27.2059 L986.906 72.576 L979.452 72.576 L979.452 27.2059 M979.452 9.54393 L986.906 9.54393 L986.906 18.9825 L979.452 18.9825 L979.452 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1020.08 32.4315 Q1014.09 32.4315 1010.6 37.1306 Q1007.12 41.7891 1007.12 49.9314 Q1007.12 58.0738 1010.56 62.7728 Q1014.05 67.4314 1020.08 67.4314 Q1026.04 67.4314 1029.52 62.7323 Q1033.01 58.0333 1033.01 49.9314 Q1033.01 41.8701 1029.52 37.1711 Q1026.04 32.4315 1020.08 32.4315 M1020.08 26.1121 Q1029.8 26.1121 1035.35 32.4315 Q1040.9 38.7509 1040.9 49.9314 Q1040.9 61.0714 1035.35 67.4314 Q1029.8 73.7508 1020.08 73.7508 Q1010.32 73.7508 1004.77 67.4314 Q999.261 61.0714 999.261 49.9314 Q999.261 38.7509 1004.77 32.4315 Q1010.32 26.1121 1020.08 26.1121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1090.97 45.1919 L1090.97 72.576 L1083.52 72.576 L1083.52 45.4349 Q1083.52 38.994 1081.01 35.7938 Q1078.5 32.5936 1073.47 32.5936 Q1067.44 32.5936 1063.95 36.4419 Q1060.47 40.2903 1060.47 46.9338 L1060.47 72.576 L1052.98 72.576 L1052.98 27.2059 L1060.47 27.2059 L1060.47 34.2544 Q1063.14 30.163 1066.75 28.1376 Q1070.39 26.1121 1075.13 26.1121 Q1082.95 26.1121 1086.96 30.9732 Q1090.97 35.7938 1090.97 45.1919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1132.54 12.096 L1140.72 12.096 L1140.72 37.6572 L1167.86 12.096 L1178.39 12.096 L1148.37 40.2903 L1180.54 72.576 L1169.76 72.576 L1140.72 43.45 L1140.72 72.576 L1132.54 72.576 L1132.54 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1205.78 49.7694 Q1196.74 49.7694 1193.26 51.8354 Q1189.78 53.9013 1189.78 58.8839 Q1189.78 62.8538 1192.37 65.2034 Q1195 67.5124 1199.5 67.5124 Q1205.7 67.5124 1209.42 63.1374 Q1213.19 58.7219 1213.19 51.4303 L1213.19 49.7694 L1205.78 49.7694 M1220.64 46.6907 L1220.64 72.576 L1213.19 72.576 L1213.19 65.6895 Q1210.64 69.8214 1206.83 71.8063 Q1203.02 73.7508 1197.51 73.7508 Q1190.54 73.7508 1186.41 69.8619 Q1182.32 65.9325 1182.32 59.3701 Q1182.32 51.7138 1187.43 47.825 Q1192.57 43.9361 1202.74 43.9361 L1213.19 43.9361 L1213.19 43.2069 Q1213.19 38.0623 1209.79 35.2672 Q1206.42 32.4315 1200.31 32.4315 Q1196.42 32.4315 1192.73 33.3632 Q1189.05 34.295 1185.64 36.1584 L1185.64 29.2718 Q1189.73 27.692 1193.58 26.9223 Q1197.43 26.1121 1201.08 26.1121 Q1210.92 26.1121 1215.78 31.2163 Q1220.64 36.3204 1220.64 46.6907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1236 9.54393 L1243.45 9.54393 L1243.45 72.576 L1236 72.576 L1236 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1294.37 35.9153 Q1297.16 30.8922 1301.05 28.5022 Q1304.94 26.1121 1310.21 26.1121 Q1317.3 26.1121 1321.15 31.0947 Q1324.99 36.0368 1324.99 45.1919 L1324.99 72.576 L1317.5 72.576 L1317.5 45.4349 Q1317.5 38.913 1315.19 35.7533 Q1312.88 32.5936 1308.14 32.5936 Q1302.35 32.5936 1298.99 36.4419 Q1295.63 40.2903 1295.63 46.9338 L1295.63 72.576 L1288.13 72.576 L1288.13 45.4349 Q1288.13 38.8725 1285.82 35.7533 Q1283.51 32.5936 1278.69 32.5936 Q1272.98 32.5936 1269.62 36.4824 Q1266.26 40.3308 1266.26 46.9338 L1266.26 72.576 L1258.76 72.576 L1258.76 27.2059 L1266.26 27.2059 L1266.26 34.2544 Q1268.81 30.082 1272.37 28.0971 Q1275.94 26.1121 1280.84 26.1121 Q1285.78 26.1121 1289.22 28.6237 Q1292.71 31.1352 1294.37 35.9153 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1360.48 49.7694 Q1351.45 49.7694 1347.96 51.8354 Q1344.48 53.9013 1344.48 58.8839 Q1344.48 62.8538 1347.07 65.2034 Q1349.7 67.5124 1354.2 67.5124 Q1360.4 67.5124 1364.13 63.1374 Q1367.89 58.7219 1367.89 51.4303 L1367.89 49.7694 L1360.48 49.7694 M1375.35 46.6907 L1375.35 72.576 L1367.89 72.576 L1367.89 65.6895 Q1365.34 69.8214 1361.53 71.8063 Q1357.73 73.7508 1352.22 73.7508 Q1345.25 73.7508 1341.12 69.8619 Q1337.03 65.9325 1337.03 59.3701 Q1337.03 51.7138 1342.13 47.825 Q1347.27 43.9361 1357.44 43.9361 L1367.89 43.9361 L1367.89 43.2069 Q1367.89 38.0623 1364.49 35.2672 Q1361.13 32.4315 1355.01 32.4315 Q1351.12 32.4315 1347.44 33.3632 Q1343.75 34.295 1340.35 36.1584 L1340.35 29.2718 Q1344.44 27.692 1348.29 26.9223 Q1352.14 26.1121 1355.78 26.1121 Q1365.62 26.1121 1370.49 31.2163 Q1375.35 36.3204 1375.35 46.6907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1428.41 45.1919 L1428.41 72.576 L1420.96 72.576 L1420.96 45.4349 Q1420.96 38.994 1418.45 35.7938 Q1415.94 32.5936 1410.91 32.5936 Q1404.88 32.5936 1401.39 36.4419 Q1397.91 40.2903 1397.91 46.9338 L1397.91 72.576 L1390.42 72.576 L1390.42 27.2059 L1397.91 27.2059 L1397.91 34.2544 Q1400.58 30.163 1404.19 28.1376 Q1407.84 26.1121 1412.57 26.1121 Q1420.39 26.1121 1424.4 30.9732 Q1428.41 35.7938 1428.41 45.1919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1469.98 12.096 L1504.73 12.096 L1504.73 18.9825 L1478.16 18.9825 L1478.16 36.8065 L1502.14 36.8065 L1502.14 43.6931 L1478.16 43.6931 L1478.16 72.576 L1469.98 72.576 L1469.98 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1511.34 27.2059 L1518.79 27.2059 L1518.79 72.576 L1511.34 72.576 L1511.34 27.2059 M1511.34 9.54393 L1518.79 9.54393 L1518.79 18.9825 L1511.34 18.9825 L1511.34 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1534.39 9.54393 L1541.84 9.54393 L1541.84 72.576 L1534.39 72.576 L1534.39 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1564.81 14.324 L1564.81 27.2059 L1580.16 27.2059 L1580.16 32.9987 L1564.81 32.9987 L1564.81 57.6282 Q1564.81 63.1779 1566.31 64.7578 Q1567.85 66.3376 1572.5 66.3376 L1580.16 66.3376 L1580.16 72.576 L1572.5 72.576 Q1563.88 72.576 1560.59 69.3758 Q1557.31 66.1351 1557.31 57.6282 L1557.31 32.9987 L1551.84 32.9987 L1551.84 27.2059 L1557.31 27.2059 L1557.31 14.324 L1564.81 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1628.77 48.0275 L1628.77 51.6733 L1594.5 51.6733 Q1594.99 59.3701 1599.12 63.421 Q1603.29 67.4314 1610.7 67.4314 Q1615 67.4314 1619.01 66.3781 Q1623.06 65.3249 1627.03 63.2184 L1627.03 70.267 Q1623.02 71.9684 1618.81 72.8596 Q1614.59 73.7508 1610.26 73.7508 Q1599.4 73.7508 1593.04 67.4314 Q1586.72 61.1119 1586.72 50.3365 Q1586.72 39.1965 1592.72 32.6746 Q1598.75 26.1121 1608.96 26.1121 Q1618.12 26.1121 1623.42 32.0264 Q1628.77 37.9003 1628.77 48.0275 M1621.32 45.84 Q1621.24 39.7232 1617.87 36.0774 Q1614.55 32.4315 1609.04 32.4315 Q1602.81 32.4315 1599.04 35.9558 Q1595.31 39.4801 1594.74 45.8805 L1621.32 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1667.3 34.1734 Q1666.04 33.4443 1664.54 33.1202 Q1663.08 32.7556 1661.3 32.7556 Q1654.98 32.7556 1651.58 36.8875 Q1648.22 40.9789 1648.22 48.6757 L1648.22 72.576 L1640.72 72.576 L1640.72 27.2059 L1648.22 27.2059 L1648.22 34.2544 Q1650.57 30.1225 1654.33 28.1376 Q1658.1 26.1121 1663.49 26.1121 Q1664.26 26.1121 1665.19 26.2337 Q1666.12 26.3147 1667.26 26.5172 L1667.3 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1701.81 12.096 L1740.05 12.096 L1740.05 18.9825 L1709.99 18.9825 L1709.99 36.8875 L1738.79 36.8875 L1738.79 43.7741 L1709.99 43.7741 L1709.99 65.6895 L1740.78 65.6895 L1740.78 72.576 L1701.81 72.576 L1701.81 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1782.83 28.5427 L1782.83 35.5912 Q1779.67 33.9709 1776.27 33.1607 Q1772.86 32.3505 1769.22 32.3505 Q1763.67 32.3505 1760.87 34.0519 Q1758.12 35.7533 1758.12 39.156 Q1758.12 41.7486 1760.1 43.2475 Q1762.09 44.7058 1768.08 46.0426 L1770.63 46.6097 Q1778.57 48.3111 1781.9 51.4303 Q1785.26 54.509 1785.26 60.0587 Q1785.26 66.3781 1780.23 70.0644 Q1775.25 73.7508 1766.5 73.7508 Q1762.86 73.7508 1758.89 73.0216 Q1754.96 72.3329 1750.58 70.9151 L1750.58 63.2184 Q1754.71 65.3654 1758.72 66.4591 Q1762.74 67.5124 1766.66 67.5124 Q1771.93 67.5124 1774.77 65.73 Q1777.6 63.9071 1777.6 60.6258 Q1777.6 57.5877 1775.54 55.9673 Q1773.51 54.3469 1766.58 52.8481 L1763.99 52.2405 Q1757.06 50.7821 1753.99 47.7845 Q1750.91 44.7463 1750.91 39.4801 Q1750.91 33.0797 1755.44 29.5959 Q1759.98 26.1121 1768.33 26.1121 Q1772.46 26.1121 1776.1 26.7198 Q1779.75 27.3274 1782.83 28.5427 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1804.5 14.324 L1804.5 27.2059 L1819.85 27.2059 L1819.85 32.9987 L1804.5 32.9987 L1804.5 57.6282 Q1804.5 63.1779 1806 64.7578 Q1807.54 66.3376 1812.2 66.3376 L1819.85 66.3376 L1819.85 72.576 L1812.2 72.576 Q1803.57 72.576 1800.29 69.3758 Q1797.01 66.1351 1797.01 57.6282 L1797.01 32.9987 L1791.54 32.9987 L1791.54 27.2059 L1797.01 27.2059 L1797.01 14.324 L1804.5 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1829.66 27.2059 L1837.11 27.2059 L1837.11 72.576 L1829.66 72.576 L1829.66 27.2059 M1829.66 9.54393 L1837.11 9.54393 L1837.11 18.9825 L1829.66 18.9825 L1829.66 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1888.03 35.9153 Q1890.82 30.8922 1894.71 28.5022 Q1898.6 26.1121 1903.87 26.1121 Q1910.96 26.1121 1914.81 31.0947 Q1918.65 36.0368 1918.65 45.1919 L1918.65 72.576 L1911.16 72.576 L1911.16 45.4349 Q1911.16 38.913 1908.85 35.7533 Q1906.54 32.5936 1901.8 32.5936 Q1896.01 32.5936 1892.65 36.4419 Q1889.29 40.2903 1889.29 46.9338 L1889.29 72.576 L1881.79 72.576 L1881.79 45.4349 Q1881.79 38.8725 1879.48 35.7533 Q1877.17 32.5936 1872.35 32.5936 Q1866.64 32.5936 1863.28 36.4824 Q1859.92 40.3308 1859.92 46.9338 L1859.92 72.576 L1852.42 72.576 L1852.42 27.2059 L1859.92 27.2059 L1859.92 34.2544 Q1862.47 30.082 1866.03 28.0971 Q1869.6 26.1121 1874.5 26.1121 Q1879.44 26.1121 1882.88 28.6237 Q1886.37 31.1352 1888.03 35.9153 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1954.14 49.7694 Q1945.11 49.7694 1941.62 51.8354 Q1938.14 53.9013 1938.14 58.8839 Q1938.14 62.8538 1940.73 65.2034 Q1943.36 67.5124 1947.86 67.5124 Q1954.06 67.5124 1957.79 63.1374 Q1961.55 58.7219 1961.55 51.4303 L1961.55 49.7694 L1954.14 49.7694 M1969.01 46.6907 L1969.01 72.576 L1961.55 72.576 L1961.55 65.6895 Q1959 69.8214 1955.19 71.8063 Q1951.39 73.7508 1945.88 73.7508 Q1938.91 73.7508 1934.78 69.8619 Q1930.69 65.9325 1930.69 59.3701 Q1930.69 51.7138 1935.79 47.825 Q1940.93 43.9361 1951.1 43.9361 L1961.55 43.9361 L1961.55 43.2069 Q1961.55 38.0623 1958.15 35.2672 Q1954.79 32.4315 1948.67 32.4315 Q1944.78 32.4315 1941.1 33.3632 Q1937.41 34.295 1934.01 36.1584 L1934.01 29.2718 Q1938.1 27.692 1941.95 26.9223 Q1945.8 26.1121 1949.44 26.1121 Q1959.28 26.1121 1964.15 31.2163 Q1969.01 36.3204 1969.01 46.6907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1991.73 14.324 L1991.73 27.2059 L2007.09 27.2059 L2007.09 32.9987 L1991.73 32.9987 L1991.73 57.6282 Q1991.73 63.1779 1993.23 64.7578 Q1994.77 66.3376 1999.43 66.3376 L2007.09 66.3376 L2007.09 72.576 L1999.43 72.576 Q1990.8 72.576 1987.52 69.3758 Q1984.24 66.1351 1984.24 57.6282 L1984.24 32.9987 L1978.77 32.9987 L1978.77 27.2059 L1984.24 27.2059 L1984.24 14.324 L1991.73 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2055.7 48.0275 L2055.7 51.6733 L2021.43 51.6733 Q2021.91 59.3701 2026.04 63.421 Q2030.22 67.4314 2037.63 67.4314 Q2041.92 67.4314 2045.93 66.3781 Q2049.98 65.3249 2053.95 63.2184 L2053.95 70.267 Q2049.94 71.9684 2045.73 72.8596 Q2041.52 73.7508 2037.18 73.7508 Q2026.33 73.7508 2019.97 67.4314 Q2013.65 61.1119 2013.65 50.3365 Q2013.65 39.1965 2019.64 32.6746 Q2025.68 26.1121 2035.89 26.1121 Q2045.04 26.1121 2050.35 32.0264 Q2055.7 37.9003 2055.7 48.0275 M2048.24 45.84 Q2048.16 39.7232 2044.8 36.0774 Q2041.48 32.4315 2035.97 32.4315 Q2029.73 32.4315 2025.96 35.9558 Q2022.24 39.4801 2021.67 45.8805 L2048.24 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2096.85 28.5427 L2096.85 35.5912 Q2093.69 33.9709 2090.29 33.1607 Q2086.89 32.3505 2083.24 32.3505 Q2077.69 32.3505 2074.9 34.0519 Q2072.14 35.7533 2072.14 39.156 Q2072.14 41.7486 2074.13 43.2475 Q2076.11 44.7058 2082.11 46.0426 L2084.66 46.6097 Q2092.6 48.3111 2095.92 51.4303 Q2099.28 54.509 2099.28 60.0587 Q2099.28 66.3781 2094.26 70.0644 Q2089.28 73.7508 2080.53 73.7508 Q2076.88 73.7508 2072.91 73.0216 Q2068.98 72.3329 2064.61 70.9151 L2064.61 63.2184 Q2068.74 65.3654 2072.75 66.4591 Q2076.76 67.5124 2080.69 67.5124 Q2085.96 67.5124 2088.79 65.73 Q2091.63 63.9071 2091.63 60.6258 Q2091.63 57.5877 2089.56 55.9673 Q2087.54 54.3469 2080.61 52.8481 L2078.02 52.2405 Q2071.09 50.7821 2068.01 47.7845 Q2064.93 44.7463 2064.93 39.4801 Q2064.93 33.0797 2069.47 29.5959 Q2074.01 26.1121 2082.35 26.1121 Q2086.48 26.1121 2090.13 26.7198 Q2093.77 27.3274 2096.85 28.5427 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip132)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"271.369,993.448 291.781,813.436 312.192,726.147 332.604,498.994 353.016,692.688 373.428,930.604 393.839,1159.11 414.251,1290.08 434.663,1066.81 455.075,943.105 475.486,783.219 495.898,878.791 516.31,665.745 536.722,745.814 557.133,914.324 577.545,908.332 597.957,843.197 618.369,846.849 638.781,700.902 659.192,808.855 679.604,796.744 700.016,868.837 720.428,941.674 740.839,795.968 761.251,616.089 781.663,628.091 802.075,661.276 822.486,682.062 842.898,781.464 863.31,851.728 883.722,835.775 904.133,974.004 924.545,850.563 944.957,938.722 965.369,687.13 985.78,709.333 1006.19,749.031 1026.6,765.269 1047.02,896.702 1067.43,1094.91 1087.84,1125.75 1108.25,1097.16 1128.66,960.416 1149.07,1045.29 1169.49,1138.73 1189.9,986.358 1210.31,964.642 1230.72,792.369 1251.13,784.749 1271.55,606.362 1291.96,641.645 1312.37,652.92 1332.78,571.728 1353.19,569.059 1373.6,531.133 1394.02,549.075 1414.43,549.314 1434.84,649.63 1455.25,597.102 1475.66,648.799 1496.07,887.25 1516.49,717.625 1536.9,772.401 1557.31,694.034 1577.72,887.756 1598.13,989.224 1618.54,993.78 1638.96,1022.23 1659.37,869.833 1679.78,716.594 1700.19,747.132 1720.6,703.96 1741.02,658.847 1761.43,721.708 1781.84,593.489 1802.25,624.883 1822.66,633.904 1843.07,690.301 1863.49,686.139 1883.9,543.534 1904.31,596.136 1924.72,725.396 1945.13,630.751 1965.54,687.424 1985.96,835.757 2006.37,571.831 2026.78,730.976 2047.19,765.597 2067.6,817.189 2088.02,860.187 2108.43,749.257 2128.84,859.594 2149.25,1031.46 2169.66,1138.23 2190.07,1052.05 2210.49,966.647 2230.9,737.788 2251.31,677.29 2271.72,534.095 2292.13,515.169 \"/>\n<circle clip-path=\"url(#clip132)\" cx=\"271.369\" cy=\"1271.06\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"291.781\" cy=\"821.716\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"312.192\" cy=\"677.413\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"332.604\" cy=\"160.256\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"353.016\" cy=\"524.145\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"373.428\" cy=\"952.66\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"393.839\" cy=\"1386.4\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"414.251\" cy=\"1355.42\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"434.663\" cy=\"990.509\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"455.075\" cy=\"1159.34\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"475.486\" cy=\"799.432\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"495.898\" cy=\"976.46\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"516.31\" cy=\"515.412\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"536.722\" cy=\"623.51\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"557.133\" cy=\"890.442\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"577.545\" cy=\"1240.65\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"597.957\" cy=\"654.327\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"618.369\" cy=\"802.409\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"638.781\" cy=\"703.674\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"659.192\" cy=\"607.413\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"679.604\" cy=\"883.688\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"700.016\" cy=\"959.69\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"720.428\" cy=\"1114.06\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"740.839\" cy=\"698.202\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"761.251\" cy=\"651.967\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"781.663\" cy=\"683.711\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"802.075\" cy=\"447.618\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"822.486\" cy=\"628.851\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"842.898\" cy=\"574.892\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"863.31\" cy=\"953.767\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"883.722\" cy=\"771.925\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"904.133\" cy=\"923.157\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"924.545\" cy=\"579.563\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"944.957\" cy=\"918.701\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"965.369\" cy=\"828.511\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"985.78\" cy=\"657.535\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1006.19\" cy=\"739.194\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1026.6\" cy=\"698.336\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1047.02\" cy=\"726.306\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1067.43\" cy=\"1253.64\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1087.84\" cy=\"1167.28\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1108.25\" cy=\"1182.28\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1128.66\" cy=\"1005.69\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1149.07\" cy=\"1093.25\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1169.49\" cy=\"1172.61\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1189.9\" cy=\"940.891\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1210.31\" cy=\"970.729\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1230.72\" cy=\"999.42\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1251.13\" cy=\"1001.15\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1271.55\" cy=\"553.47\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1291.96\" cy=\"606.451\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1312.37\" cy=\"477.807\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1332.78\" cy=\"304.827\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1353.19\" cy=\"424.91\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1373.6\" cy=\"635.814\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1394.02\" cy=\"632.223\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1414.43\" cy=\"560.626\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1434.84\" cy=\"566.638\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1455.25\" cy=\"443.53\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1475.66\" cy=\"702.252\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1496.07\" cy=\"804.982\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1516.49\" cy=\"627.738\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1536.9\" cy=\"861.003\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1557.31\" cy=\"733.405\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1577.72\" cy=\"1107.55\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1598.13\" cy=\"1034.71\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1618.54\" cy=\"901.762\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1638.96\" cy=\"1061.36\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1659.37\" cy=\"964.791\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1679.78\" cy=\"624.435\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1700.19\" cy=\"758.374\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1720.6\" cy=\"634.229\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1741.02\" cy=\"753.738\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1761.43\" cy=\"679.27\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1781.84\" cy=\"632.846\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1802.25\" cy=\"335.129\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1822.66\" cy=\"625.752\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1843.07\" cy=\"618.918\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1863.49\" cy=\"596.517\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1883.9\" cy=\"579.484\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1904.31\" cy=\"519.605\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1924.72\" cy=\"686.973\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1945.13\" cy=\"745.151\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1965.54\" cy=\"628.674\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"1985.96\" cy=\"549.527\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2006.37\" cy=\"769.65\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2026.78\" cy=\"721.33\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2047.19\" cy=\"984.292\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2067.6\" cy=\"1012.67\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2088.02\" cy=\"695.691\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2108.43\" cy=\"849.915\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2128.84\" cy=\"845.233\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2149.25\" cy=\"1184.88\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2169.66\" cy=\"1021.84\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2190.07\" cy=\"1115\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2210.49\" cy=\"877.303\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2230.9\" cy=\"580.34\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2251.31\" cy=\"619.872\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2271.72\" cy=\"637.305\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<circle clip-path=\"url(#clip132)\" cx=\"2292.13\" cy=\"335.293\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n<path clip-path=\"url(#clip132)\" d=\"M271.369 1293.71 L291.781 1023.84 L312.192 848.532 L332.604 494.347 L353.016 563.859 L373.428 843.618 L393.839 1206.24 L414.251 1334.47 L434.663 1175.24 L455.075 1200.45 L475.486 1006.69 L495.898 1026.91 L516.31 777.699 L536.722 739.259 L557.133 878.363 L577.545 1134.89 L597.957 908.712 L618.369 897.39 L638.781 838.245 L659.192 761.12 L679.604 886.91 L700.016 982.404 L720.428 1107.22 L740.839 921.818 L761.251 818.17 L781.663 795.028 L802.075 654.969 L822.486 702.278 L842.898 694.245 L863.31 905.623 L883.722 889.556 L904.133 965.764 L924.545 801.8 L944.957 924.485 L965.369 924.165 L985.78 826.744 L1006.19 832.708 L1026.6 813.069 L1047.02 821.449 L1067.43 1122.08 L1087.84 1194.79 L1108.25 1228.2 L1128.66 1138.32 L1149.07 1148.17 L1169.49 1195.92 L1189.9 1084.09 L1210.31 1054.66 L1230.72 1059.81 L1251.13 1063.88 L1271.55 814.349 L1291.96 744.107 L1312.37 647.481 L1332.78 515.083 L1353.19 533.363 L1373.6 664.052 L1394.02 717.551 L1414.43 698.846 L1434.84 693.925 L1455.25 622.457 L1475.66 739.119 L1496.07 844.843 L1516.49 786.63 L1536.9 892.092 L1557.31 862.062 L1577.72 1058.35 L1598.13 1095.41 L1618.54 1031.96 L1638.96 1093.19 L1659.37 1062.42 L1679.78 856.961 L1700.19 848.955 L1720.6 778.54 L1741.02 819.331 L1761.43 796.215 L1781.84 761.795 L1802.25 581.524 L1822.66 673.655 L1843.07 710.409 L1863.49 713.617 L1883.9 705.471 L1904.31 668.564 L1924.72 748.001 L1945.13 813.343 L1965.54 773.381 L1985.96 711.302 L2006.37 809.715 L2026.78 822.787 L2047.19 974.909 L2067.6 1051.18 L2088.02 900.695 L2108.43 923.773 L2128.84 930.564 L2149.25 1124.07 L2169.66 1109.96 L2190.07 1153.59 L2210.49 1035.56 L2230.9 819.117 L2251.31 754.712 L2271.72 742.156 L2292.13 570.63 L2292.13 382.742 L2271.72 554.269 L2251.31 566.824 L2230.9 631.229 L2210.49 847.676 L2190.07 965.701 L2169.66 922.07 L2149.25 936.182 L2128.84 742.676 L2108.43 735.885 L2088.02 712.807 L2067.6 863.292 L2047.19 787.022 L2026.78 634.899 L2006.37 621.828 L1985.96 523.415 L1965.54 585.493 L1945.13 625.455 L1924.72 560.113 L1904.31 480.676 L1883.9 517.583 L1863.49 525.73 L1843.07 522.522 L1822.66 485.768 L1802.25 393.636 L1781.84 573.907 L1761.43 608.328 L1741.02 631.443 L1720.6 590.652 L1700.19 661.068 L1679.78 669.074 L1659.37 874.536 L1638.96 905.3 L1618.54 844.068 L1598.13 907.52 L1577.72 870.461 L1557.31 674.174 L1536.9 704.204 L1516.49 598.742 L1496.07 656.955 L1475.66 551.231 L1455.25 434.57 L1434.84 506.037 L1414.43 510.959 L1394.02 529.664 L1373.6 476.165 L1353.19 345.475 L1332.78 327.195 L1312.37 459.593 L1291.96 556.22 L1271.55 626.462 L1251.13 875.993 L1230.72 871.922 L1210.31 866.771 L1189.9 896.198 L1169.49 1008.04 L1149.07 960.285 L1128.66 950.431 L1108.25 1040.32 L1087.84 1006.9 L1067.43 934.188 L1047.02 633.561 L1026.6 625.181 L1006.19 644.82 L985.78 638.856 L965.369 736.277 L944.957 736.597 L924.545 613.913 L904.133 777.876 L883.722 701.669 L863.31 717.736 L842.898 506.357 L822.486 514.39 L802.075 467.081 L781.663 607.141 L761.251 630.282 L740.839 733.93 L720.428 919.329 L700.016 794.517 L679.604 699.023 L659.192 573.232 L638.781 650.358 L618.369 709.502 L597.957 720.824 L577.545 947.007 L557.133 690.475 L536.722 551.372 L516.31 589.811 L495.898 839.018 L475.486 818.797 L455.075 1012.56 L434.663 987.334 L414.251 1146.54 L393.839 1018.27 L373.428 655.593 L353.016 375.791 L332.604 306.42 L312.192 661.12 L291.781 834.92 L271.369 1077.36  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.2\"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"271.369,1185.54 291.781,929.382 312.192,754.826 332.604,400.383 353.016,469.825 373.428,749.606 393.839,1112.25 414.251,1240.51 434.663,1081.29 455.075,1106.5 475.486,912.742 495.898,932.962 516.31,683.755 536.722,645.316 557.133,784.419 577.545,1040.95 597.957,814.768 618.369,803.446 638.781,744.302 659.192,667.176 679.604,792.966 700.016,888.46 720.428,1013.27 740.839,827.874 761.251,724.226 781.663,701.084 802.075,561.025 822.486,608.334 842.898,600.301 863.31,811.68 883.722,795.613 904.133,871.82 924.545,707.856 944.957,830.541 965.369,830.221 985.78,732.8 1006.19,738.764 1026.6,719.125 1047.02,727.505 1067.43,1028.13 1087.84,1100.85 1108.25,1134.26 1128.66,1044.37 1149.07,1054.23 1169.49,1101.98 1189.9,990.142 1210.31,960.715 1230.72,965.866 1251.13,969.937 1271.55,720.406 1291.96,650.164 1312.37,553.537 1332.78,421.139 1353.19,439.419 1373.6,570.108 1394.02,623.608 1414.43,604.903 1434.84,599.981 1455.25,528.513 1475.66,645.175 1496.07,750.899 1516.49,692.686 1536.9,798.148 1557.31,768.118 1577.72,964.405 1598.13,1001.46 1618.54,938.012 1638.96,999.244 1659.37,968.48 1679.78,763.017 1700.19,755.012 1720.6,684.596 1741.02,725.387 1761.43,702.271 1781.84,667.851 1802.25,487.58 1822.66,579.711 1843.07,616.465 1863.49,619.673 1883.9,611.527 1904.31,574.62 1924.72,654.057 1945.13,719.399 1965.54,679.437 1985.96,617.359 2006.37,715.772 2026.78,728.843 2047.19,880.965 2067.6,957.235 2088.02,806.751 2108.43,829.829 2128.84,836.62 2149.25,1030.13 2169.66,1016.01 2190.07,1059.64 2210.49,941.62 2230.9,725.173 2251.31,660.768 2271.72,648.213 2292.13,476.686 \"/>\n<path clip-path=\"url(#clip130)\" d=\"M1748.27 374.156 L2281.36 374.156 L2281.36 166.796 L1748.27 166.796  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1748.27,374.156 2281.36,374.156 2281.36,166.796 1748.27,166.796 1748.27,374.156 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1772.07,218.636 1914.87,218.636 \"/>\n<path clip-path=\"url(#clip130)\" d=\"M1938.67 201.356 L1967.9 201.356 L1967.9 205.291 L1955.64 205.291 L1955.64 235.916 L1950.94 235.916 L1950.94 205.291 L1938.67 205.291 L1938.67 201.356 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1980.29 213.971 Q1979.57 213.555 1978.71 213.37 Q1977.88 213.161 1976.86 213.161 Q1973.25 213.161 1971.31 215.522 Q1969.39 217.86 1969.39 222.258 L1969.39 235.916 L1965.1 235.916 L1965.1 209.99 L1969.39 209.99 L1969.39 214.018 Q1970.73 211.657 1972.88 210.522 Q1975.03 209.365 1978.11 209.365 Q1978.55 209.365 1979.08 209.434 Q1979.62 209.481 1980.27 209.596 L1980.29 213.971 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1984.32 225.684 L1984.32 209.99 L1988.58 209.99 L1988.58 225.522 Q1988.58 229.203 1990.01 231.055 Q1991.45 232.883 1994.32 232.883 Q1997.77 232.883 1999.76 230.684 Q2001.77 228.485 2001.77 224.689 L2001.77 209.99 L2006.03 209.99 L2006.03 235.916 L2001.77 235.916 L2001.77 231.934 Q2000.22 234.295 1998.16 235.453 Q1996.12 236.587 1993.41 236.587 Q1988.95 236.587 1986.63 233.809 Q1984.32 231.031 1984.32 225.684 M1995.03 209.365 L1995.03 209.365 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2019.02 202.629 L2019.02 209.99 L2027.79 209.99 L2027.79 213.3 L2019.02 213.3 L2019.02 227.374 Q2019.02 230.545 2019.87 231.448 Q2020.75 232.351 2023.41 232.351 L2027.79 232.351 L2027.79 235.916 L2023.41 235.916 Q2018.48 235.916 2016.61 234.087 Q2014.73 232.235 2014.73 227.374 L2014.73 213.3 L2011.61 213.3 L2011.61 209.99 L2014.73 209.99 L2014.73 202.629 L2019.02 202.629 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2054.94 220.268 L2054.94 235.916 L2050.68 235.916 L2050.68 220.407 Q2050.68 216.726 2049.25 214.897 Q2047.81 213.069 2044.94 213.069 Q2041.49 213.069 2039.5 215.268 Q2037.51 217.467 2037.51 221.263 L2037.51 235.916 L2033.23 235.916 L2033.23 199.897 L2037.51 199.897 L2037.51 214.018 Q2039.04 211.68 2041.1 210.522 Q2043.18 209.365 2045.89 209.365 Q2050.36 209.365 2052.65 212.143 Q2054.94 214.897 2054.94 220.268 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><circle clip-path=\"url(#clip130)\" cx=\"1843.47\" cy=\"270.476\" r=\"20.48\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"4.55111\"/>\n<path clip-path=\"url(#clip130)\" d=\"M1954.69 256.367 Q1949.59 256.367 1946.58 260.163 Q1943.6 263.96 1943.6 270.51 Q1943.6 277.038 1946.58 280.834 Q1949.59 284.631 1954.69 284.631 Q1959.78 284.631 1962.74 280.834 Q1965.73 277.038 1965.73 270.51 Q1965.73 263.96 1962.74 260.163 Q1959.78 256.367 1954.69 256.367 M1954.69 252.571 Q1961.96 252.571 1966.31 257.455 Q1970.66 262.316 1970.66 270.51 Q1970.66 278.682 1966.31 283.566 Q1961.96 288.427 1954.69 288.427 Q1947.4 288.427 1943.02 283.566 Q1938.67 278.705 1938.67 270.51 Q1938.67 262.316 1943.02 257.455 Q1947.4 252.571 1954.69 252.571 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1996.4 274.816 Q1996.4 270.117 1994.46 267.455 Q1992.53 264.77 1989.15 264.77 Q1985.77 264.77 1983.83 267.455 Q1981.91 270.117 1981.91 274.816 Q1981.91 279.515 1983.83 282.2 Q1985.77 284.862 1989.15 284.862 Q1992.53 284.862 1994.46 282.2 Q1996.4 279.515 1996.4 274.816 M1981.91 265.765 Q1983.25 263.45 1985.29 262.339 Q1987.35 261.205 1990.2 261.205 Q1994.92 261.205 1997.86 264.955 Q2000.82 268.705 2000.82 274.816 Q2000.82 280.927 1997.86 284.677 Q1994.92 288.427 1990.2 288.427 Q1987.35 288.427 1985.29 287.316 Q1983.25 286.182 1981.91 283.867 L1981.91 287.756 L1977.63 287.756 L1977.63 251.737 L1981.91 251.737 L1981.91 265.765 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2024.41 262.594 L2024.41 266.622 Q2022.6 265.696 2020.66 265.233 Q2018.71 264.77 2016.63 264.77 Q2013.46 264.77 2011.86 265.742 Q2010.29 266.714 2010.29 268.659 Q2010.29 270.14 2011.42 270.997 Q2012.56 271.83 2015.98 272.594 L2017.44 272.918 Q2021.98 273.89 2023.88 275.672 Q2025.8 277.432 2025.8 280.603 Q2025.8 284.214 2022.93 286.321 Q2020.08 288.427 2015.08 288.427 Q2013 288.427 2010.73 288.01 Q2008.48 287.617 2005.98 286.807 L2005.98 282.409 Q2008.34 283.635 2010.64 284.26 Q2012.93 284.862 2015.17 284.862 Q2018.18 284.862 2019.8 283.844 Q2021.42 282.802 2021.42 280.927 Q2021.42 279.191 2020.24 278.265 Q2019.08 277.339 2015.13 276.483 L2013.64 276.135 Q2009.69 275.302 2007.93 273.589 Q2006.17 271.853 2006.17 268.844 Q2006.17 265.186 2008.76 263.196 Q2011.35 261.205 2016.12 261.205 Q2018.48 261.205 2020.57 261.552 Q2022.65 261.899 2024.41 262.594 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2054.76 273.728 L2054.76 275.811 L2035.17 275.811 Q2035.45 280.209 2037.81 282.524 Q2040.2 284.816 2044.43 284.816 Q2046.89 284.816 2049.18 284.214 Q2051.49 283.612 2053.76 282.409 L2053.76 286.436 Q2051.47 287.408 2049.06 287.918 Q2046.65 288.427 2044.18 288.427 Q2037.97 288.427 2034.34 284.816 Q2030.73 281.205 2030.73 275.047 Q2030.73 268.682 2034.15 264.955 Q2037.6 261.205 2043.44 261.205 Q2048.67 261.205 2051.7 264.585 Q2054.76 267.941 2054.76 273.728 M2050.5 272.478 Q2050.45 268.983 2048.53 266.899 Q2046.63 264.816 2043.48 264.816 Q2039.92 264.816 2037.76 266.83 Q2035.64 268.844 2035.31 272.501 L2050.5 272.478 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2076.77 265.811 Q2076.05 265.395 2075.2 265.21 Q2074.36 265.001 2073.34 265.001 Q2069.73 265.001 2067.79 267.362 Q2065.87 269.7 2065.87 274.098 L2065.87 287.756 L2061.58 287.756 L2061.58 261.83 L2065.87 261.83 L2065.87 265.858 Q2067.21 263.497 2069.36 262.362 Q2071.51 261.205 2074.59 261.205 Q2075.03 261.205 2075.57 261.274 Q2076.1 261.321 2076.75 261.436 L2076.77 265.811 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2078.18 261.83 L2082.7 261.83 L2090.8 283.589 L2098.9 261.83 L2103.41 261.83 L2093.69 287.756 L2087.9 287.756 L2078.18 261.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2121.07 274.723 Q2115.91 274.723 2113.92 275.904 Q2111.93 277.084 2111.93 279.932 Q2111.93 282.2 2113.41 283.543 Q2114.92 284.862 2117.49 284.862 Q2121.03 284.862 2123.16 282.362 Q2125.31 279.839 2125.31 275.672 L2125.31 274.723 L2121.07 274.723 M2129.57 272.964 L2129.57 287.756 L2125.31 287.756 L2125.31 283.821 Q2123.85 286.182 2121.68 287.316 Q2119.5 288.427 2116.35 288.427 Q2112.37 288.427 2110.01 286.205 Q2107.67 283.959 2107.67 280.209 Q2107.67 275.834 2110.59 273.612 Q2113.53 271.39 2119.34 271.39 L2125.31 271.39 L2125.31 270.973 Q2125.31 268.034 2123.37 266.436 Q2121.45 264.816 2117.95 264.816 Q2115.73 264.816 2113.62 265.348 Q2111.51 265.881 2109.57 266.946 L2109.57 263.01 Q2111.91 262.108 2114.11 261.668 Q2116.31 261.205 2118.39 261.205 Q2124.01 261.205 2126.79 264.122 Q2129.57 267.038 2129.57 272.964 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2142.56 254.469 L2142.56 261.83 L2151.33 261.83 L2151.33 265.14 L2142.56 265.14 L2142.56 279.214 Q2142.56 282.385 2143.41 283.288 Q2144.29 284.191 2146.95 284.191 L2151.33 284.191 L2151.33 287.756 L2146.95 287.756 Q2142.02 287.756 2140.15 285.927 Q2138.27 284.075 2138.27 279.214 L2138.27 265.14 L2135.15 265.14 L2135.15 261.83 L2138.27 261.83 L2138.27 254.469 L2142.56 254.469 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2156.93 261.83 L2161.19 261.83 L2161.19 287.756 L2156.93 287.756 L2156.93 261.83 M2156.93 251.737 L2161.19 251.737 L2161.19 257.131 L2156.93 257.131 L2156.93 251.737 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2180.15 264.816 Q2176.72 264.816 2174.73 267.501 Q2172.74 270.163 2172.74 274.816 Q2172.74 279.469 2174.71 282.154 Q2176.7 284.816 2180.15 284.816 Q2183.55 284.816 2185.54 282.131 Q2187.53 279.446 2187.53 274.816 Q2187.53 270.21 2185.54 267.524 Q2183.55 264.816 2180.15 264.816 M2180.15 261.205 Q2185.7 261.205 2188.88 264.816 Q2192.05 268.427 2192.05 274.816 Q2192.05 281.182 2188.88 284.816 Q2185.7 288.427 2180.15 288.427 Q2174.57 288.427 2171.4 284.816 Q2168.25 281.182 2168.25 274.816 Q2168.25 268.427 2171.4 264.816 Q2174.57 261.205 2180.15 261.205 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2220.66 272.108 L2220.66 287.756 L2216.4 287.756 L2216.4 272.247 Q2216.4 268.566 2214.96 266.737 Q2213.53 264.909 2210.66 264.909 Q2207.21 264.909 2205.22 267.108 Q2203.23 269.307 2203.23 273.103 L2203.23 287.756 L2198.94 287.756 L2198.94 261.83 L2203.23 261.83 L2203.23 265.858 Q2204.75 263.52 2206.81 262.362 Q2208.9 261.205 2211.61 261.205 Q2216.07 261.205 2218.37 263.983 Q2220.66 266.737 2220.66 272.108 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2245.68 262.594 L2245.68 266.622 Q2243.87 265.696 2241.93 265.233 Q2239.99 264.77 2237.9 264.77 Q2234.73 264.77 2233.13 265.742 Q2231.56 266.714 2231.56 268.659 Q2231.56 270.14 2232.69 270.997 Q2233.83 271.83 2237.25 272.594 L2238.71 272.918 Q2243.25 273.89 2245.15 275.672 Q2247.07 277.432 2247.07 280.603 Q2247.07 284.214 2244.2 286.321 Q2241.35 288.427 2236.35 288.427 Q2234.27 288.427 2232 288.01 Q2229.75 287.617 2227.25 286.807 L2227.25 282.409 Q2229.62 283.635 2231.91 284.26 Q2234.2 284.862 2236.44 284.862 Q2239.45 284.862 2241.07 283.844 Q2242.69 282.802 2242.69 280.927 Q2242.69 279.191 2241.51 278.265 Q2240.36 277.339 2236.4 276.483 L2234.92 276.135 Q2230.96 275.302 2229.2 273.589 Q2227.44 271.853 2227.44 268.844 Q2227.44 265.186 2230.03 263.196 Q2232.63 261.205 2237.39 261.205 Q2239.75 261.205 2241.84 261.552 Q2243.92 261.899 2245.68 262.594 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip130)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1772.07,322.316 1914.87,322.316 \"/>\n<path clip-path=\"url(#clip130)\" d=\"M1938.67 305.036 L1958.53 305.036 L1958.53 308.971 L1943.34 308.971 L1943.34 319.156 L1957.05 319.156 L1957.05 323.091 L1943.34 323.091 L1943.34 339.596 L1938.67 339.596 L1938.67 305.036 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1962.3 313.67 L1966.56 313.67 L1966.56 339.596 L1962.3 339.596 L1962.3 313.67 M1962.3 303.577 L1966.56 303.577 L1966.56 308.971 L1962.3 308.971 L1962.3 303.577 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1975.47 303.577 L1979.73 303.577 L1979.73 339.596 L1975.47 339.596 L1975.47 303.577 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1992.86 306.309 L1992.86 313.67 L2001.63 313.67 L2001.63 316.98 L1992.86 316.98 L1992.86 331.054 Q1992.86 334.225 1993.71 335.128 Q1994.59 336.031 1997.26 336.031 L2001.63 336.031 L2001.63 339.596 L1997.26 339.596 Q1992.33 339.596 1990.45 337.767 Q1988.58 335.915 1988.58 331.054 L1988.58 316.98 L1985.45 316.98 L1985.45 313.67 L1988.58 313.67 L1988.58 306.309 L1992.86 306.309 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2029.41 325.568 L2029.41 327.651 L2009.83 327.651 Q2010.1 332.049 2012.46 334.364 Q2014.85 336.656 2019.08 336.656 Q2021.54 336.656 2023.83 336.054 Q2026.14 335.452 2028.41 334.249 L2028.41 338.276 Q2026.12 339.248 2023.71 339.758 Q2021.31 340.267 2018.83 340.267 Q2012.63 340.267 2008.99 336.656 Q2005.38 333.045 2005.38 326.887 Q2005.38 320.522 2008.81 316.795 Q2012.26 313.045 2018.09 313.045 Q2023.32 313.045 2026.35 316.425 Q2029.41 319.781 2029.41 325.568 M2025.15 324.318 Q2025.1 320.823 2023.18 318.739 Q2021.28 316.656 2018.14 316.656 Q2014.57 316.656 2012.42 318.67 Q2010.29 320.684 2009.96 324.341 L2025.15 324.318 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2051.42 317.651 Q2050.7 317.235 2049.85 317.05 Q2049.01 316.841 2048 316.841 Q2044.39 316.841 2042.44 319.202 Q2040.52 321.54 2040.52 325.938 L2040.52 339.596 L2036.24 339.596 L2036.24 313.67 L2040.52 313.67 L2040.52 317.698 Q2041.86 315.337 2044.01 314.202 Q2046.17 313.045 2049.25 313.045 Q2049.69 313.045 2050.22 313.114 Q2050.75 313.161 2051.4 313.276 L2051.42 317.651 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2077.02 325.568 L2077.02 327.651 L2057.44 327.651 Q2057.72 332.049 2060.08 334.364 Q2062.46 336.656 2066.7 336.656 Q2069.15 336.656 2071.45 336.054 Q2073.76 335.452 2076.03 334.249 L2076.03 338.276 Q2073.74 339.248 2071.33 339.758 Q2068.92 340.267 2066.45 340.267 Q2060.24 340.267 2056.61 336.656 Q2053 333.045 2053 326.887 Q2053 320.522 2056.42 316.795 Q2059.87 313.045 2065.7 313.045 Q2070.94 313.045 2073.97 316.425 Q2077.02 319.781 2077.02 325.568 M2072.76 324.318 Q2072.72 320.823 2070.8 318.739 Q2068.9 316.656 2065.75 316.656 Q2062.19 316.656 2060.03 318.67 Q2057.9 320.684 2057.58 324.341 L2072.76 324.318 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2101.07 317.605 L2101.07 303.577 L2105.33 303.577 L2105.33 339.596 L2101.07 339.596 L2101.07 335.707 Q2099.73 338.022 2097.67 339.156 Q2095.64 340.267 2092.76 340.267 Q2088.07 340.267 2085.1 336.517 Q2082.16 332.767 2082.16 326.656 Q2082.16 320.545 2085.1 316.795 Q2088.07 313.045 2092.76 313.045 Q2095.64 313.045 2097.67 314.179 Q2099.73 315.29 2101.07 317.605 M2086.56 326.656 Q2086.56 331.355 2088.48 334.04 Q2090.43 336.702 2093.81 336.702 Q2097.19 336.702 2099.13 334.04 Q2101.07 331.355 2101.07 326.656 Q2101.07 321.957 2099.13 319.295 Q2097.19 316.61 2093.81 316.61 Q2090.43 316.61 2088.48 319.295 Q2086.56 321.957 2086.56 326.656 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2139.41 303.624 Q2136.31 308.948 2134.8 314.156 Q2133.3 319.364 2133.3 324.712 Q2133.3 330.059 2134.8 335.313 Q2136.33 340.545 2139.41 345.846 L2135.7 345.846 Q2132.23 340.406 2130.5 335.151 Q2128.78 329.897 2128.78 324.712 Q2128.78 319.55 2130.5 314.318 Q2132.21 309.087 2135.7 303.624 L2139.41 303.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2165.01 309.874 L2165.01 318.832 L2177.9 318.832 L2177.9 322.767 L2165.01 322.767 L2165.01 331.725 L2161.12 331.725 L2161.12 322.767 L2148.23 322.767 L2148.23 318.832 L2161.12 318.832 L2161.12 309.874 L2165.01 309.874 M2148.23 335.661 L2177.9 335.661 L2177.9 339.596 L2148.23 339.596 L2148.23 335.661 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2188.81 335.661 L2196.44 335.661 L2196.44 309.295 L2188.13 310.962 L2188.13 306.702 L2196.4 305.036 L2201.07 305.036 L2201.07 335.661 L2208.71 335.661 L2208.71 339.596 L2188.81 339.596 L2188.81 335.661 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2227.6 317.05 Q2224.08 317.05 2222.19 319.596 Q2220.19 322.258 2220.19 326.656 Q2220.19 331.309 2222.16 333.994 Q2224.15 336.656 2227.6 336.656 Q2231 336.656 2233 333.971 Q2234.99 331.286 2234.99 326.656 Q2234.99 322.42 2233 319.596 Q2231.17 317.05 2227.6 317.05 M2227.6 313.67 L2241.75 313.67 L2241.75 317.929 L2236.98 317.929 Q2239.5 321.54 2239.5 326.656 Q2239.5 333.022 2236.33 336.633 Q2233.16 340.267 2227.6 340.267 Q2222.02 340.267 2218.88 336.633 Q2215.7 333.022 2215.7 326.656 Q2215.7 320.244 2218.88 316.656 Q2221.49 313.67 2227.6 313.67 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2246.93 303.624 L2250.63 303.624 Q2254.11 309.087 2255.82 314.318 Q2257.56 319.55 2257.56 324.712 Q2257.56 329.897 2255.82 335.151 Q2254.11 340.406 2250.63 345.846 L2246.93 345.846 Q2250.01 340.545 2251.51 335.313 Q2253.04 330.059 2253.04 324.712 Q2253.04 319.364 2251.51 314.156 Q2250.01 308.948 2246.93 303.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"","category":"page"},{"location":"examples/kalman-filter/","page":"Kalman Filter","title":"Kalman Filter","text":"This page was generated using Literate.jl.","category":"page"}]
}
